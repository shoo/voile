[
 {
  "name" : "voile",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/package.d",
  "comment" : "Voile The Magic Library は、なくても特に困らない…$(BR)\nというか、使おうと思わない限り使わなそうな小物を集めたもの。$(BR)\nまぁ、ある意味無駄ってやつよ。$(BR)\nそれが魔法のあるべき姿ってことね。\n\n\nSee_Also:\n$(UL\n\t$(LI $(LINK2 _index.html, voile)\n\t$(UL\n\t\t$(LI $(LINK2 _voile.benchmark.html, benchmark))\n\t\t$(LI $(LINK2 _voile.dataformatter.html, dataformatter))\n\t\t$(LI $(LINK2 _voile.handler.html, handler))\n\t\t$(LI $(LINK2 _voile.json.html, json))\n\t\t$(LI $(LINK2 _voile.judge.html, judge))\n\t\t$(LI $(LINK2 _voile.misc.html, misc))\n\t\t$(LI $(LINK2 _voile.stm.html, stm))\n\t\t$(LI $(LINK2 _voile.sync.html, sync))\n\t\t$(LI $(LINK2 _voile.unique.html, unique))\n\t\t$(LI $(LINK2 _voile.fs.html, fs))\n\t))\n)\nAuthors: P.Knowledge, SHOO\nLicense: NYSL ( $(LINK http://www.kmonos.net/nysl/) )\nMacros:\n\tTITLE =Voile The Magic Library\n",
  "members" : [
   {
    "name" : "voile.benchmark",
    "kind" : "import",
    "line" : 31,
    "char" : 15
   },
   {
    "name" : "voile.dataformatter",
    "kind" : "import",
    "line" : 32,
    "char" : 15
   },
   {
    "name" : "voile.fs",
    "kind" : "import",
    "line" : 33,
    "char" : 15
   },
   {
    "name" : "voile.handler",
    "kind" : "import",
    "line" : 34,
    "char" : 15
   },
   {
    "name" : "voile.json",
    "kind" : "import",
    "line" : 35,
    "char" : 15
   },
   {
    "name" : "voile.judge",
    "kind" : "import",
    "line" : 36,
    "char" : 15
   },
   {
    "name" : "voile.log",
    "kind" : "import",
    "line" : 37,
    "char" : 15
   },
   {
    "name" : "voile.misc",
    "kind" : "import",
    "line" : 38,
    "char" : 15
   },
   {
    "name" : "voile.parseopt",
    "kind" : "import",
    "line" : 39,
    "char" : 15
   },
   {
    "name" : "voile.sync",
    "kind" : "import",
    "line" : 40,
    "char" : 15
   },
   {
    "name" : "voile.unique",
    "kind" : "import",
    "line" : 41,
    "char" : 15
   }
  ]
 },
 {
  "name" : "voile.benchmark",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/benchmark.d",
  "comment" : " 性能評価に関するモジュール\n\n ベンチマークのヘルパクラスや、所定位置を通過した時間の記録、呼び出された回数\n などを記録することのできるクラスを用意した。\n 関数の実行にかかる時間を短縮し、スピードアップするのに役に立つかもしれない。\n $(UL\n     $(LI Benchmark)\n     $(LI FootPrint)\n     $(LI CallCounter)\n )\n Date: December 08, 2008\n Authors:\n     P.Knowledge, SHOO\n License:\n     NYSL ( http://www.kmonos.net/nysl/ )\n",
  "members" : [
   {
    "name" : "std.exception",
    "kind" : "import",
    "line" : 21,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.string",
    "kind" : "import",
    "line" : 21,
    "char" : 23,
    "protection" : "private"
   },
   {
    "name" : "std.array",
    "kind" : "import",
    "line" : 21,
    "char" : 35,
    "protection" : "private"
   },
   {
    "name" : "std.bigint",
    "kind" : "import",
    "line" : 21,
    "char" : 46,
    "protection" : "private"
   },
   {
    "name" : "std.conv",
    "kind" : "import",
    "line" : 21,
    "char" : 58,
    "protection" : "private"
   },
   {
    "name" : "std.datetime",
    "kind" : "import",
    "line" : 22,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.datetime.stopwatch",
    "kind" : "import",
    "line" : 23,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "StopWatch",
     "AutoStart"
    ]
   },
   {
    "name" : "core.thread",
    "kind" : "import",
    "line" : 24,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "FootPrintBenchmark",
    "kind" : "struct",
    "comment" : " 足跡を記録する\n\n このクラスは、ファイルと行番号ごとに足跡をつけ、前回の足跡からどの程度の時間\n が経過したかを記録し、時間がかかっている個所を特定するためのクラスです。\n------------------------------------------------------------------------------\nvoid main()\n{\n    scope fp = new FootPrint;\n    fp.stamp(__FILE__,__LINE__);\n    func1();\n    fp.stamp(__FILE__,__LINE__);\n    func2();\n    fp.stamp(__FILE__,__LINE__);\n    Stdout(\"Stamp infomations\").newline;\n    foreach (d; fp.result)\n    {\n        Stdout.formatln(\"{}({}): {} sec\", d.file, d.line, d.time.interval);\n    }\n}\n------------------------------------------------------------------------------\n For profiling.\n\n It stamps the code footprints for searching bottlenecks.\n When not enough to profile in -profile, this object is useful.\n\n",
    "line" : 56,
    "char" : 1,
    "members" : [
     {
      "name" : "Data",
      "kind" : "struct",
      "comment" : " 記録されるデータ\n",
      "line" : 61,
      "char" : 9,
      "members" : [
       {
        "name" : "time",
        "kind" : "variable",
        "comment" : "時間\n",
        "line" : 64,
        "char" : 12,
        "deco" : "S4core4time8Duration",
        "offset" : 0
       },
       {
        "name" : "file",
        "kind" : "variable",
        "comment" : "呼び出し元ファイル名\n",
        "line" : 68,
        "char" : 10,
        "deco" : "Aya",
        "offset" : 8
       },
       {
        "name" : "line",
        "kind" : "variable",
        "comment" : "呼び出し元行数\n",
        "line" : 72,
        "char" : 8,
        "deco" : "k",
        "offset" : 24
       },
       {
        "name" : "toString",
        "kind" : "function",
        "comment" : " 文字列表現\n",
        "line" : 78,
        "char" : 10,
        "deco" : "xFZAya",
        "endline" : 81,
        "endchar" : 3
       }
      ]
     },
     {
      "name" : "_sw",
      "kind" : "variable",
      "protection" : "private",
      "line" : 84,
      "char" : 20,
      "deco" : "S3std8datetime9stopwatch9StopWatch",
      "offset" : 0
     },
     {
      "name" : "_datas",
      "kind" : "variable",
      "protection" : "private",
      "line" : 87,
      "char" : 39,
      "deco" : "S3std5array__T8AppenderTAyS5voile9benchmark18FootPrintBenchmark4DataZQCd",
      "offset" : 24
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : " 自動測定コンストラクタ\n\n AutoStartの値によって、自動的にストップウォッチ開始するか決まります。\n",
      "line" : 95,
      "char" : 2,
      "deco" : "FNcE3std8typecons__T4FlagVAyaa9_6175746f5374617274ZQBfZS5voile9benchmark18FootPrintBenchmark",
      "originalType" : "ref (AutoStart as)",
      "parameters" : [
       {
        "name" : "as",
        "deco" : "E3std8typecons__T4FlagVAyaa9_6175746f5374617274ZQBf"
       }
      ],
      "endline" : 98,
      "endchar" : 2
     },
     {
      "name" : "start",
      "kind" : "function",
      "comment" : " ストップウォッチスタート\n\n 初めてのスタートの場合、この時刻からの時間を測定して足跡に記録します。\n 一時停止からの復帰の場合、継続的に時間の測定を行います。\n",
      "line" : 107,
      "char" : 7,
      "deco" : "FZv",
      "endline" : 110,
      "endchar" : 2
     },
     {
      "name" : "stop",
      "kind" : "function",
      "comment" : " ストップウォッチストップ\n\n 一時停止です。再び復帰する場合はstart()します\n",
      "line" : 118,
      "char" : 7,
      "deco" : "FZv",
      "endline" : 121,
      "endchar" : 2
     },
     {
      "name" : "reset",
      "kind" : "function",
      "comment" : " ストップウォッチリセット\n",
      "line" : 127,
      "char" : 7,
      "deco" : "FZv",
      "endline" : 135,
      "endchar" : 2
     },
     {
      "name" : "clear",
      "kind" : "function",
      "comment" : " データをクリアします。\n\n ストップウォッチの状態はそのままです。\n ストップウォッチをリセットする場合はresetをコールしてください\n",
      "line" : 144,
      "char" : 7,
      "deco" : "FZv",
      "endline" : 147,
      "endchar" : 2
     },
     {
      "name" : "stamp",
      "kind" : "function",
      "comment" : " 足跡を記録します。\n\n この関数を呼び出した時点での時間と、呼び出し元を記録してデータに追加しま\n す。\n",
      "line" : 156,
      "char" : 7,
      "deco" : "FAyakZv",
      "originalType" : "void(string f = __FILE__, uint l = __LINE__)",
      "parameters" : [
       {
        "name" : "f",
        "deco" : "Aya",
        "default" : "__FILE__"
       },
       {
        "name" : "l",
        "deco" : "k",
        "default" : "cast(uint)__LINE__"
       }
      ],
      "endline" : 159,
      "endchar" : 2
     },
     {
      "name" : "intervals",
      "kind" : "function",
      "comment" : " 各データのそれぞれの呼び出し間隔を返します。\n",
      "line" : 165,
      "char" : 20,
      "deco" : "FZAye",
      "endline" : 177,
      "endchar" : 2
     },
     {
      "name" : "datas",
      "kind" : "function",
      "comment" : " 記録されたデータそのものを返します\n",
      "line" : 183,
      "char" : 20,
      "deco" : "FZAyS5voile9benchmark18FootPrintBenchmark4Data",
      "endline" : 186,
      "endchar" : 2
     },
     {
      "name" : "intervalDatas",
      "kind" : "function",
      "comment" : " 記録されたデータそのものを返します\n",
      "line" : 192,
      "char" : 20,
      "deco" : "FZAyS5voile9benchmark18FootPrintBenchmark4Data",
      "endline" : 206,
      "endchar" : 2
     },
     {
      "name" : "opSlice",
      "kind" : "alias",
      "line" : 208,
      "char" : 2,
      "originalType" : "datas"
     }
    ]
   },
   {
    "name" : "CallCounter",
    "kind" : "class",
    "comment" : " 呼び出しの情報を記録する\n\n このクラスは呼び出した回数を記録する。呼び出された回数が多いほどその周囲は\n 時間に気をつけるようにするとよい。\n",
    "line" : 218,
    "char" : 1,
    "members" : [
     {
      "name" : "Data",
      "kind" : "struct",
      "comment" : " 記録されるデータ\n",
      "line" : 223,
      "char" : 26,
      "members" : [
       {
        "name" : "file",
        "kind" : "variable",
        "comment" : "ファイル名\n",
        "line" : 226,
        "char" : 10,
        "storageClass" : [
         "immutable"
        ],
        "deco" : "yAa",
        "originalType" : "string",
        "offset" : 0
       },
       {
        "name" : "line",
        "kind" : "variable",
        "comment" : "行番号\n",
        "line" : 228,
        "char" : 8,
        "storageClass" : [
         "immutable"
        ],
        "deco" : "yk",
        "originalType" : "uint",
        "offset" : 16
       },
       {
        "name" : "count",
        "kind" : "variable",
        "comment" : "回数\n",
        "line" : 230,
        "char" : 9,
        "storageClass" : [
         "immutable"
        ],
        "deco" : "ym",
        "originalType" : "ulong",
        "offset" : 24
       }
      ]
     },
     {
      "name" : "_data",
      "kind" : "variable",
      "protection" : "private",
      "line" : 232,
      "char" : 30,
      "deco" : "HAyaHkm",
      "offset" : 16
     },
     {
      "name" : "call",
      "kind" : "function",
      "comment" : " 呼び出す\n\n この関数を呼び出すことで、その場所の呼び出し回数カウントしていく。\n",
      "line" : 240,
      "char" : 7,
      "deco" : "FAyakZv",
      "originalType" : "void(string file = __FILE__, uint line = __LINE__)",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "Aya",
        "default" : "__FILE__"
       },
       {
        "name" : "line",
        "deco" : "k",
        "default" : "cast(uint)__LINE__"
       }
      ],
      "endline" : 259,
      "endchar" : 2
     },
     {
      "name" : "result",
      "kind" : "function",
      "comment" : " 結果を返す\n\n このクラスは呼び出した回数を記録する。呼び出された回数が多いほどその周囲は\n 時間に気をつけるようにするとよい。\n",
      "line" : 268,
      "char" : 20,
      "deco" : "FZAyS5voile9benchmark11CallCounter4Data",
      "endline" : 279,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "ProfileData",
    "kind" : "struct",
    "comment" : "\n",
    "line" : 286,
    "char" : 1,
    "members" : [
     {
      "name" : "thread",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 289,
      "char" : 15,
      "deco" : "C4core6thread8osthread6Thread",
      "originalType" : "Thread",
      "offset" : 0
     },
     {
      "name" : "file",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 291,
      "char" : 15,
      "deco" : "Aya",
      "offset" : 8
     },
     {
      "name" : "line",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 293,
      "char" : 15,
      "deco" : "k",
      "offset" : 24
     },
     {
      "name" : "time",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 295,
      "char" : 15,
      "deco" : "S4core4time12TickDuration",
      "offset" : 32
     },
     {
      "name" : "duration",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 297,
      "char" : 15,
      "deco" : "S4core4time12TickDuration",
      "offset" : 40
     }
    ]
   }
  ]
 },
 {
  "name" : "voile.dataformatter",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/dataformatter.d",
  "comment" : " judgement モジュール\n\n 複数の要素でチェックを行いたい場合に使用することのできる Judgement が利用可能\n\n Date: September 07, 2011\n Authors:\n     P.Knowledge, SHOO\n License:\n     NYSL ( http://www.kmonos.net/nysl/ )\n\n",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 16,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.typecons",
    "kind" : "import",
    "line" : 16,
    "char" : 20,
    "protection" : "private"
   },
   {
    "name" : "std.range",
    "kind" : "import",
    "line" : 16,
    "char" : 34,
    "protection" : "private"
   },
   {
    "name" : "std.array",
    "kind" : "import",
    "line" : 16,
    "char" : 45,
    "protection" : "private"
   },
   {
    "name" : "std.system",
    "kind" : "import",
    "line" : 16,
    "char" : 56,
    "protection" : "private"
   },
   {
    "name" : "core.bitop",
    "kind" : "import",
    "line" : 17,
    "char" : 8,
    "protection" : "private"
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 22,
    "char" : 1,
    "name" : "DataWriter",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     },
     {
      "name" : "rangeEndian",
      "kind" : "value",
      "deco" : "E3std6system6Endian",
      "defaultValue" : "Endian.littleEndian"
     }
    ],
    "constraint" : "isOutputRange!(Range, const(ubyte)[]) || isOutputRange!(Range, ubyte) || isOutputRange!(Range, const(void)[])",
    "members" : [
     {
      "name" : "DataWriter",
      "kind" : "struct",
      "line" : 22,
      "char" : 1,
      "members" : [
       {
        "name" : "range",
        "kind" : "variable",
        "line" : 28,
        "char" : 8,
        "type" : "Range"
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 33,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T == ubyte) || is(Unqual!T == char) || is(Unqual!T == byte)",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 33,
          "char" : 7,
          "type" : "void(in T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "in"
            ]
           }
          ],
          "endline" : 46,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 50,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T == const(ubyte)[]) || is(Unqual!T == const(byte)[]) || is(Unqual!T == const(char)[]) || is(Unqual!T == const(void)[]) || is(Unqual!T == immutable(ubyte)[]) || is(Unqual!T == immutable(byte)[]) || is(Unqual!T == string) || is(Unqual!T == immutable(void)[]) || is(Unqual!T == ubyte[]) || is(Unqual!T == byte[]) || is(Unqual!T == char[]) || is(Unqual!T == void[])",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 50,
          "char" : 7,
          "type" : "void(in T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "in"
            ]
           }
          ],
          "endline" : 91,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 95,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T == ushort) || is(Unqual!T == short) || is(Unqual!T == wchar)",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 95,
          "char" : 7,
          "type" : "void(in T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "in"
            ]
           }
          ],
          "endline" : 113,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 117,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T == uint) || is(Unqual!T == int) || is(Unqual!T == float) || is(Unqual!T == ifloat) || is(Unqual!T == dchar)",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 117,
          "char" : 7,
          "type" : "void(in T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "in"
            ]
           }
          ],
          "endline" : 131,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 135,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T == ulong) || is(Unqual!T == long) || is(Unqual!T == double) || is(Unqual!T == idouble)",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 135,
          "char" : 7,
          "type" : "void(T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T"
           }
          ],
          "endline" : 153,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 157,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T U == enum) && isOutputRange!(typeof(this), OriginalType!T)",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 157,
          "char" : 7,
          "type" : "void(in T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "in"
            ]
           }
          ],
          "endline" : 161,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 165,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "SrcRange",
          "kind" : "type"
         }
        ],
        "constraint" : "isStaticArray!(Unqual!SrcRange)",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 165,
          "char" : 7,
          "type" : "void(ref SrcRange r)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "SrcRange",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 169,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 173,
        "char" : 7,
        "name" : "put",
        "parameters" : [
         {
          "name" : "SrcRange",
          "kind" : "type"
         }
        ],
        "constraint" : "isInputRange!(Unqual!SrcRange) && !is(Unqual!SrcRange == const(ubyte)[]) && !is(Unqual!SrcRange == const(byte)[]) && !is(Unqual!SrcRange == const(char)[]) && !is(Unqual!SrcRange == const(void)[]) && !is(Unqual!SrcRange == immutable(ubyte)[]) && !is(Unqual!SrcRange == immutable(byte)[]) && !is(Unqual!SrcRange == string) && !is(Unqual!SrcRange == immutable(void)[]) && !is(Unqual!SrcRange == ubyte[]) && !is(Unqual!SrcRange == byte[]) && !is(Unqual!SrcRange == char[]) && !is(Unqual!SrcRange == void[]) && is(typeof(()\n{\nforeach (e; r)\n{\nput(e);\n}\n}\n()))",
        "members" : [
         {
          "name" : "put",
          "kind" : "function",
          "line" : 173,
          "char" : 7,
          "type" : "void(SrcRange r)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "SrcRange"
           }
          ],
          "endline" : 205,
          "endchar" : 2
         }
        ]
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 210,
    "char" : 55,
    "name" : "leWriter",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isStaticArray!Range",
    "members" : [
     {
      "name" : "leWriter",
      "kind" : "function",
      "line" : 210,
      "char" : 55,
      "type" : "DataWriter!(ElementType!Range[], Endian.littleEndian)(ref Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 214,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 218,
    "char" : 41,
    "name" : "leWriter",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isOutputRange!(Range, ubyte[]) || isOutputRange!(Range, ubyte)",
    "members" : [
     {
      "name" : "leWriter",
      "kind" : "function",
      "line" : 218,
      "char" : 41,
      "type" : "DataWriter!(Range, Endian.littleEndian)(Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range"
       }
      ],
      "endline" : 223,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 227,
    "char" : 52,
    "name" : "beWriter",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isStaticArray!Range",
    "members" : [
     {
      "name" : "beWriter",
      "kind" : "function",
      "line" : 227,
      "char" : 52,
      "type" : "DataWriter!(ElementType!Range[], Endian.bigEndian)(ref Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 231,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 235,
    "char" : 38,
    "name" : "beWriter",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isOutputRange!(Range, ubyte[]) || isOutputRange!(Range, ubyte)",
    "members" : [
     {
      "name" : "beWriter",
      "kind" : "function",
      "line" : 235,
      "char" : 38,
      "type" : "DataWriter!(Range, Endian.bigEndian)(Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range"
       }
      ],
      "endline" : 240,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L243_C9",
    "kind" : "function",
    "line" : 243,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 431,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 431,
    "char" : 6,
    "name" : "pick",
    "parameters" : [
     {
      "name" : "R",
      "kind" : "type"
     },
     {
      "name" : "E",
      "kind" : "type"
     }
    ],
    "constraint" : "!isArray!E",
    "members" : [
     {
      "name" : "pick",
      "kind" : "function",
      "line" : 431,
      "char" : 6,
      "type" : "void(R r, ref E e)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "R"
       },
       {
        "name" : "e",
        "type" : "E",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 491,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 495,
    "char" : 6,
    "name" : "pick",
    "parameters" : [
     {
      "name" : "R",
      "kind" : "type"
     },
     {
      "name" : "E",
      "kind" : "type"
     }
    ],
    "constraint" : "isDynamicArray!E",
    "members" : [
     {
      "name" : "pick",
      "kind" : "function",
      "line" : 495,
      "char" : 6,
      "type" : "void(ref R r, E e)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "R",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "e",
        "type" : "E"
       }
      ],
      "endline" : 535,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 539,
    "char" : 6,
    "name" : "pick",
    "parameters" : [
     {
      "name" : "R",
      "kind" : "type"
     },
     {
      "name" : "E",
      "kind" : "type"
     }
    ],
    "constraint" : "isStaticArray!E",
    "members" : [
     {
      "name" : "pick",
      "kind" : "function",
      "line" : 539,
      "char" : 6,
      "type" : "void(ref R r, ref E e)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "R",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "e",
        "type" : "E",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 543,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 547,
    "char" : 6,
    "name" : "isEntryRange",
    "parameters" : [
     {
      "name" : "R",
      "kind" : "type"
     },
     {
      "name" : "E",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isEntryRange",
      "kind" : "variable",
      "line" : 547,
      "char" : 6,
      "storageClass" : [
       "enum"
      ],
      "init" : "is(typeof(()\n{\nR r = void;\nE e = void;\nbool b = r.empty;\npick!(R, E)(r, e);\n}\n()))"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 561,
    "char" : 1,
    "name" : "DataReader",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     },
     {
      "name" : "rangeEndian",
      "kind" : "value",
      "deco" : "E3std6system6Endian",
      "defaultValue" : "Endian.littleEndian"
     }
    ],
    "constraint" : "isEntryRange!(Range, ubyte[]) || isEntryRange!(Range, ubyte) || isEntryRange!(Range, void[])",
    "members" : [
     {
      "name" : "DataReader",
      "kind" : "struct",
      "line" : 561,
      "char" : 1,
      "members" : [
       {
        "name" : "range",
        "kind" : "variable",
        "line" : 567,
        "char" : 8,
        "type" : "Range"
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : "\n",
        "line" : 570,
        "char" : 2,
        "type" : "(Range r)",
        "parameters" : [
         {
          "name" : "r",
          "type" : "Range"
         }
        ],
        "endline" : 573,
        "endchar" : 2
       },
       {
        "kind" : "template",
        "comment" : "EntryRange Primitive\n",
        "line" : 577,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(T == ubyte) || is(T == char) || is(T == byte)",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 577,
          "char" : 7,
          "type" : "void(ref T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 588,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 592,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(T == ubyte[]) || is(T == void[]) || is(T == char[]) || is(T == byte[])",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 592,
          "char" : 7,
          "type" : "void(T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T"
           }
          ],
          "endline" : 614,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 618,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(T == ushort) || is(T == short) || is(T == wchar)",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 618,
          "char" : 7,
          "type" : "void(ref T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 636,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 640,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(T == uint) || is(T == int) || is(T == float) || is(T == ifloat) || is(T == dchar)",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 640,
          "char" : 7,
          "type" : "void(ref T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 656,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 660,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(T == ulong) || is(T == long) || is(T == double) || is(T == idouble)",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 660,
          "char" : 7,
          "type" : "void(ref T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 681,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 684,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Unqual!T U == enum) && isEntryRange!(typeof(this), OriginalType!T)",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 684,
          "char" : 7,
          "type" : "void(ref T v)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 688,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 692,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "SrcRange",
          "kind" : "type"
         }
        ],
        "constraint" : "isStaticArray!SrcRange",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 692,
          "char" : 7,
          "type" : "void(ref SrcRange r)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "SrcRange",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 696,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 699,
        "char" : 7,
        "name" : "pick",
        "parameters" : [
         {
          "name" : "DstRange",
          "kind" : "type"
         }
        ],
        "constraint" : "isInputRange!DstRange && !is(ElementType!DstRange == ubyte) && !is(DstRange == void[]) && !is(ElementType!DstRange == byte) && !is(DstRange == char[]) && is(typeof(()\n{\nforeach (ref e; r)\n{\npick(e);\n}\n}\n()))",
        "members" : [
         {
          "name" : "pick",
          "kind" : "function",
          "line" : 699,
          "char" : 7,
          "type" : "void(DstRange r)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "DstRange"
           }
          ],
          "endline" : 718,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "empty",
        "kind" : "function",
        "comment" : "Range primitive\n",
        "line" : 721,
        "char" : 7,
        "type" : "const @property bool()",
        "endline" : 724,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 728,
    "char" : 55,
    "name" : "leReader",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isStaticArray!Range",
    "members" : [
     {
      "name" : "leReader",
      "kind" : "function",
      "line" : 728,
      "char" : 55,
      "type" : "DataReader!(ElementType!Range[], Endian.littleEndian)(ref Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 732,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 735,
    "char" : 41,
    "name" : "leReader",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isOutputRange!(Range, ubyte[]) || isOutputRange!(Range, ubyte)",
    "members" : [
     {
      "name" : "leReader",
      "kind" : "function",
      "line" : 735,
      "char" : 41,
      "type" : "DataReader!(Range, Endian.littleEndian)(Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range"
       }
      ],
      "endline" : 740,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 743,
    "char" : 52,
    "name" : "beReader",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isStaticArray!Range",
    "members" : [
     {
      "name" : "beReader",
      "kind" : "function",
      "line" : 743,
      "char" : 52,
      "type" : "DataReader!(ElementType!Range[], Endian.bigEndian)(ref Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 747,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 750,
    "char" : 38,
    "name" : "beReader",
    "parameters" : [
     {
      "name" : "Range",
      "kind" : "type"
     }
    ],
    "constraint" : "isOutputRange!(Range, ubyte[]) || isOutputRange!(Range, ubyte)",
    "members" : [
     {
      "name" : "beReader",
      "kind" : "function",
      "line" : 750,
      "char" : 38,
      "type" : "DataReader!(Range, Endian.bigEndian)(Range r)",
      "parameters" : [
       {
        "name" : "r",
        "type" : "Range"
       }
      ],
      "endline" : 755,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L758_C9",
    "kind" : "function",
    "line" : 758,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 852,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.fs",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/fs.d",
  "members" : [
   {
    "name" : "std.file",
    "kind" : "import",
    "line" : 3,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.path",
    "kind" : "import",
    "line" : 3,
    "char" : 18,
    "protection" : "private"
   },
   {
    "name" : "std.exception",
    "kind" : "import",
    "line" : 3,
    "char" : 28,
    "protection" : "private"
   },
   {
    "name" : "std.stdio",
    "kind" : "import",
    "line" : 3,
    "char" : 43,
    "protection" : "private"
   },
   {
    "name" : "std.datetime",
    "kind" : "import",
    "line" : 3,
    "char" : 54,
    "protection" : "private"
   },
   {
    "name" : "std.regex",
    "kind" : "import",
    "line" : 3,
    "char" : 68,
    "protection" : "private"
   },
   {
    "name" : "std.json",
    "kind" : "import",
    "line" : 3,
    "char" : 79,
    "protection" : "private"
   },
   {
    "name" : "std.process",
    "kind" : "import",
    "line" : 4,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "voile.handler",
    "kind" : "import",
    "line" : 5,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "splitPath",
    "kind" : "function",
    "comment" : " パスを分解してパンくずリストにする\n\n Params:\n     path  = 変換したい絶対/相対パス\n",
    "line" : 15,
    "char" : 17,
    "storageClass" : [
     "static"
    ],
    "deco" : "FNaNfAyaZAQf",
    "parameters" : [
     {
      "name" : "path",
      "deco" : "Aya"
     }
    ],
    "endline" : 20,
    "endchar" : 1
   },
   {
    "name" : "joinPath",
    "kind" : "function",
    "comment" : " パンくずリストをPosixパスに再構築する\n\n Params:\n     path      = 変換したい絶対/相対パス\n     delimiter = パスの区切り文字を指定する\n",
    "line" : 31,
    "char" : 15,
    "storageClass" : [
     "static"
    ],
    "deco" : "FNaNfAAyaQdZQg",
    "originalType" : "pure @safe string(string[] path, string delimiter = dirSeparator)",
    "parameters" : [
     {
      "name" : "path",
      "deco" : "AAya"
     },
     {
      "name" : "delimiter",
      "deco" : "Aya",
      "default" : "\"/\""
     }
    ],
    "endline" : 35,
    "endchar" : 1
   },
   {
    "name" : "joinWindowsPath",
    "kind" : "function",
    "comment" : " パンくずリストをWindowsパスに再構築する\n\n Params:\n     path  = 変換したい絶対/相対パス\n",
    "line" : 43,
    "char" : 15,
    "storageClass" : [
     "static"
    ],
    "deco" : "FNaNfAAyaZQe",
    "parameters" : [
     {
      "name" : "path",
      "deco" : "AAya"
     }
    ],
    "endline" : 46,
    "endchar" : 1
   },
   {
    "name" : "joinPosixPath",
    "kind" : "function",
    "comment" : " パンくずリストをPosixパスに再構築する\n\n Params:\n     path  = 変換したい絶対/相対パス\n",
    "line" : 54,
    "char" : 15,
    "storageClass" : [
     "static"
    ],
    "deco" : "FNaNfAAyaZQe",
    "parameters" : [
     {
      "name" : "path",
      "deco" : "AAya"
     }
    ],
    "endline" : 57,
    "endchar" : 1
   },
   {
    "name" : "posixPath",
    "kind" : "function",
    "comment" : " パンをPosixパスに変換する(/を使うように変換)\n\n Params:\n     path  = 変換したい絶対/相対パス\n",
    "line" : 66,
    "char" : 8,
    "deco" : "FAyaZQe",
    "parameters" : [
     {
      "name" : "path",
      "deco" : "Aya"
     }
    ],
    "endline" : 69,
    "endchar" : 1
   },
   {
    "name" : "windowsPath",
    "kind" : "function",
    "comment" : " パンをWindowsパスに変換する(\\を使うように変換)\n\n Params:\n     path  = 変換したい絶対/相対パス\n",
    "line" : 77,
    "char" : 8,
    "deco" : "FAyaZQe",
    "parameters" : [
     {
      "name" : "path",
      "deco" : "Aya"
     }
    ],
    "endline" : 80,
    "endchar" : 1
   },
   {
    "name" : "nullFile",
    "kind" : "function",
    "protection" : "private",
    "line" : 92,
    "char" : 15,
    "deco" : "FAyaZS3std5stdio4File",
    "parameters" : [
     {
      "name" : "attr",
      "deco" : "Aya"
     }
    ],
    "endline" : 95,
    "endchar" : 2
   },
   {
    "name" : "joinNativePath",
    "kind" : "alias",
    "comment" : "In Posix\n",
    "line" : 108,
    "char" : 2,
    "originalType" : "joinPosixPath"
   },
   {
    "name" : "nativePath",
    "kind" : "alias",
    "comment" : "ditto\n",
    "line" : 110,
    "char" : 2,
    "originalType" : "posixPath"
   },
   {
    "name" : "FileSystem",
    "kind" : "struct",
    "comment" : " ファイルシステムの操作に関するヘルパ\n",
    "line" : 117,
    "char" : 1,
    "members" : [
     {
      "name" : "workDir",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 120,
      "char" : 9,
      "deco" : "Aya",
      "init" : "\".\"",
      "offset" : 0
     },
     {
      "name" : "onCreating",
      "kind" : "variable",
      "comment" : "作成前に呼ばれる。作成しない場合は例外を投げる\n",
      "line" : 123,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyakZvZQs",
      "originalType" : "Handler!(void delegate(string target, uint retrycnt))",
      "offset" : 16
     },
     {
      "name" : "onCreated",
      "kind" : "variable",
      "comment" : "作成後に呼ばれる。\n",
      "line" : 125,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyaZvZQr",
      "originalType" : "Handler!(void delegate(string target))",
      "offset" : 24
     },
     {
      "name" : "onCreateFailed",
      "kind" : "variable",
      "comment" : "作成に失敗したら呼ばれる。処理を継続を継続するならtrueを返す。\n",
      "line" : 127,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyaC9ExceptionZbZQBc",
      "originalType" : "Handler!(bool delegate(string target, Exception e))",
      "offset" : 32
     },
     {
      "name" : "onCopying",
      "kind" : "variable",
      "comment" : "コピー前に呼ばれる。コピーしない場合は例外を投げる。\n",
      "line" : 129,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyakZvZQs",
      "originalType" : "Handler!(void delegate(string target, uint retrycnt))",
      "offset" : 40
     },
     {
      "name" : "onCopied",
      "kind" : "variable",
      "comment" : "コピー後に呼ばれる。\n",
      "line" : 131,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyaQdZvZQt",
      "originalType" : "Handler!(void delegate(string src, string target))",
      "offset" : 48
     },
     {
      "name" : "onCopyFailed",
      "kind" : "variable",
      "comment" : "コピー失敗したら呼ばれる。処理を継続を継続するならtrueを返す。\n",
      "line" : 133,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyaQdC9ExceptionZbZQBe",
      "originalType" : "Handler!(bool delegate(string src, string target, Exception e))",
      "offset" : 56
     },
     {
      "name" : "onRemoving",
      "kind" : "variable",
      "comment" : "削除前に呼ばれる。削除しない場合は例外を投げる。\n",
      "line" : 135,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyakZvZQs",
      "originalType" : "Handler!(void delegate(string target, uint retrycnt))",
      "offset" : 64
     },
     {
      "name" : "onRemoved",
      "kind" : "variable",
      "comment" : "削除後に呼ばれる。\n",
      "line" : 137,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyaZvZQr",
      "originalType" : "Handler!(void delegate(string target))",
      "offset" : 72
     },
     {
      "name" : "onRemoveFailed",
      "kind" : "variable",
      "comment" : "削除に失敗したら呼ばれる。処理を継続を継続するならtrueを返す。\n",
      "line" : 139,
      "char" : 66,
      "deco" : "S5voile7handler__T7HandlerTDFAyaC9ExceptionZbZQBc",
      "originalType" : "Handler!(bool delegate(string target, Exception e))",
      "offset" : 80
     },
     {
      "name" : "absolutePath",
      "kind" : "function",
      "comment" : " 絶対パスに変換する\n\n Params:\n     target     = 変換したい相対パス(何も指定しないとworkDirの絶対パスが返る)\n     targetPath = 変換したい相対パスのパンくずリスト\n     base       = 基準となるパス(このパスの基準はworkDir)\n",
      "line" : 149,
      "char" : 9,
      "deco" : "xFNfZAya",
      "endline" : 154,
      "endchar" : 2
     },
     {
      "name" : "absolutePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 156,
      "char" : 9,
      "deco" : "xFNfAyaZQe",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 161,
      "endchar" : 2
     },
     {
      "name" : "absolutePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 163,
      "char" : 9,
      "deco" : "xFNfAAyaZQe",
      "parameters" : [
       {
        "name" : "targetPath",
        "deco" : "AAya"
       }
      ],
      "endline" : 166,
      "endchar" : 2
     },
     {
      "name" : "absolutePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 168,
      "char" : 9,
      "deco" : "xFNfAyaQdZQg",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "base",
        "deco" : "Aya"
       }
      ],
      "endline" : 173,
      "endchar" : 2
     },
     {
      "name" : "absolutePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 175,
      "char" : 9,
      "deco" : "xFNfAAyaQdZQg",
      "parameters" : [
       {
        "name" : "targetPath",
        "deco" : "AAya"
       },
       {
        "name" : "base",
        "deco" : "Aya"
       }
      ],
      "endline" : 178,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L180_C8",
      "kind" : "function",
      "line" : 180,
      "char" : 8,
      "storageClass" : [
       "@safe"
      ],
      "endline" : 189,
      "endchar" : 2
     },
     {
      "name" : "actualPath",
      "kind" : "function",
      "comment" : " 実際のパス名に修正する\n",
      "line" : 189,
      "char" : 9,
      "deco" : "xFNfAyaZQe",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya",
        "default" : "\".\""
       }
      ],
      "endline" : 214,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L215_C10",
      "kind" : "function",
      "line" : 215,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 237,
      "endchar" : 2
     },
     {
      "name" : "relativePath",
      "kind" : "function",
      "comment" : " 相対パスに変換する\n\n Params:\n     target     = 変換したい絶対/相対パス\n     targetPath = 変換したい相対パスのパンくずリスト\n     base       = 基準となるパス(このパスの基準はworkDir)\n",
      "line" : 237,
      "char" : 9,
      "deco" : "xFNfAyaZQe",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 240,
      "endchar" : 2
     },
     {
      "name" : "relativePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 242,
      "char" : 9,
      "deco" : "xFNfAAyaZQe",
      "parameters" : [
       {
        "name" : "targetPath",
        "deco" : "AAya"
       }
      ],
      "endline" : 245,
      "endchar" : 2
     },
     {
      "name" : "relativePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 247,
      "char" : 9,
      "deco" : "xFNfAyaQdZQg",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "base",
        "deco" : "Aya"
       }
      ],
      "endline" : 250,
      "endchar" : 2
     },
     {
      "name" : "relativePath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 252,
      "char" : 9,
      "deco" : "xFNfAAyaQdZQg",
      "parameters" : [
       {
        "name" : "targetPath",
        "deco" : "AAya"
       },
       {
        "name" : "base",
        "deco" : "Aya"
       }
      ],
      "endline" : 255,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L257_C8",
      "kind" : "function",
      "line" : 257,
      "char" : 8,
      "storageClass" : [
       "@safe"
      ],
      "endline" : 281,
      "endchar" : 2
     },
     {
      "name" : "buildSplittedPath",
      "kind" : "function",
      "comment" : " パスをパンくず表現に変換\n\n Params:\n     path  = 変換したい絶対/相対パス\n     paths = 変換したい相対パスのパンくずリスト\n",
      "line" : 281,
      "char" : 11,
      "deco" : "xFNfAyaZAQf",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya"
       }
      ],
      "endline" : 286,
      "endchar" : 2
     },
     {
      "name" : "buildSplittedPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 289,
      "char" : 11,
      "deco" : "xFNfAAyaZQf",
      "parameters" : [
       {
        "name" : "paths",
        "deco" : "AAya"
       }
      ],
      "endline" : 292,
      "endchar" : 2
     },
     {
      "name" : "buildSplittedPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 295,
      "char" : 11,
      "deco" : "xFNfZAAya",
      "endline" : 298,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L300_C8",
      "kind" : "function",
      "line" : 300,
      "char" : 8,
      "storageClass" : [
       "@safe"
      ],
      "endline" : 325,
      "endchar" : 2
     },
     {
      "name" : "buildPosixPath",
      "kind" : "function",
      "comment" : " パスをPosix表現に変換\n\n Params:\n     path  = 変換したい絶対/相対パス\n     paths = 変換したい相対パスのパンくずリスト\n",
      "line" : 325,
      "char" : 9,
      "deco" : "xFNfAyaZQe",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya"
       }
      ],
      "endline" : 328,
      "endchar" : 2
     },
     {
      "name" : "buildPosixPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 331,
      "char" : 9,
      "deco" : "xFNfAAyaZQe",
      "parameters" : [
       {
        "name" : "paths",
        "deco" : "AAya"
       }
      ],
      "endline" : 334,
      "endchar" : 2
     },
     {
      "name" : "buildPosixPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 337,
      "char" : 9,
      "deco" : "xFNfZAya",
      "endline" : 340,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L343_C8",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 343,
      "char" : 8,
      "storageClass" : [
       "@safe"
      ],
      "endline" : 358,
      "endchar" : 2
     },
     {
      "name" : "buildWindowsPath",
      "kind" : "function",
      "comment" : " パスをWindows表現に変換\n\n Params:\n     path  = 変換したい絶対/相対パス\n     paths = 変換したい相対パスのパンくずリスト\n",
      "line" : 358,
      "char" : 9,
      "deco" : "xFNfAyaZQe",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya"
       }
      ],
      "endline" : 361,
      "endchar" : 2
     },
     {
      "name" : "buildWindowsPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 364,
      "char" : 9,
      "deco" : "xFNfAAyaZQe",
      "parameters" : [
       {
        "name" : "paths",
        "deco" : "AAya"
       }
      ],
      "endline" : 367,
      "endchar" : 2
     },
     {
      "name" : "buildWindowsPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 370,
      "char" : 9,
      "deco" : "xFNfZAya",
      "endline" : 373,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L376_C8",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 376,
      "char" : 8,
      "storageClass" : [
       "@safe"
      ],
      "endline" : 393,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedSplittedPath",
      "kind" : "function",
      "comment" : " パスを正規化して分解してパンくずリストにする\n\n Params:\n     path  = 変換したい絶対/相対パス\n     paths = 変換したい相対パスのパンくずリスト\n",
      "line" : 393,
      "char" : 11,
      "deco" : "xFNfAyaZAQf",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya"
       }
      ],
      "endline" : 397,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedSplittedPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 400,
      "char" : 11,
      "deco" : "xFNfAAyaZQf",
      "parameters" : [
       {
        "name" : "paths",
        "deco" : "AAya"
       }
      ],
      "endline" : 404,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedSplittedPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 407,
      "char" : 11,
      "deco" : "xFNfZAAya",
      "endline" : 411,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L413_C8",
      "kind" : "function",
      "line" : 413,
      "char" : 8,
      "storageClass" : [
       "@safe"
      ],
      "endline" : 435,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedPosixPath",
      "kind" : "function",
      "comment" : " パスを正規化してPosix表現に変換\n\n Params:\n     path  = 変換したい絶対/相対パス\n     paths = 変換したい相対パスのパンくずリスト\n",
      "line" : 435,
      "char" : 9,
      "deco" : "FAyaZQe",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya"
       }
      ],
      "endline" : 439,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedPosixPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 442,
      "char" : 9,
      "deco" : "FAAyaZQe",
      "parameters" : [
       {
        "name" : "paths",
        "deco" : "AAya"
       }
      ],
      "endline" : 446,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedPosixPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 449,
      "char" : 9,
      "deco" : "FZAya",
      "endline" : 453,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L456_C10",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 456,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 464,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L464_C10",
      "kind" : "function",
      "line" : 464,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 479,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedWindowsPath",
      "kind" : "function",
      "comment" : " パスを正規化してWindows表現に変換\n\n Params:\n     path  = 変換したい絶対/相対パス\n     paths = 変換したい相対パスのパンくずリスト\n",
      "line" : 479,
      "char" : 9,
      "deco" : "FAyaZQe",
      "parameters" : [
       {
        "name" : "path",
        "deco" : "Aya"
       }
      ],
      "endline" : 483,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedWindowsPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 486,
      "char" : 9,
      "deco" : "FAAyaZQe",
      "parameters" : [
       {
        "name" : "paths",
        "deco" : "AAya"
       }
      ],
      "endline" : 490,
      "endchar" : 2
     },
     {
      "name" : "buildNormalizedWindowsPath",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 493,
      "char" : 9,
      "deco" : "FZAya",
      "endline" : 497,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L500_C10",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 500,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 508,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L508_C10",
      "kind" : "function",
      "line" : 508,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 517,
      "endchar" : 2
     },
     {
      "name" : "buildNativePath",
      "kind" : "alias",
      "comment" : "In Posix\n",
      "line" : 527,
      "char" : 3,
      "originalType" : "buildPosixPath"
     },
     {
      "name" : "buildNormalizedNativePath",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 529,
      "char" : 3,
      "originalType" : "buildNormalizedPosixPath"
     },
     {
      "name" : "exists",
      "kind" : "function",
      "comment" : " パスが存在するか確認する\n\n Params:\n     target = パス\n",
      "line" : 538,
      "char" : 7,
      "deco" : "xFNfAyaZb",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 541,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "comment" : "ditto\n",
      "line" : 544,
      "char" : 15,
      "name" : "existsImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "existsImpl",
        "kind" : "function",
        "line" : 544,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 547,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "comment" : "ditto\n",
      "line" : 550,
      "char" : 15,
      "name" : "existsImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "existsImpl",
        "kind" : "function",
        "line" : 550,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 553,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "isFile",
      "kind" : "function",
      "comment" : " パスがファイルかどうか確認する\n\n Params:\n     target = パス\n",
      "line" : 562,
      "char" : 7,
      "deco" : "xFNfAyaZb",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 565,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "comment" : "ditto\n",
      "line" : 568,
      "char" : 15,
      "name" : "isFileImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "isFileImpl",
        "kind" : "function",
        "line" : 568,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 572,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "comment" : "ditto\n",
      "line" : 575,
      "char" : 15,
      "name" : "isFileImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "isFileImpl",
        "kind" : "function",
        "line" : 575,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 578,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "isDir",
      "kind" : "function",
      "comment" : " パスがファイルかどうか確認する\n\n Params:\n     target = パス\n",
      "line" : 586,
      "char" : 7,
      "deco" : "xFNfAyaZb",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 589,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "comment" : "ditto\n",
      "line" : 592,
      "char" : 15,
      "name" : "isDirImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "isDirImpl",
        "kind" : "function",
        "line" : 592,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 596,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "comment" : "ditto\n",
      "line" : 599,
      "char" : 15,
      "name" : "isDirImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "isDirImpl",
        "kind" : "function",
        "line" : 599,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 602,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 604,
      "char" : 15,
      "name" : "makeDirImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "makeDirImpl",
        "kind" : "function",
        "line" : 604,
        "char" : 15,
        "type" : "bool(string target, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 607,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 609,
      "char" : 15,
      "name" : "makeDirImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "makeDirImpl",
        "kind" : "function",
        "line" : 609,
        "char" : 15,
        "type" : "bool(string target, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 644,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "makeDir",
      "kind" : "function",
      "comment" : " ディレクトリを作成する\n\n Params:\n     target   = パス\n     force    = 強制的に作成\n     retrycnt = リトライする回数\n",
      "line" : 654,
      "char" : 7,
      "deco" : "FAyabkZv",
      "originalType" : "void(string target, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 657,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L659_C10",
      "kind" : "function",
      "line" : 659,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 705,
      "endchar" : 2
     },
     {
      "name" : "entries",
      "kind" : "function",
      "comment" : " エントリー一覧\n",
      "line" : 705,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FE3std4file8SpanModebZSQvQt11DirIterator",
      "originalType" : "(SpanMode mode, bool followSymlink = true)",
      "parameters" : [
       {
        "name" : "mode",
        "deco" : "E3std4file8SpanMode"
       },
       {
        "name" : "followSymlink",
        "deco" : "b",
        "default" : "true"
       }
      ],
      "endline" : 708,
      "endchar" : 2
     },
     {
      "name" : "entries",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 711,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FAyaE3std4file8SpanModebZSQv9algorithm9iteration__T12FilterResultS_DQClQCk10dirEntriesFQDiQDlQDlbZ1fMFNaNbNfSQEaQDz8DirEntryZbTSQEtQEs11DirIteratorZQDt",
      "originalType" : "(string pattern, SpanMode mode = SpanMode.shallow, bool followSymlink = true)",
      "parameters" : [
       {
        "name" : "pattern",
        "deco" : "Aya"
       },
       {
        "name" : "mode",
        "deco" : "E3std4file8SpanMode",
        "default" : "cast(SpanMode)0"
       },
       {
        "name" : "followSymlink",
        "deco" : "b",
        "default" : "true"
       }
      ],
      "endline" : 714,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "comment" : "ditto\n",
      "line" : 717,
      "char" : 7,
      "name" : "entries",
      "parameters" : [
       {
        "name" : "Char",
        "kind" : "type"
       }
      ],
      "members" : [
       {
        "name" : "entries",
        "kind" : "function",
        "line" : 717,
        "char" : 7,
        "storageClass" : [
         "auto"
        ],
        "type" : "(Regex!Char pattern, SpanMode mode = SpanMode.shallow, bool followSymlink = true)",
        "parameters" : [
         {
          "name" : "pattern",
          "type" : "Regex!Char"
         },
         {
          "name" : "mode",
          "type" : "SpanMode",
          "default" : "SpanMode.shallow"
         },
         {
          "name" : "followSymlink",
          "deco" : "b",
          "default" : "true"
         }
        ],
        "endline" : 722,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "__unittest_L725_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 725,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 753,
      "endchar" : 2
     },
     {
      "name" : "writeText",
      "kind" : "function",
      "comment" : " テキストファイルを書き出す\n",
      "line" : 753,
      "char" : 7,
      "deco" : "FAyaxAaZv",
      "originalType" : "void(string filename, in char[] text)",
      "parameters" : [
       {
        "name" : "filename",
        "deco" : "Aya"
       },
       {
        "name" : "text",
        "deco" : "xAa"
       }
      ],
      "endline" : 756,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 758,
      "char" : 15,
      "name" : "writeTextImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "writeTextImpl",
        "kind" : "function",
        "line" : 758,
        "char" : 15,
        "type" : "void(string filename, in char[] text)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         },
         {
          "name" : "text",
          "type" : "char[]",
          "storageClass" : [
           "in"
          ]
         }
        ],
        "endline" : 762,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 763,
      "char" : 15,
      "name" : "writeTextImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "writeTextImpl",
        "kind" : "function",
        "line" : 763,
        "char" : 15,
        "type" : "void(string filename, in char[] text)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         },
         {
          "name" : "text",
          "type" : "char[]",
          "storageClass" : [
           "in"
          ]
         }
        ],
        "endline" : 767,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "__unittest_L770_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 770,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 785,
      "endchar" : 2
     },
     {
      "name" : "readText",
      "kind" : "function",
      "comment" : " テキストファイルを読み込む\n",
      "line" : 785,
      "char" : 9,
      "deco" : "FAyaZQe",
      "parameters" : [
       {
        "name" : "filename",
        "deco" : "Aya"
       }
      ],
      "endline" : 788,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 790,
      "char" : 17,
      "name" : "readTextImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "readTextImpl",
        "kind" : "function",
        "line" : 790,
        "char" : 17,
        "type" : "string(string filename)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         }
        ],
        "endline" : 794,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 795,
      "char" : 17,
      "name" : "readTextImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "readTextImpl",
        "kind" : "function",
        "line" : 795,
        "char" : 17,
        "type" : "string(string filename)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         }
        ],
        "endline" : 800,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "__unittest_L804_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 804,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 816,
      "endchar" : 2
     },
     {
      "name" : "writeBinary",
      "kind" : "function",
      "comment" : " バイナリファイルを書き出す\n",
      "line" : 816,
      "char" : 7,
      "deco" : "FAyaxAhZv",
      "originalType" : "void(string filename, in ubyte[] binary)",
      "parameters" : [
       {
        "name" : "filename",
        "deco" : "Aya"
       },
       {
        "name" : "binary",
        "deco" : "xAh"
       }
      ],
      "endline" : 819,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 821,
      "char" : 15,
      "name" : "writeBinaryImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "writeBinaryImpl",
        "kind" : "function",
        "line" : 821,
        "char" : 15,
        "type" : "void(string filename, in ubyte[] binary)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         },
         {
          "name" : "binary",
          "type" : "ubyte[]",
          "storageClass" : [
           "in"
          ]
         }
        ],
        "endline" : 825,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 826,
      "char" : 15,
      "name" : "writeBinaryImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "writeBinaryImpl",
        "kind" : "function",
        "line" : 826,
        "char" : 15,
        "type" : "void(string filename, in ubyte[] binary)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         },
         {
          "name" : "binary",
          "type" : "ubyte[]",
          "storageClass" : [
           "in"
          ]
         }
        ],
        "endline" : 830,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "__unittest_L833_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 833,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 848,
      "endchar" : 2
     },
     {
      "name" : "readBinary",
      "kind" : "function",
      "comment" : " バイナリファイルを読み込む\n",
      "line" : 848,
      "char" : 21,
      "deco" : "FAyaZAyh",
      "parameters" : [
       {
        "name" : "filename",
        "deco" : "Aya"
       }
      ],
      "endline" : 851,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 853,
      "char" : 29,
      "name" : "readBinaryImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "readBinaryImpl",
        "kind" : "function",
        "line" : 853,
        "char" : 29,
        "type" : "immutable(ubyte)[](string filename)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         }
        ],
        "endline" : 857,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 858,
      "char" : 29,
      "name" : "readBinaryImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "readBinaryImpl",
        "kind" : "function",
        "line" : 858,
        "char" : 29,
        "type" : "immutable(ubyte)[](string filename)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         }
        ],
        "endline" : 863,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "__unittest_L866_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 866,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 878,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "comment" : " JSONファイルを書き出す\n",
      "line" : 878,
      "char" : 7,
      "name" : "writeJson",
      "parameters" : [
       {
        "name" : "T",
        "kind" : "type"
       }
      ],
      "members" : [
       {
        "name" : "writeJson",
        "kind" : "function",
        "line" : 878,
        "char" : 7,
        "type" : "void(string filename, in T data, JSONOptions options = JSONOptions.none)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         },
         {
          "name" : "data",
          "type" : "T",
          "storageClass" : [
           "in"
          ]
         },
         {
          "name" : "options",
          "type" : "JSONOptions",
          "default" : "JSONOptions.none"
         }
        ],
        "endline" : 883,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "comment" : " JSONファイルを書き出す\n",
      "line" : 888,
      "char" : 4,
      "name" : "readJson",
      "parameters" : [
       {
        "name" : "T",
        "kind" : "type"
       }
      ],
      "members" : [
       {
        "name" : "readJson",
        "kind" : "function",
        "line" : 888,
        "char" : 4,
        "type" : "T(string filename)",
        "parameters" : [
         {
          "name" : "filename",
          "type" : "string"
         }
        ],
        "endline" : 898,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "__unittest_L901_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 901,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 911,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L911_C10",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 911,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 939,
      "endchar" : 2
     },
     {
      "name" : "createFile",
      "kind" : "function",
      "comment" : " ファイルを新しく作成する\n",
      "line" : 939,
      "char" : 7,
      "deco" : "FAyaZS3std5stdio4File",
      "parameters" : [
       {
        "name" : "filename",
        "deco" : "Aya"
       }
      ],
      "endline" : 946,
      "endchar" : 2
     },
     {
      "name" : "openFile",
      "kind" : "function",
      "comment" : " ファイルを開く\n\n ファイルがなければ新しく作成して開く\n",
      "line" : 953,
      "char" : 7,
      "deco" : "FAyaQdZS3std5stdio4File",
      "parameters" : [
       {
        "name" : "filename",
        "deco" : "Aya"
       },
       {
        "name" : "attr",
        "deco" : "Aya",
        "default" : "\"r+\""
       }
      ],
      "endline" : 959,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 962,
      "char" : 15,
      "name" : "clearReadonlyImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "clearReadonlyImpl",
        "kind" : "function",
        "line" : 962,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 967,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 968,
      "char" : 15,
      "name" : "clearReadonlyImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "clearReadonlyImpl",
        "kind" : "function",
        "line" : 968,
        "char" : 15,
        "type" : "const @safe bool(string target)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         }
        ],
        "endline" : 985,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "clearReadonly",
      "kind" : "function",
      "comment" : "\n",
      "line" : 990,
      "char" : 7,
      "deco" : "xFAyaZb",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 993,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 996,
      "char" : 15,
      "name" : "removeFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "removeFilesImpl",
        "kind" : "function",
        "line" : 996,
        "char" : 15,
        "type" : "bool(string target, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 999,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1000,
      "char" : 15,
      "name" : "removeFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "removeFilesImpl",
        "kind" : "function",
        "line" : 1000,
        "char" : 15,
        "type" : "bool(string target, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1059,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "removeFiles",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1064,
      "char" : 7,
      "deco" : "FAyabkZb",
      "originalType" : "bool(string target, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 1067,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1068_C10",
      "kind" : "function",
      "line" : 1068,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1096,
      "endchar" : 2
     },
     {
      "name" : "removeFiles",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1096,
      "char" : 7,
      "deco" : "FAyaQdbkZb",
      "originalType" : "bool(string targetDir, string blobFilter, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "targetDir",
        "deco" : "Aya"
       },
       {
        "name" : "blobFilter",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 1118,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1119_C10",
      "kind" : "function",
      "line" : 1119,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1140,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1140,
      "char" : 15,
      "name" : "copyFileImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "copyFileImpl",
        "kind" : "function",
        "line" : 1140,
        "char" : 15,
        "type" : "bool(string src, string target, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "src",
          "type" : "string"
         },
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1146,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1147,
      "char" : 15,
      "name" : "copyFileImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "copyFileImpl",
        "kind" : "function",
        "line" : 1147,
        "char" : 15,
        "type" : "bool(string src, string target, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "src",
          "type" : "string"
         },
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1193,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "copyFile",
      "kind" : "function",
      "comment" : " ファイルをコピーする\n",
      "line" : 1198,
      "char" : 7,
      "deco" : "FAyaQdbkZb",
      "originalType" : "bool(string srcFile, string targetFile, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "srcFile",
        "deco" : "Aya"
       },
       {
        "name" : "targetFile",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 1201,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1202_C10",
      "kind" : "function",
      "line" : 1202,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1213,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1213,
      "char" : 15,
      "name" : "copyFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "copyFilesImpl",
        "kind" : "function",
        "line" : 1213,
        "char" : 15,
        "type" : "bool(string srcDir, string targetDir, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "srcDir",
          "type" : "string"
         },
         {
          "name" : "targetDir",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1219,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1221,
      "char" : 15,
      "name" : "copyFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "copyFilesImpl",
        "kind" : "function",
        "line" : 1221,
        "char" : 15,
        "type" : "bool(string srcDir, string targetDir, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "srcDir",
          "type" : "string"
         },
         {
          "name" : "targetDir",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1240,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1242,
      "char" : 15,
      "name" : "copyFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "copyFilesImpl",
        "kind" : "function",
        "line" : 1242,
        "char" : 15,
        "type" : "bool(string srcDir, string blobFilter, string targetDir, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "srcDir",
          "type" : "string"
         },
         {
          "name" : "blobFilter",
          "type" : "string"
         },
         {
          "name" : "targetDir",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1249,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1251,
      "char" : 15,
      "name" : "copyFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "copyFilesImpl",
        "kind" : "function",
        "line" : 1251,
        "char" : 15,
        "type" : "bool(string srcDir, string blobFilter, string targetDir, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "srcDir",
          "type" : "string"
         },
         {
          "name" : "blobFilter",
          "type" : "string"
         },
         {
          "name" : "targetDir",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1271,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "copyFiles",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1276,
      "char" : 7,
      "deco" : "FAyaQdbkZb",
      "originalType" : "bool(string src, string target, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "src",
        "deco" : "Aya"
       },
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 1286,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1289_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1289,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1300,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1300_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1300,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1314,
      "endchar" : 2
     },
     {
      "name" : "copyFiles",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1314,
      "char" : 7,
      "deco" : "FAyaQdQfbkZb",
      "originalType" : "bool(string srcDir, string blobFilter, string targetDir, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "srcDir",
        "deco" : "Aya"
       },
       {
        "name" : "blobFilter",
        "deco" : "Aya"
       },
       {
        "name" : "targetDir",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 1317,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1319_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1319,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1334,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1334,
      "char" : 15,
      "name" : "mirrorFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "mirrorFilesImpl",
        "kind" : "function",
        "line" : 1334,
        "char" : 15,
        "type" : "bool(string srcDir, string dstDir, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "srcDir",
          "type" : "string"
         },
         {
          "name" : "dstDir",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1340,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1342,
      "char" : 15,
      "name" : "mirrorFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "mirrorFilesImpl",
        "kind" : "function",
        "line" : 1342,
        "char" : 15,
        "type" : "bool(string srcDir, string dstDir, bool force, uint retrycnt)",
        "parameters" : [
         {
          "name" : "srcDir",
          "type" : "string"
         },
         {
          "name" : "dstDir",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "k"
         }
        ],
        "endline" : 1411,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "mirrorFiles",
      "kind" : "function",
      "comment" : " ファイルをミラーリングする\n",
      "line" : 1416,
      "char" : 7,
      "deco" : "FAyaQdbkZb",
      "originalType" : "bool(string srcDir, string dstDir, bool force = true, uint retrycnt = 5)",
      "parameters" : [
       {
        "name" : "srcDir",
        "deco" : "Aya"
       },
       {
        "name" : "dstDir",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "k",
        "default" : "5u"
       }
      ],
      "endline" : 1419,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1425,
      "char" : 15,
      "name" : "moveFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "moveFilesImpl",
        "kind" : "function",
        "line" : 1425,
        "char" : 15,
        "type" : "bool(string src, string dst, bool force, bool retrycnt)",
        "parameters" : [
         {
          "name" : "src",
          "type" : "string"
         },
         {
          "name" : "dst",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "b"
         }
        ],
        "endline" : 1431,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1433,
      "char" : 15,
      "name" : "moveFilesImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "moveFilesImpl",
        "kind" : "function",
        "line" : 1433,
        "char" : 15,
        "type" : "bool(string src, string dst, bool force, bool retrycnt)",
        "parameters" : [
         {
          "name" : "src",
          "type" : "string"
         },
         {
          "name" : "dst",
          "type" : "string"
         },
         {
          "name" : "force",
          "deco" : "b"
         },
         {
          "name" : "retrycnt",
          "deco" : "b"
         }
        ],
        "endline" : 1498,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "moveFiles",
      "kind" : "function",
      "comment" : " ファイルを移動する\n",
      "line" : 1503,
      "char" : 7,
      "deco" : "FAyaQdbbZb",
      "parameters" : [
       {
        "name" : "src",
        "deco" : "Aya"
       },
       {
        "name" : "dst",
        "deco" : "Aya"
       },
       {
        "name" : "force",
        "deco" : "b",
        "default" : "true"
       },
       {
        "name" : "retrycnt",
        "deco" : "b",
        "default" : "true"
       }
      ],
      "endline" : 1506,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1511,
      "char" : 15,
      "name" : "setTimeStampImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "setTimeStampImpl",
        "kind" : "function",
        "line" : 1511,
        "char" : 15,
        "type" : "void(string target, SysTime accessTime, SysTime modificationTime)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "accessTime",
          "type" : "SysTime"
         },
         {
          "name" : "modificationTime",
          "type" : "SysTime"
         }
        ],
        "endline" : 1514,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1516,
      "char" : 15,
      "name" : "setTimeStampImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "setTimeStampImpl",
        "kind" : "function",
        "line" : 1516,
        "char" : 15,
        "type" : "void(string target, SysTime accessTime, SysTime modificationTime)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "accessTime",
          "type" : "SysTime"
         },
         {
          "name" : "modificationTime",
          "type" : "SysTime"
         }
        ],
        "endline" : 1519,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1521,
      "char" : 15,
      "name" : "getTimeStampImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b"
       }
      ],
      "members" : [
       {
        "name" : "getTimeStampImpl",
        "kind" : "function",
        "line" : 1521,
        "char" : 15,
        "type" : "void(string target, out SysTime accessTime, out SysTime modificationTime)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "accessTime",
          "type" : "SysTime",
          "storageClass" : [
           "out"
          ]
         },
         {
          "name" : "modificationTime",
          "type" : "SysTime",
          "storageClass" : [
           "out"
          ]
         }
        ],
        "endline" : 1524,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "protection" : "private",
      "line" : 1526,
      "char" : 15,
      "name" : "getTimeStampImpl",
      "parameters" : [
       {
        "name" : "absConvert",
        "kind" : "value",
        "deco" : "b",
        "specValue" : "false"
       }
      ],
      "members" : [
       {
        "name" : "getTimeStampImpl",
        "kind" : "function",
        "line" : 1526,
        "char" : 15,
        "type" : "void(string target, out SysTime accessTime, out SysTime modificationTime)",
        "parameters" : [
         {
          "name" : "target",
          "type" : "string"
         },
         {
          "name" : "accessTime",
          "type" : "SysTime",
          "storageClass" : [
           "out"
          ]
         },
         {
          "name" : "modificationTime",
          "type" : "SysTime",
          "storageClass" : [
           "out"
          ]
         }
        ],
        "endline" : 1530,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "setTimeStamp",
      "kind" : "function",
      "comment" : " タイムスタンプを変更/取得する\n",
      "line" : 1536,
      "char" : 7,
      "deco" : "FAyaS3std8datetime7systime7SysTimeQBeZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "accessTime",
        "deco" : "S3std8datetime7systime7SysTime"
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime7systime7SysTime"
       }
      ],
      "endline" : 1539,
      "endchar" : 2
     },
     {
      "name" : "setTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1541,
      "char" : 7,
      "deco" : "FAyaS3std8datetime7systime7SysTimeZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime7systime7SysTime"
       }
      ],
      "endline" : 1544,
      "endchar" : 2
     },
     {
      "name" : "setTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1546,
      "char" : 7,
      "deco" : "FAyaS3std8datetime4date8DateTimeQBcZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "accessTime",
        "deco" : "S3std8datetime4date8DateTime"
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime4date8DateTime"
       }
      ],
      "endline" : 1549,
      "endchar" : 2
     },
     {
      "name" : "setTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1551,
      "char" : 7,
      "deco" : "FAyaS3std8datetime4date8DateTimeZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime4date8DateTime"
       }
      ],
      "endline" : 1554,
      "endchar" : 2
     },
     {
      "name" : "getTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1556,
      "char" : 7,
      "deco" : "FAyaJS3std8datetime7systime7SysTimeJQBfZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "accessTime",
        "deco" : "S3std8datetime7systime7SysTime",
        "storageClass" : [
         "out"
        ]
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime7systime7SysTime",
        "storageClass" : [
         "out"
        ]
       }
      ],
      "endline" : 1559,
      "endchar" : 2
     },
     {
      "name" : "getTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1561,
      "char" : 7,
      "deco" : "FAyaJS3std8datetime7systime7SysTimeZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime7systime7SysTime",
        "storageClass" : [
         "out"
        ]
       }
      ],
      "endline" : 1565,
      "endchar" : 2
     },
     {
      "name" : "getTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1567,
      "char" : 7,
      "deco" : "FAyaJS3std8datetime4date8DateTimeJQBdZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "accessTime",
        "deco" : "S3std8datetime4date8DateTime",
        "storageClass" : [
         "out"
        ]
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime4date8DateTime",
        "storageClass" : [
         "out"
        ]
       }
      ],
      "endline" : 1573,
      "endchar" : 2
     },
     {
      "name" : "getTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1575,
      "char" : 7,
      "deco" : "FAyaJS3std8datetime4date8DateTimeZv",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       },
       {
        "name" : "modificationTime",
        "deco" : "S3std8datetime4date8DateTime",
        "storageClass" : [
         "out"
        ]
       }
      ],
      "endline" : 1580,
      "endchar" : 2
     },
     {
      "name" : "getTimeStamp",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1582,
      "char" : 10,
      "deco" : "FAyaZS3std8datetime7systime7SysTime",
      "parameters" : [
       {
        "name" : "target",
        "deco" : "Aya"
       }
      ],
      "endline" : 1587,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1589_C10",
      "kind" : "function",
      "line" : 1589,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1646,
      "endchar" : 2
     },
     {
      "name" : "searchPath",
      "kind" : "function",
      "comment" : " パスを検索する\n",
      "line" : 1646,
      "char" : 9,
      "deco" : "xFNexAaxAAyaZAya",
      "originalType" : "const @trusted string(in char[] executable, in string[] additional = null)",
      "parameters" : [
       {
        "name" : "executable",
        "deco" : "xAa"
       },
       {
        "name" : "additional",
        "deco" : "xAAya",
        "default" : "null"
       }
      ],
      "endline" : 1686,
      "endchar" : 2
     },
     {
      "name" : "spawnProcess",
      "kind" : "function",
      "comment" : " プロセスを実行する\n",
      "line" : 1691,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FAAyaHQeQgE3std7process6ConfigZCQvQt3Pid",
      "originalType" : "(string[] args, string[string] env = null, std.process.Config cfg = std.process.Config.none)",
      "parameters" : [
       {
        "name" : "args",
        "deco" : "AAya"
       },
       {
        "name" : "env",
        "deco" : "HAyaQd",
        "default" : "cast(string[string])null"
       },
       {
        "name" : "cfg",
        "deco" : "E3std7process6Config",
        "default" : "cast(Config)0"
       }
      ],
      "endline" : 1697,
      "endchar" : 2
     },
     {
      "name" : "spawnProcess",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1700,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FAAyaS3std5stdio4FileQqQsHQyQBaEQBa7process6ConfigZCQBuQu3Pid",
      "originalType" : "(string[] args, File fin, File fout, File ferr, string[string] env = null, std.process.Config cfg = std.process.Config.suppressConsole)",
      "parameters" : [
       {
        "name" : "args",
        "deco" : "AAya"
       },
       {
        "name" : "fin",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "fout",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "ferr",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "env",
        "deco" : "HAyaQd",
        "default" : "cast(string[string])null"
       },
       {
        "name" : "cfg",
        "deco" : "E3std7process6Config",
        "default" : "cast(Config)16"
       }
      ],
      "endline" : 1710,
      "endchar" : 2
     },
     {
      "name" : "spawnProcess",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1713,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FAAyaS3std7process4PipeQsQuHQBaQBdEQBdQBc6ConfigZCQBsQBr3Pid",
      "originalType" : "(string[] args, Pipe pin, Pipe pout, Pipe perr, string[string] env = null, std.process.Config cfg = std.process.Config.suppressConsole)",
      "parameters" : [
       {
        "name" : "args",
        "deco" : "AAya"
       },
       {
        "name" : "pin",
        "deco" : "S3std7process4Pipe"
       },
       {
        "name" : "pout",
        "deco" : "S3std7process4Pipe"
       },
       {
        "name" : "perr",
        "deco" : "S3std7process4Pipe"
       },
       {
        "name" : "env",
        "deco" : "HAyaQd",
        "default" : "cast(string[string])null"
       },
       {
        "name" : "cfg",
        "deco" : "E3std7process6Config",
        "default" : "cast(Config)16"
       }
      ],
      "endline" : 1723,
      "endchar" : 2
     },
     {
      "name" : "pipeProcess",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1726,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FAAyaHQeQgE3std7process6ConfigZSQvQt12ProcessPipes",
      "originalType" : "(string[] args, string[string] env = null, std.process.Config cfg = std.process.Config.suppressConsole)",
      "parameters" : [
       {
        "name" : "args",
        "deco" : "AAya"
       },
       {
        "name" : "env",
        "deco" : "HAyaQd",
        "default" : "cast(string[string])null"
       },
       {
        "name" : "cfg",
        "deco" : "E3std7process6Config",
        "default" : "cast(Config)16"
       }
      ],
      "endline" : 1732,
      "endchar" : 2
     },
     {
      "name" : "execute",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 1735,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "FAAyaHQeQgE3std7process6ConfigZSQv8typecons__T5TupleTiVQCba6_737461747573TQCuVQCya6_6f7574707574ZQBz",
      "originalType" : "(string[] args, string[string] env = null, std.process.Config cfg = std.process.Config.suppressConsole)",
      "parameters" : [
       {
        "name" : "args",
        "deco" : "AAya"
       },
       {
        "name" : "env",
        "deco" : "HAyaQd",
        "default" : "cast(string[string])null"
       },
       {
        "name" : "cfg",
        "deco" : "E3std7process6Config",
        "default" : "cast(Config)16"
       }
      ],
      "endline" : 1741,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1744_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1744,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1766,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1766_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1766,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1788,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1788_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1788,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1811,
      "endchar" : 2
     },
     {
      "name" : "__unittest_L1811_C10",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1811,
      "char" : 10,
      "storageClass" : [
       "@system"
      ],
      "endline" : 1828,
      "endchar" : 1
     },
     {
      "name" : "~this",
      "kind" : "destructor",
      "line" : 117,
      "char" : 1,
      "deco" : "FNaNbNeZv"
     },
     {
      "name" : "__xdtor",
      "kind" : "alias"
     },
     {
      "name" : "__xpostblit",
      "kind" : "alias"
     },
     {
      "name" : "opAssign",
      "kind" : "generated function",
      "line" : 117,
      "char" : 1,
      "deco" : "FNaNbNcNjS5voile2fs10FileSystemZQx",
      "originalType" : "ref FileSystem(FileSystem p) return",
      "parameters" : [
       {
        "name" : "p",
        "deco" : "S5voile2fs10FileSystem"
       }
      ]
     }
    ]
   }
  ]
 },
 {
  "name" : "voile.handler",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/handler.d",
  "comment" : " Common Handler type\n",
  "members" : [
   {
    "name" : "core.thread",
    "kind" : "import",
    "line" : 6,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.format",
    "kind" : "import",
    "line" : 7,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 8,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.range",
    "kind" : "import",
    "line" : 8,
    "char" : 20,
    "protection" : "private"
   },
   {
    "name" : "std.exception",
    "kind" : "import",
    "line" : 8,
    "char" : 31,
    "protection" : "private"
   },
   {
    "name" : "std.typetuple",
    "kind" : "import",
    "line" : 8,
    "char" : 46,
    "protection" : "private"
   },
   {
    "name" : "std.concurrency",
    "kind" : "import",
    "line" : 8,
    "char" : 61,
    "protection" : "private"
   },
   {
    "name" : "std.functional",
    "kind" : "import",
    "line" : 8,
    "char" : 78,
    "protection" : "private"
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 10,
    "char" : 9,
    "name" : "isVirtualMethod",
    "parameters" : [
     {
      "name" : "func",
      "kind" : "tuple"
     }
    ],
    "constraint" : "func.length == 1",
    "members" : [
     {
      "name" : "isVirtualMethod",
      "kind" : "variable",
      "line" : 13,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "__traits(isVirtualMethod, func[0])"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 17,
    "char" : 9,
    "name" : "MemberFunctionGeneratorEx",
    "parameters" : [
     {
      "name" : "Policy",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "CONSTRUCTOR_NAME",
      "kind" : "variable",
      "line" : 23,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "\"__ctor\""
     },
     {
      "name" : "WITH_BASE_CLASS",
      "kind" : "variable",
      "line" : 26,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "__traits(hasMember, Policy, \"BASE_CLASS_ID\")"
     },
     {
      "name" : "WITHOUT_SYMBOL",
      "kind" : "variable",
      "line" : 29,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "__traits(hasMember, Policy, \"WITHOUT_SYMBOL\")"
     },
     {
      "name" : "PARAMETER_VARIABLE_ID",
      "kind" : "alias",
      "line" : 34,
      "char" : 3,
      "type" : "Policy.PARAMETER_VARIABLE_ID"
     },
     {
      "kind" : "template",
      "line" : 43,
      "char" : 2,
      "name" : "CountUp",
      "parameters" : [
       {
        "name" : "n",
        "kind" : "value",
        "type" : "size_t"
       }
      ],
      "members" : [
       {
        "name" : "CountUp",
        "kind" : "alias",
        "line" : 46,
        "char" : 4,
        "type" : "AliasSeq!(CountUp!(n - 1), n - 1)"
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 60,
      "char" : 16,
      "name" : "generateCode",
      "parameters" : [
       {
        "name" : "overloads",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "generateCode",
        "kind" : "function",
        "line" : 60,
        "char" : 16,
        "type" : "@property string()",
        "endline" : 84,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 87,
      "char" : 17,
      "name" : "generateCodeForOverloadSet",
      "parameters" : [
       {
        "name" : "oset",
        "kind" : "alias"
       }
      ],
      "members" : [
       {
        "name" : "generateCodeForOverloadSet",
        "kind" : "function",
        "line" : 87,
        "char" : 17,
        "type" : "@property string()",
        "endline" : 113,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 120,
      "char" : 16,
      "name" : "generateFunction",
      "parameters" : [
       {
        "name" : "myFuncInfo",
        "kind" : "value",
        "type" : "string"
       },
       {
        "name" : "exFuncInfo",
        "kind" : "alias"
       },
       {
        "name" : "name",
        "kind" : "value",
        "type" : "string"
       },
       {
        "name" : "func",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "generateFunction",
        "kind" : "function",
        "line" : 120,
        "char" : 16,
        "type" : "@property string()",
        "endline" : 220,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "GenParams",
      "kind" : "struct",
      "line" : 227,
      "char" : 9,
      "members" : [
       {
        "name" : "imports",
        "kind" : "variable",
        "line" : 227,
        "char" : 35,
        "type" : "string"
       },
       {
        "name" : "params",
        "kind" : "variable",
        "line" : 227,
        "char" : 44,
        "type" : "string"
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 228,
      "char" : 20,
      "name" : "generateParameters",
      "parameters" : [
       {
        "name" : "myFuncInfo",
        "kind" : "value",
        "type" : "string"
       },
       {
        "name" : "exFuncInfo",
        "kind" : "alias"
       },
       {
        "name" : "func",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "generateParameters",
        "kind" : "function",
        "line" : 228,
        "char" : 20,
        "type" : "GenParams()",
        "endline" : 272,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 276,
      "char" : 17,
      "name" : "enumerateParameters",
      "parameters" : [
       {
        "name" : "n",
        "kind" : "value",
        "type" : "size_t"
       }
      ],
      "members" : [
       {
        "name" : "enumerateParameters",
        "kind" : "function",
        "line" : 276,
        "char" : 17,
        "type" : "@property string()",
        "endline" : 287,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 292,
    "char" : 9,
    "name" : "DelegateFakerEx",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "DelegateFakerEx",
      "kind" : "struct",
      "line" : 292,
      "char" : 9,
      "members" : [
       {
        "kind" : "template",
        "line" : 293,
        "char" : 2,
        "name" : "GeneratingPolicy",
        "parameters" : [],
        "members" : [
         {
          "name" : "WITHOUT_SYMBOL",
          "kind" : "variable",
          "line" : 295,
          "char" : 8,
          "storageClass" : [
           "enum"
          ],
          "init" : "true"
         },
         {
          "kind" : "template",
          "line" : 296,
          "char" : 3,
          "name" : "generateFunctionBody",
          "parameters" : [
           {
            "name" : "unused",
            "kind" : "tuple"
           }
          ],
          "members" : [
           {
            "name" : "generateFunctionBody",
            "kind" : "variable",
            "line" : 298,
            "char" : 9,
            "storageClass" : [
             "enum"
            ],
            "init" : "\"\\x0a\\x09\\x09\\x09\\x09auto fp = cast(F) &this;\\x0a\\x09\\x09\\x09\\x09return fp(args, null);\\x0a\\x09\\x09\\x09\""
           }
          ]
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 305,
        "char" : 2,
        "name" : "FuncInfo",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "RT",
          "kind" : "alias",
          "line" : 307,
          "char" : 3,
          "type" : "ReturnType!Func"
         },
         {
          "name" : "PT",
          "kind" : "alias",
          "line" : 308,
          "char" : 3,
          "type" : "ParameterTypeTuple!Func[0 .. __dollar - 1]"
         }
        ]
       },
       {
        "name" : "FuncInfo_doIt",
        "kind" : "alias",
        "line" : 310,
        "char" : 2,
        "type" : "FuncInfo!F"
       },
       {
        "kind" : "template",
        "line" : 311,
        "char" : 2,
        "name" : "ExFuncInfo",
        "parameters" : [],
        "members" : [
         {
          "name" : "FuncType",
          "kind" : "alias",
          "line" : 313,
          "char" : 3,
          "type" : "FunctionTypeOf!F"
         },
         {
          "name" : "RT",
          "kind" : "alias",
          "line" : 314,
          "char" : 3,
          "type" : "ReturnType!F"
         },
         {
          "name" : "PT",
          "kind" : "alias",
          "line" : 315,
          "char" : 3,
          "type" : "ParameterTypeTuple!F[0 .. __dollar - 1]"
         },
         {
          "name" : "stcs",
          "kind" : "alias",
          "line" : 316,
          "char" : 3,
          "type" : "ParameterStorageClassTuple!F[0 .. __dollar - 1]"
         },
         {
          "name" : "valiadic",
          "kind" : "alias",
          "line" : 317,
          "char" : 3,
          "type" : "variadicFunctionStyle!F"
         },
         {
          "name" : "attrib",
          "kind" : "alias",
          "line" : 318,
          "char" : 3,
          "type" : "functionAttributes!F"
         },
         {
          "name" : "linkage",
          "kind" : "alias",
          "line" : 319,
          "char" : 3,
          "type" : "functionLinkage!F"
         },
         {
          "name" : "abst",
          "kind" : "alias",
          "line" : 320,
          "char" : 3,
          "type" : "isAbstractFunction!F"
         },
         {
          "name" : "virt",
          "kind" : "alias",
          "line" : 321,
          "char" : 3,
          "type" : "isVirtualMethod!F"
         }
        ]
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 327,
    "char" : 14,
    "name" : "toDelegateEx",
    "parameters" : [
     {
      "name" : "Ptr",
      "kind" : "type"
     },
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "Ptr.sizeof == size_t.sizeof && isCallable!F && is(Ptr : ParameterTypeTuple!F[__dollar - 1])",
    "members" : [
     {
      "name" : "toDelegateEx",
      "kind" : "function",
      "line" : 327,
      "char" : 14,
      "storageClass" : [
       "auto"
      ],
      "type" : "(Ptr ptr, F funcptr)",
      "parameters" : [
       {
        "name" : "ptr",
        "type" : "Ptr"
       },
       {
        "name" : "funcptr",
        "type" : "F"
       }
      ],
      "endline" : 345,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L347_C9",
    "kind" : "function",
    "line" : 347,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 400,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "comment" : " List container\n",
    "line" : 400,
    "char" : 9,
    "name" : "List",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "List",
      "kind" : "class",
      "line" : 400,
      "char" : 9,
      "members" : [
       {
        "name" : "Node",
        "kind" : "struct",
        "line" : 403,
        "char" : 9,
        "members" : [
         {
          "name" : "val",
          "kind" : "variable",
          "line" : 405,
          "char" : 9,
          "type" : "T"
         },
         {
          "name" : "next",
          "kind" : "variable",
          "line" : 406,
          "char" : 9,
          "type" : "Node*"
         },
         {
          "name" : "prev",
          "kind" : "variable",
          "line" : 407,
          "char" : 9,
          "type" : "Node*"
         },
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 408,
          "char" : 3,
          "type" : "pure nothrow (T v, Node* n, Node* p)",
          "parameters" : [
           {
            "name" : "v",
            "type" : "T"
           },
           {
            "name" : "n",
            "type" : "Node*"
           },
           {
            "name" : "p",
            "type" : "Node*"
           }
          ],
          "endline" : 413,
          "endchar" : 3
         }
        ]
       },
       {
        "name" : "root",
        "kind" : "variable",
        "line" : 415,
        "char" : 8,
        "type" : "Node*"
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 420,
        "char" : 9,
        "name" : "TIterator",
        "parameters" : [
         {
          "name" : "TList",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "TIterator",
          "kind" : "struct",
          "line" : 420,
          "char" : 9,
          "members" : [
           {
            "name" : "TNode",
            "kind" : "alias",
            "line" : 423,
            "char" : 3,
            "type" : "typeof(*TList.root)"
           },
           {
            "name" : "E",
            "kind" : "alias",
            "line" : 424,
            "char" : 3,
            "type" : "typeof(TList.root.val)"
           },
           {
            "name" : "list",
            "kind" : "variable",
            "line" : 425,
            "char" : 10,
            "type" : "TList"
           },
           {
            "name" : "node",
            "kind" : "variable",
            "line" : 426,
            "char" : 10,
            "type" : "TNode*"
           },
           {
            "name" : "this",
            "kind" : "constructor",
            "line" : 427,
            "char" : 3,
            "type" : "pure nothrow (TList l, TNode* n)",
            "parameters" : [
             {
              "name" : "l",
              "type" : "TList"
             },
             {
              "name" : "n",
              "type" : "TNode*"
             }
            ],
            "endline" : 431,
            "endchar" : 3
           },
           {
            "name" : "opStar",
            "kind" : "function",
            "comment" : " Iterator primitives.\n",
            "line" : 436,
            "char" : 16,
            "type" : "inout ref inout(E)()",
            "endline" : 440,
            "endchar" : 3
           },
           {
            "kind" : "template",
            "comment" : "ditto\n",
            "line" : 443,
            "char" : 5,
            "name" : "opCast",
            "parameters" : [
             {
              "name" : "R",
              "kind" : "type"
             }
            ],
            "constraint" : "is(R == bool)",
            "members" : [
             {
              "name" : "opCast",
              "kind" : "function",
              "line" : 443,
              "char" : 5,
              "type" : "const pure nothrow R()",
              "endline" : 447,
              "endchar" : 3
             }
            ]
           },
           {
            "kind" : "template",
            "comment" : "ditto\n",
            "line" : 450,
            "char" : 12,
            "name" : "opUnary",
            "parameters" : [
             {
              "name" : "op",
              "kind" : "value",
              "type" : "string"
             }
            ],
            "constraint" : "op == \"++\"",
            "members" : [
             {
              "name" : "opUnary",
              "kind" : "function",
              "line" : 450,
              "char" : 12,
              "storageClass" : [
               "auto"
              ],
              "type" : "ref ()",
              "endline" : 456,
              "endchar" : 3
             }
            ]
           },
           {
            "kind" : "template",
            "comment" : "ditto\n",
            "line" : 459,
            "char" : 12,
            "name" : "opUnary",
            "parameters" : [
             {
              "name" : "op",
              "kind" : "value",
              "type" : "string"
             }
            ],
            "constraint" : "op == \"--\"",
            "members" : [
             {
              "name" : "opUnary",
              "kind" : "function",
              "line" : 459,
              "char" : 12,
              "storageClass" : [
               "auto"
              ],
              "type" : "ref ()",
              "endline" : 465,
              "endchar" : 3
             }
            ]
           },
           {
            "kind" : "template",
            "comment" : "ditto\n",
            "line" : 468,
            "char" : 12,
            "name" : "opOpAssign",
            "parameters" : [
             {
              "name" : "op",
              "kind" : "value",
              "type" : "string"
             }
            ],
            "constraint" : "op == \"+\"",
            "members" : [
             {
              "name" : "opOpAssign",
              "kind" : "function",
              "line" : 468,
              "char" : 12,
              "storageClass" : [
               "auto"
              ],
              "type" : "ref (size_t i)",
              "parameters" : [
               {
                "name" : "i",
                "type" : "size_t"
               }
              ],
              "endline" : 476,
              "endchar" : 3
             }
            ]
           },
           {
            "kind" : "template",
            "comment" : "ditto\n",
            "line" : 479,
            "char" : 12,
            "name" : "opOpAssign",
            "parameters" : [
             {
              "name" : "op",
              "kind" : "value",
              "type" : "string"
             }
            ],
            "constraint" : "op == \"-\"",
            "members" : [
             {
              "name" : "opOpAssign",
              "kind" : "function",
              "line" : 479,
              "char" : 12,
              "storageClass" : [
               "auto"
              ],
              "type" : "ref (size_t i)",
              "parameters" : [
               {
                "name" : "i",
                "type" : "size_t"
               }
              ],
              "endline" : 487,
              "endchar" : 3
             }
            ]
           },
           {
            "name" : "opEquals",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 490,
            "char" : 8,
            "type" : "const pure nothrow bool(TIterator itr)",
            "parameters" : [
             {
              "name" : "itr",
              "type" : "TIterator"
             }
            ],
            "endline" : 493,
            "endchar" : 3
           },
           {
            "name" : "opCmp",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 496,
            "char" : 7,
            "type" : "const pure int(TIterator itr)",
            "parameters" : [
             {
              "name" : "itr",
              "type" : "TIterator"
             }
            ],
            "endline" : 517,
            "endchar" : 3
           },
           {
            "kind" : "template",
            "comment" : "ditto\n",
            "line" : 521,
            "char" : 12,
            "name" : "opBinary",
            "parameters" : [
             {
              "name" : "op",
              "kind" : "value",
              "type" : "string"
             }
            ],
            "constraint" : "op == \"-\"",
            "members" : [
             {
              "name" : "opBinary",
              "kind" : "function",
              "line" : 521,
              "char" : 12,
              "storageClass" : [
               "auto"
              ],
              "type" : "ref (TIterator itr)",
              "parameters" : [
               {
                "name" : "itr",
                "type" : "TIterator"
               }
              ],
              "endline" : 535,
              "endchar" : 3
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 538,
        "char" : 22,
        "name" : "iterator",
        "parameters" : [
         {
          "name" : "TList",
          "kind" : "type"
         },
         {
          "name" : "TNode",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "iterator",
          "kind" : "function",
          "line" : 538,
          "char" : 22,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow (TList list, TNode* n)",
          "parameters" : [
           {
            "name" : "list",
            "type" : "TList"
           },
           {
            "name" : "n",
            "type" : "TNode*"
           }
          ],
          "endline" : 538,
          "endchar" : 115
         }
        ]
       },
       {
        "name" : "Iterator",
        "kind" : "alias",
        "line" : 539,
        "char" : 2,
        "type" : "TIterator!List"
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 544,
        "char" : 9,
        "name" : "TRange",
        "parameters" : [
         {
          "name" : "TList",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "TRange",
          "kind" : "struct",
          "line" : 544,
          "char" : 9,
          "members" : [
           {
            "name" : "TNode",
            "kind" : "alias",
            "line" : 547,
            "char" : 3,
            "type" : "typeof(*TList.root)"
           },
           {
            "name" : "E",
            "kind" : "alias",
            "line" : 548,
            "char" : 3,
            "type" : "typeof(TList.root.val)"
           },
           {
            "name" : "_list",
            "kind" : "variable",
            "line" : 549,
            "char" : 10,
            "type" : "TList"
           },
           {
            "name" : "_first",
            "kind" : "variable",
            "line" : 550,
            "char" : 10,
            "type" : "TNode*"
           },
           {
            "name" : "_end",
            "kind" : "variable",
            "line" : 551,
            "char" : 10,
            "type" : "TNode*"
           },
           {
            "name" : "this",
            "kind" : "constructor",
            "line" : 552,
            "char" : 3,
            "type" : "pure nothrow (TList l, TNode* f, TNode* e)",
            "parameters" : [
             {
              "name" : "l",
              "type" : "TList"
             },
             {
              "name" : "f",
              "type" : "TNode*"
             },
             {
              "name" : "e",
              "type" : "TNode*"
             }
            ],
            "endline" : 557,
            "endchar" : 3
           },
           {
            "name" : "empty",
            "kind" : "function",
            "comment" : " Range primitives.\n",
            "line" : 562,
            "char" : 8,
            "type" : "const @property bool()",
            "endline" : 565,
            "endchar" : 3
           },
           {
            "name" : "front",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 568,
            "char" : 12,
            "type" : "inout @property inout(T)()",
            "endline" : 572,
            "endchar" : 3
           },
           {
            "name" : "back",
            "kind" : "function",
            "comment" : "\n",
            "line" : 577,
            "char" : 12,
            "type" : "inout @property inout(T)()",
            "endline" : 581,
            "endchar" : 3
           },
           {
            "name" : "popFront",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 584,
            "char" : 8,
            "type" : "void()",
            "endline" : 592,
            "endchar" : 3
           },
           {
            "name" : "popBack",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 595,
            "char" : 8,
            "type" : "void()",
            "endline" : 603,
            "endchar" : 3
           },
           {
            "name" : "save",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 606,
            "char" : 8,
            "storageClass" : [
             "auto"
            ],
            "type" : "()",
            "endline" : 609,
            "endchar" : 3
           },
           {
            "name" : "begin",
            "kind" : "function",
            "comment" : " Iterator accessor\n",
            "line" : 614,
            "char" : 12,
            "storageClass" : [
             "auto"
            ],
            "type" : "@property ref ()",
            "endline" : 617,
            "endchar" : 3
           },
           {
            "name" : "end",
            "kind" : "function",
            "comment" : "ditto\n",
            "line" : 620,
            "char" : 12,
            "storageClass" : [
             "auto"
            ],
            "type" : "@property ref ()",
            "endline" : 623,
            "endchar" : 3
           }
          ]
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 625,
        "char" : 22,
        "name" : "range",
        "parameters" : [
         {
          "name" : "TList",
          "kind" : "type"
         },
         {
          "name" : "TNode",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "range",
          "kind" : "function",
          "line" : 625,
          "char" : 22,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow (TList list, TNode* f, TNode* e)",
          "parameters" : [
           {
            "name" : "list",
            "type" : "TList"
           },
           {
            "name" : "f",
            "type" : "TNode*"
           },
           {
            "name" : "e",
            "type" : "TNode*"
           }
          ],
          "endline" : 628,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "Range",
        "kind" : "alias",
        "line" : 629,
        "char" : 2,
        "type" : "TRange!List"
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "line" : 631,
        "char" : 2,
        "type" : "pure ()",
        "endline" : 648,
        "endchar" : 2
       },
       {
        "name" : "empty",
        "kind" : "function",
        "line" : 650,
        "char" : 17,
        "type" : "const pure nothrow @property bool()",
        "endline" : 653,
        "endchar" : 2
       },
       {
        "name" : "front",
        "kind" : "function",
        "line" : 655,
        "char" : 14,
        "type" : "pure @property T()",
        "endline" : 659,
        "endchar" : 2
       },
       {
        "name" : "back",
        "kind" : "function",
        "line" : 661,
        "char" : 14,
        "type" : "pure @property T()",
        "endline" : 665,
        "endchar" : 2
       },
       {
        "kind" : "template",
        "comment" : " Range accessor\n",
        "line" : 671,
        "char" : 7,
        "name" : "opSlice",
        "parameters" : [
         {
          "name" : "This",
          "kind" : "this"
         }
        ],
        "members" : [
         {
          "name" : "opSlice",
          "kind" : "function",
          "line" : 671,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow ()",
          "endline" : 674,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Iterator accessor\n",
        "line" : 679,
        "char" : 7,
        "name" : "begin",
        "parameters" : [
         {
          "name" : "This",
          "kind" : "this"
         }
        ],
        "members" : [
         {
          "name" : "begin",
          "kind" : "function",
          "line" : 679,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @property ()",
          "endline" : 682,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 685,
        "char" : 7,
        "name" : "end",
        "parameters" : [
         {
          "name" : "This",
          "kind" : "this"
         }
        ],
        "members" : [
         {
          "name" : "end",
          "kind" : "function",
          "line" : 685,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "pure nothrow @property ()",
          "endline" : 688,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "stableInsertFront",
        "kind" : "function",
        "comment" : " Container premitive\n",
        "line" : 693,
        "char" : 7,
        "type" : "pure nothrow void(T val)",
        "parameters" : [
         {
          "name" : "val",
          "type" : "T"
         }
        ],
        "endline" : 698,
        "endchar" : 2
       },
       {
        "name" : "insertFront",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 700,
        "char" : 2,
        "type" : "stableInsertFront"
       },
       {
        "name" : "stableInsertBack",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 703,
        "char" : 7,
        "type" : "pure nothrow void(T val)",
        "parameters" : [
         {
          "name" : "val",
          "type" : "T"
         }
        ],
        "endline" : 708,
        "endchar" : 2
       },
       {
        "name" : "insertBack",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 710,
        "char" : 2,
        "type" : "stableInsertBack"
       },
       {
        "name" : "insert",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 712,
        "char" : 2,
        "type" : "insertBack"
       },
       {
        "name" : "stableInsertBefore",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 716,
        "char" : 7,
        "type" : "void(Iterator itr, T val)",
        "parameters" : [
         {
          "name" : "itr",
          "type" : "Iterator"
         },
         {
          "name" : "val",
          "type" : "T"
         }
        ],
        "endline" : 723,
        "endchar" : 2
       },
       {
        "name" : "stableInsertBefore",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 726,
        "char" : 7,
        "type" : "void(Range r, T val)",
        "parameters" : [
         {
          "name" : "r",
          "type" : "Range"
         },
         {
          "name" : "val",
          "type" : "T"
         }
        ],
        "endline" : 729,
        "endchar" : 2
       },
       {
        "name" : "insertBefore",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 732,
        "char" : 2,
        "type" : "stableInsertBefore"
       },
       {
        "name" : "stableInsertAfter",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 735,
        "char" : 7,
        "type" : "void(Iterator itr, T val)",
        "parameters" : [
         {
          "name" : "itr",
          "type" : "Iterator"
         },
         {
          "name" : "val",
          "type" : "T"
         }
        ],
        "endline" : 741,
        "endchar" : 2
       },
       {
        "name" : "stableInsertAfter",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 743,
        "char" : 7,
        "type" : "void(Range r, T val)",
        "parameters" : [
         {
          "name" : "r",
          "type" : "Range"
         },
         {
          "name" : "val",
          "type" : "T"
         }
        ],
        "endline" : 746,
        "endchar" : 2
       },
       {
        "name" : "insertAfter",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 748,
        "char" : 2,
        "type" : "stableInsertAfter"
       },
       {
        "name" : "stableLinearRemove",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 751,
        "char" : 7,
        "type" : "void(Range r)",
        "parameters" : [
         {
          "name" : "r",
          "type" : "Range"
         }
        ],
        "endline" : 757,
        "endchar" : 2
       },
       {
        "name" : "stableLinearRemove",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 760,
        "char" : 7,
        "type" : "void(Iterator itr)",
        "parameters" : [
         {
          "name" : "itr",
          "type" : "Iterator"
         }
        ],
        "endline" : 766,
        "endchar" : 2
       },
       {
        "name" : "convert",
        "kind" : "function",
        "line" : 768,
        "char" : 22,
        "storageClass" : [
         "auto",
         "static"
        ],
        "type" : "(Take!Range r)",
        "parameters" : [
         {
          "name" : "r",
          "type" : "Take!Range"
         }
        ],
        "endline" : 779,
        "endchar" : 2
       },
       {
        "name" : "stableLinearRemove",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 782,
        "char" : 7,
        "type" : "void(Take!Range r)",
        "parameters" : [
         {
          "name" : "r",
          "type" : "Take!Range"
         }
        ],
        "endline" : 785,
        "endchar" : 2
       },
       {
        "name" : "capture",
        "kind" : "function",
        "comment" : "\n",
        "line" : 788,
        "char" : 13,
        "type" : "const @property const(T)[]()",
        "endline" : 794,
        "endchar" : 2
       },
       {
        "name" : "clear",
        "kind" : "function",
        "comment" : "\n",
        "line" : 797,
        "char" : 7,
        "type" : "pure void()",
        "endline" : 801,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "name" : "__unittest_L805_C9",
    "kind" : "function",
    "line" : 805,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 843,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L843_C9",
    "kind" : "function",
    "line" : 843,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 857,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L857_C9",
    "kind" : "function",
    "line" : 857,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 871,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L871_C9",
    "kind" : "function",
    "line" : 871,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 889,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 889,
    "char" : 1,
    "name" : "isCastableDelegate",
    "parameters" : [
     {
      "name" : "aFunc",
      "kind" : "type"
     },
     {
      "name" : "bFunc",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "STC",
      "kind" : "alias",
      "line" : 891,
      "char" : 2,
      "type" : "ParameterStorageClass"
     },
     {
      "kind" : "template",
      "line" : 892,
      "char" : 2,
      "name" : "funcInfo",
      "parameters" : [
       {
        "name" : "func",
        "kind" : "type"
       }
      ],
      "members" : [
       {
        "name" : "stcs",
        "kind" : "alias",
        "line" : 894,
        "char" : 3,
        "type" : "ParameterStorageClassTuple!func"
       },
       {
        "name" : "params",
        "kind" : "alias",
        "line" : 895,
        "char" : 3,
        "type" : "ParameterTypeTuple!func"
       },
       {
        "name" : "ret",
        "kind" : "alias",
        "line" : 896,
        "char" : 3,
        "type" : "ReturnType!func"
       },
       {
        "name" : "valiadic",
        "kind" : "alias",
        "line" : 897,
        "char" : 3,
        "type" : "variadicFunctionStyle!func"
       },
       {
        "name" : "attrib",
        "kind" : "alias",
        "line" : 898,
        "char" : 3,
        "type" : "functionAttributes!func"
       },
       {
        "name" : "linkage",
        "kind" : "alias",
        "line" : 899,
        "char" : 3,
        "type" : "functionLinkage!func"
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 901,
      "char" : 2,
      "name" : "isStcsConvertible",
      "parameters" : [
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "aStcs",
        "kind" : "alias",
        "line" : 905,
        "char" : 4,
        "type" : "Args[0 .. Args.length / 2]"
       },
       {
        "name" : "bStcs",
        "kind" : "alias",
        "line" : 906,
        "char" : 4,
        "type" : "Args[Args.length / 2 .. __dollar]"
       },
       {
        "name" : "isStcsConvertible",
        "kind" : "variable",
        "line" : 907,
        "char" : 14,
        "storageClass" : [
         "enum"
        ],
        "deco" : "b",
        "init" : "aStcs[0] == bStcs[0] && isStcsConvertible!(aStcs[1 .. __dollar], bStcs[1 .. __dollar])"
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 915,
      "char" : 2,
      "name" : "isParamsConvertible",
      "parameters" : [
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "aParams",
        "kind" : "alias",
        "line" : 919,
        "char" : 4,
        "type" : "Args[0 .. Args.length / 2]"
       },
       {
        "name" : "bParams",
        "kind" : "alias",
        "line" : 920,
        "char" : 4,
        "type" : "Args[Args.length / 2 .. __dollar]"
       },
       {
        "name" : "isParamsConvertible",
        "kind" : "variable",
        "line" : 921,
        "char" : 14,
        "storageClass" : [
         "enum"
        ],
        "deco" : "b",
        "init" : "(is(aParams[0] == bParams[0]) || isImplicitlyConvertible!(aParams[0], bParams[0])) && isParamsConvertible!(aParams[1 .. __dollar], bParams[1 .. __dollar])"
       }
      ]
     },
     {
      "name" : "aInfo",
      "kind" : "alias",
      "line" : 930,
      "char" : 2,
      "type" : "funcInfo!aFunc"
     },
     {
      "name" : "bInfo",
      "kind" : "alias",
      "line" : 931,
      "char" : 2,
      "type" : "funcInfo!bFunc"
     },
     {
      "name" : "nonParamDgA",
      "kind" : "alias",
      "line" : 934,
      "char" : 2,
      "type" : "SetFunctionAttributes!(aInfo.ret delegate(), aInfo.linkage, aInfo.attrib)"
     },
     {
      "name" : "nonParamDgB",
      "kind" : "alias",
      "line" : 935,
      "char" : 2,
      "type" : "SetFunctionAttributes!(bInfo.ret delegate(), bInfo.linkage, bInfo.attrib & (aInfo.attrib & FunctionAttribute.nothrow_ ? ~0 : ~FunctionAttribute.nothrow_) & (aInfo.attrib & FunctionAttribute.pure_ ? ~0 : ~FunctionAttribute.pure_) & (aInfo.attrib & FunctionAttribute.nogc ? ~0 : ~FunctionAttribute.nogc) & (aInfo.attrib & (FunctionAttribute.safe | FunctionAttribute.trusted) ? ~0 : ~(FunctionAttribute.safe | FunctionAttribute.trusted)))"
     },
     {
      "name" : "std.string",
      "kind" : "import",
      "line" : 942,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "isCastableDelegate",
      "kind" : "variable",
      "line" : 945,
      "char" : 13,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "aInfo.valiadic == bInfo.valiadic && isCovariantWith!(FunctionTypeOf!nonParamDgA, FunctionTypeOf!nonParamDgB) && isStcsConvertible!(aInfo.stcs, bInfo.stcs) && isParamsConvertible!(aInfo.params, bInfo.params)"
     }
    ]
   },
   {
    "name" : "__unittest_L955_C9",
    "kind" : "function",
    "line" : 955,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 986,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Generic Handler\n\n\n $(__123 a, bbb) = xxx\n\n Macros:\n     bbb  = cccccc\n     _123 = [$1 ::: $($2)]\n",
    "line" : 986,
    "char" : 1,
    "name" : "Handler",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     }
    ],
    "constraint" : "isCallable!F && (is(ReturnType!F == void) || is(ReturnType!F : bool))",
    "members" : [
     {
      "name" : "Handler",
      "kind" : "struct",
      "line" : 986,
      "char" : 1,
      "members" : [
       {
        "kind" : "template",
        "line" : 990,
        "char" : 2,
        "name" : "_ExFuncInfo",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "FuncType",
          "kind" : "alias",
          "line" : 992,
          "char" : 3,
          "type" : "FunctionTypeOf!Func"
         },
         {
          "name" : "RT",
          "kind" : "alias",
          "line" : 993,
          "char" : 3,
          "type" : "ReturnType!Func"
         },
         {
          "name" : "PT",
          "kind" : "alias",
          "line" : 994,
          "char" : 3,
          "type" : "ParameterTypeTuple!Func"
         },
         {
          "name" : "stcs",
          "kind" : "alias",
          "line" : 995,
          "char" : 3,
          "type" : "ParameterStorageClassTuple!Func"
         },
         {
          "name" : "valiadic",
          "kind" : "alias",
          "line" : 996,
          "char" : 3,
          "type" : "variadicFunctionStyle!Func"
         },
         {
          "name" : "attrib",
          "kind" : "variable",
          "line" : 997,
          "char" : 9,
          "storageClass" : [
           "enum"
          ],
          "init" : "functionAttributes!Func"
         },
         {
          "name" : "linkage",
          "kind" : "alias",
          "line" : 998,
          "char" : 3,
          "type" : "functionLinkage!Func"
         },
         {
          "name" : "abst",
          "kind" : "alias",
          "line" : 999,
          "char" : 3,
          "type" : "isAbstractFunction!Func"
         },
         {
          "name" : "virt",
          "kind" : "alias",
          "line" : 1000,
          "char" : 3,
          "type" : "isVirtualMethod!F"
         }
        ]
       },
       {
        "name" : "_exFuncInfo",
        "kind" : "alias",
        "line" : 1002,
        "char" : 2,
        "type" : "_ExFuncInfo!F"
       },
       {
        "name" : "DummyData",
        "kind" : "struct",
        "line" : 1003,
        "char" : 9,
        "members" : [
         {
          "kind" : "template",
          "line" : 1005,
          "char" : 3,
          "name" : "_EmitGeneratingPolicy",
          "parameters" : [],
          "members" : [
           {
            "kind" : "template",
            "line" : 1007,
            "char" : 4,
            "name" : "generateFunctionBody",
            "parameters" : [
             {
              "name" : "unused",
              "kind" : "tuple"
             }
            ],
            "members" : [
             {
              "name" : "generateFunctionBody",
              "kind" : "variable",
              "line" : 1009,
              "char" : 10,
              "storageClass" : [
               "enum"
              ],
              "init" : "\"\\x0a\\x09\\x09\\x09\\x09\\x09static if (is(_exFuncInfo.RT: bool))\\x0a\\x09\\x09\\x09\\x09\\x09\\x09return _exFuncInfo.RT.init;\\x0a\\x09\\x09\\x09\\x09\""
             }
            ]
           }
          ]
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1019,
        "char" : 2,
        "name" : "_EmitGeneratingPolicy",
        "parameters" : [],
        "members" : [
         {
          "kind" : "template",
          "line" : 1021,
          "char" : 3,
          "name" : "generateFunctionBody",
          "parameters" : [
           {
            "name" : "unused",
            "kind" : "tuple"
           }
          ],
          "members" : [
           {
            "name" : "std.conv",
            "kind" : "import",
            "line" : 1023,
            "char" : 11,
            "protection" : "private"
           },
           {
            "name" : "generateFunctionBody",
            "kind" : "variable",
            "line" : 1024,
            "char" : 9,
            "storageClass" : [
             "enum"
            ],
            "init" : "\"\\x0a\\x09\\x09\\x09\\x09alias FnTy = SetFunctionAttributes!(typeof((*cast(Unique!ProcList*)&_procs)[].front),\\x0a\\x09\\x09\\x09\\x09                                    _exFuncInfo.linkage, _exFuncInfo.attrib);\\x0a\\x09\\x09\\x09\\x09static if (is(_exFuncInfo.RT: bool))\\x0a\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09if ((*cast(Unique!ProcList*)&_procs).isEmpty())\\x0a\\x09\\x09\\x09\\x09\\x09\\x09return _exFuncInfo.RT.init;\\x0a\\x09\\x09\\x09\\x09\\x09_exFuncInfo.RT ret;\\x0a\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09else\\x0a\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09if ((*cast(Unique!ProcList*)&_procs).isEmpty())\\x0a\\x09\\x09\\x09\\x09\\x09\\x09return;\\x0a\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09static if (_exFuncInfo.attrib & FunctionAttribute.nothrow_)\\x0a\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09try\\x0a\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09foreach (FnTy proc; (*cast(Unique!ProcList*)&_procs).capture)\\x0a\\x09\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09static if (is(_exFuncInfo.RT: bool))\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09ret = proc(args);\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09if (!ret)\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09return ret;\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09else\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09proc(args);\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09\\x09catch (Throwable)\\x0a\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09else\\x0a\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09foreach (proc; (*cast(Unique!ProcList*)&_procs).capture)\\x0a\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09static if (is(_exFuncInfo.RT: bool))\\x0a\\x09\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09ret = proc(args);\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09if (!ret)\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09\\x09return ret;\\x0a\\x09\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09\\x09\\x09else\\x0a\\x09\\x09\\x09\\x09\\x09\\x09{\\x0a\\x09\\x09\\x09\\x09\\x09\\x09\\x09proc(args);\\x0a\\x09\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09}\\x0a\\x09\\x09\\x09\\x09static if (is(_exFuncInfo.RT: bool))\\x0a\\x09\\x09\\x09\\x09\\x09return ret;\\x0a\\x09\\x09\\x09\""
           }
          ]
         }
        ]
       },
       {
        "name" : "emit",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1089,
        "char" : 11,
        "type" : "RetType(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ]
       },
       {
        "name" : "emit",
        "kind" : "function",
        "comment" : "ditto\n\n\n",
        "line" : 1091,
        "char" : 11,
        "type" : "const RetType(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ]
       },
       {
        "name" : "emit",
        "kind" : "function",
        "comment" : "ditto\n\n\n",
        "line" : 1093,
        "char" : 11,
        "type" : "shared const RetType(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ]
       },
       {
        "name" : "opCall",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 1101,
        "char" : 2,
        "type" : "emit"
       },
       {
        "name" : "Proc",
        "kind" : "alias",
        "line" : 1102,
        "char" : 2,
        "type" : "F"
       },
       {
        "name" : "Args",
        "kind" : "alias",
        "line" : 1103,
        "char" : 2,
        "type" : "_exFuncInfo.PT"
       },
       {
        "name" : "RetType",
        "kind" : "alias",
        "line" : 1104,
        "char" : 2,
        "type" : "_exFuncInfo.RT"
       },
       {
        "name" : "ProcList",
        "kind" : "alias",
        "line" : 1105,
        "char" : 2,
        "type" : "List!Proc"
       },
       {
        "name" : "voile.unique",
        "kind" : "import",
        "line" : 1106,
        "char" : 9,
        "protection" : "private"
       },
       {
        "name" : "_procs",
        "kind" : "variable",
        "line" : 1107,
        "char" : 26,
        "type" : "Unique!ProcList"
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1110,
        "char" : 14,
        "name" : "toConnectable",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toDelegate(fn))) && isCastableDelegate!(Proc, typeof(toDelegate(fn)))",
        "members" : [
         {
          "name" : "toConnectable",
          "kind" : "function",
          "line" : 1110,
          "char" : 14,
          "type" : "Proc(Func fn)",
          "parameters" : [
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1115,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "_TidCaller",
        "kind" : "function",
        "line" : 1120,
        "char" : 23,
        "storageClass" : [
         "static"
        ],
        "type" : "void(Args args, Tid* tid)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         },
         {
          "name" : "tid",
          "type" : "Tid*"
         }
        ],
        "endline" : 1123,
        "endchar" : 3
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1125,
        "char" : 15,
        "name" : "toConnectable",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Func == Tid)",
        "members" : [
         {
          "name" : "toConnectable",
          "kind" : "function",
          "line" : 1125,
          "char" : 15,
          "type" : "Proc(Func tid)",
          "parameters" : [
           {
            "name" : "tid",
            "type" : "Func"
           }
          ],
          "endline" : 1129,
          "endchar" : 3
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 1131,
        "char" : 23,
        "name" : "_RangeOutputter",
        "parameters" : [
         {
          "name" : "Range",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "_RangeOutputter",
          "kind" : "function",
          "line" : 1131,
          "char" : 23,
          "type" : "void(Args args, Range r)",
          "parameters" : [
           {
            "name" : "args",
            "type" : "Args"
           },
           {
            "name" : "r",
            "type" : "Range"
           }
          ],
          "endline" : 1135,
          "endchar" : 3
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1137,
        "char" : 15,
        "name" : "toConnectable",
        "parameters" : [
         {
          "name" : "Range",
          "kind" : "type"
         }
        ],
        "constraint" : "Args.length == 1 && isOutputRange!(Range, Args) && !isCallable!Range && (is(Range == class) || is(Range == interface) || isPointer!Range) && is(typeof(()\n{\nRange tmp;\nif (!tmp.empty)\n{\n}\n}\n))",
        "members" : [
         {
          "name" : "toConnectable",
          "kind" : "function",
          "line" : 1137,
          "char" : 15,
          "type" : "Proc(Range r)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "Range"
           }
          ],
          "endline" : 1147,
          "endchar" : 3
         }
        ]
       },
       {
        "name" : "_FiberCaller",
        "kind" : "function",
        "line" : 1151,
        "char" : 23,
        "storageClass" : [
         "static"
        ],
        "type" : "@trusted void(Fiber fb)",
        "parameters" : [
         {
          "name" : "fb",
          "type" : "Fiber"
         }
        ],
        "endline" : 1154,
        "endchar" : 3
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1156,
        "char" : 15,
        "name" : "toConnectable",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Func : Fiber)",
        "members" : [
         {
          "name" : "toConnectable",
          "kind" : "function",
          "line" : 1156,
          "char" : 15,
          "type" : "Proc(Func fib)",
          "parameters" : [
           {
            "name" : "fib",
            "type" : "Func"
           }
          ],
          "endline" : 1160,
          "endchar" : 3
         }
        ]
       },
       {
        "name" : "HandlerProcId",
        "kind" : "alias",
        "comment" : "\n",
        "line" : 1166,
        "char" : 2,
        "type" : "ProcList.Iterator"
       },
       {
        "kind" : "template",
        "comment" : " Connect\n\n Params:\n     fn = delegate, function, Tid, Object( has opCall ), Fiber,\n          OutputRange(class or interface or T*, and has empty method)\n",
        "line" : 1175,
        "char" : 16,
        "name" : "connect",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "connect",
          "kind" : "function",
          "line" : 1175,
          "char" : 16,
          "type" : "HandlerProcId(Func fn)",
          "parameters" : [
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1185,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " 一度だけ実行するハンドラを接続する\n",
        "line" : 1191,
        "char" : 16,
        "name" : "singleShotConnect",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "singleShotConnect",
          "kind" : "function",
          "line" : 1191,
          "char" : 16,
          "type" : "HandlerProcId(Func fn)",
          "parameters" : [
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1224,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1227,
        "char" : 7,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "op == \"~\" && is(typeof(connect(dg)))",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1227,
          "char" : 7,
          "type" : "void(Func dg)",
          "parameters" : [
           {
            "name" : "dg",
            "type" : "Func"
           }
          ],
          "endline" : 1230,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "put",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 1234,
        "char" : 2,
        "type" : "connect"
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1240,
        "char" : 16,
        "name" : "connectedId",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "connectedId",
          "kind" : "function",
          "line" : 1240,
          "char" : 16,
          "type" : "HandlerProcId(Func fn)",
          "parameters" : [
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1253,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Concut\n\n Params:\n     procs = other Handler\n",
        "line" : 1262,
        "char" : 7,
        "name" : "opOpAssign",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         },
         {
          "name" : "ProcContainer",
          "kind" : "type"
         }
        ],
        "constraint" : "op == \"~\" && is(ForeachType!(typeof(ProcContainer.init[])) : Proc)",
        "members" : [
         {
          "name" : "opOpAssign",
          "kind" : "function",
          "line" : 1262,
          "char" : 7,
          "type" : "void(auto ref ProcContainer procs)",
          "parameters" : [
           {
            "name" : "procs",
            "type" : "ProcContainer",
            "storageClass" : [
             "auto",
             "ref"
            ]
           }
          ],
          "endline" : 1271,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "opSlice",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1278,
        "char" : 7,
        "storageClass" : [
         "auto"
        ],
        "type" : "()",
        "endline" : 1283,
        "endchar" : 2
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1289,
        "char" : 7,
        "name" : "opCast",
        "parameters" : [
         {
          "name" : "T",
          "kind" : "type"
         }
        ],
        "constraint" : "is(T == bool)",
        "members" : [
         {
          "name" : "opCast",
          "kind" : "function",
          "line" : 1289,
          "char" : 7,
          "type" : "const pure nothrow bool()",
          "endline" : 1293,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1299,
        "char" : 7,
        "name" : "disconnect",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "disconnect",
          "kind" : "function",
          "line" : 1299,
          "char" : 7,
          "type" : "void(Func fn)",
          "parameters" : [
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1303,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1306,
        "char" : 7,
        "name" : "disconnect",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Func == HandlerProcId)",
        "members" : [
         {
          "name" : "disconnect",
          "kind" : "function",
          "line" : 1306,
          "char" : 7,
          "type" : "void(Func id)",
          "parameters" : [
           {
            "name" : "id",
            "type" : "Func"
           }
          ],
          "endline" : 1312,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1315,
        "char" : 7,
        "name" : "disconnect",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Func == Handler)",
        "members" : [
         {
          "name" : "disconnect",
          "kind" : "function",
          "line" : 1315,
          "char" : 7,
          "type" : "void(Func hnd)",
          "parameters" : [
           {
            "name" : "hnd",
            "type" : "Func"
           }
          ],
          "endline" : 1322,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "remove",
        "kind" : "alias",
        "comment" : "ditto\n",
        "line" : 1325,
        "char" : 2,
        "type" : "disconnect"
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1330,
        "char" : 7,
        "name" : "insertAfter",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "insertAfter",
          "kind" : "function",
          "line" : 1330,
          "char" : 7,
          "type" : "void(ProcList.Range r, Func fn)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "ProcList.Range"
           },
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1337,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1340,
        "char" : 7,
        "name" : "insertAfter",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "insertAfter",
          "kind" : "function",
          "line" : 1340,
          "char" : 7,
          "type" : "void(HandlerProcId needleid, Func fn)",
          "parameters" : [
           {
            "name" : "needleid",
            "type" : "HandlerProcId"
           },
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1347,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1350,
        "char" : 7,
        "name" : "insertAfter",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "insertAfter",
          "kind" : "function",
          "line" : 1350,
          "char" : 7,
          "type" : "void(Func needle, Func fn)",
          "parameters" : [
           {
            "name" : "needle",
            "type" : "Func"
           },
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1358,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 1363,
        "char" : 7,
        "name" : "insertBefore",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "insertBefore",
          "kind" : "function",
          "line" : 1363,
          "char" : 7,
          "type" : "void(ProcList.Range r, Func fn)",
          "parameters" : [
           {
            "name" : "r",
            "type" : "ProcList.Range"
           },
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1370,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1373,
        "char" : 7,
        "name" : "insertBefore",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "insertBefore",
          "kind" : "function",
          "line" : 1373,
          "char" : 7,
          "type" : "void(HandlerProcId needleid, Func fn)",
          "parameters" : [
           {
            "name" : "needleid",
            "type" : "HandlerProcId"
           },
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1380,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1383,
        "char" : 7,
        "name" : "insertBefore",
        "parameters" : [
         {
          "name" : "Func",
          "kind" : "type"
         }
        ],
        "constraint" : "is(typeof(toConnectable(fn)))",
        "members" : [
         {
          "name" : "insertBefore",
          "kind" : "function",
          "line" : 1383,
          "char" : 7,
          "type" : "void(Func needle, Func fn)",
          "parameters" : [
           {
            "name" : "needle",
            "type" : "Func"
           },
           {
            "name" : "fn",
            "type" : "Func"
           }
          ],
          "endline" : 1391,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "clear",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1396,
        "char" : 7,
        "type" : "pure void()",
        "endline" : 1401,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "name" : "__unittest_L1467_C9",
    "kind" : "function",
    "line" : 1467,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1517,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.json",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/json.d",
  "members" : [
   {
    "name" : "voile.misc",
    "kind" : "import",
    "line" : 3,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.json",
    "kind" : "import",
    "line" : 4,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 4,
    "char" : 18,
    "protection" : "private"
   },
   {
    "name" : "std.conv",
    "kind" : "import",
    "line" : 4,
    "char" : 30,
    "protection" : "private"
   },
   {
    "name" : "std.array",
    "kind" : "import",
    "line" : 4,
    "char" : 40,
    "protection" : "private"
   },
   {
    "kind" : "template",
    "comment" : " JSONValueデータを得る\n",
    "line" : 10,
    "char" : 11,
    "name" : "json",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!(T[])",
    "members" : [
     {
      "name" : "json",
      "kind" : "function",
      "line" : 10,
      "char" : 11,
      "type" : "@property JSONValue(auto ref const T[] x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "T[]",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 14,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 18,
    "char" : 11,
    "name" : "json",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isIntegral!T && !is(T == enum) || isFloatingPoint!T || is(Unqual!T == bool)",
    "members" : [
     {
      "name" : "json",
      "kind" : "function",
      "line" : 18,
      "char" : 11,
      "type" : "@property JSONValue(auto ref const T x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "T",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 24,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 28,
    "char" : 11,
    "name" : "json",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == enum)",
    "members" : [
     {
      "name" : "json",
      "kind" : "function",
      "line" : 28,
      "char" : 11,
      "type" : "@property JSONValue(auto ref const T x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "T",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 32,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 36,
    "char" : 11,
    "name" : "json",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isSomeString!(T[]) && isArray!(T[])",
    "members" : [
     {
      "name" : "json",
      "kind" : "function",
      "line" : 36,
      "char" : 11,
      "type" : "@property JSONValue(auto ref const T[] ary)",
      "parameters" : [
       {
        "name" : "ary",
        "type" : "T[]",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 47,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 51,
    "char" : 11,
    "name" : "json",
    "parameters" : [
     {
      "name" : "Value",
      "kind" : "type"
     },
     {
      "name" : "Key",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!Key && is(typeof(()\n{\nauto v = Value.init.json;\n}\n))",
    "members" : [
     {
      "name" : "json",
      "kind" : "function",
      "line" : 51,
      "char" : 11,
      "type" : "@property JSONValue(auto ref const Value[Key] aa)",
      "parameters" : [
       {
        "name" : "aa",
        "type" : "Value[Key]",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 66,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 69,
    "char" : 20,
    "name" : "json",
    "parameters" : [
     {
      "name" : "JV",
      "kind" : "type"
     }
    ],
    "constraint" : "is(JV : const(JSONValue))",
    "members" : [
     {
      "name" : "json",
      "kind" : "function",
      "line" : 69,
      "char" : 20,
      "storageClass" : [
       "auto"
      ],
      "type" : "@property ref JSONValue(auto ref const JV v)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JV",
        "storageClass" : [
         "auto",
         "const",
         "ref"
        ]
       }
      ],
      "endline" : 73,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L76_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 76,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 94,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L94_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 94,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 123,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L123_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 123,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 134,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L134_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 134,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 148,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L148_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 148,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 162,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L162_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 162,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 176,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L176_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 176,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 205,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 205,
    "char" : 14,
    "name" : "_setValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(typeof(val.json))",
    "members" : [
     {
      "name" : "_setValue",
      "kind" : "function",
      "line" : 205,
      "char" : 14,
      "type" : "void(ref JSONValue v, ref string name, ref T val)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "val",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 218,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " JSONValueデータの操作\n",
    "line" : 223,
    "char" : 6,
    "name" : "setValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "setValue",
      "kind" : "function",
      "line" : 223,
      "char" : 6,
      "type" : "pure nothrow @trusted void(ref JSONValue v, string name, T val)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "val",
        "type" : "T"
       }
      ],
      "endline" : 232,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L235_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 235,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 248,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L248_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 248,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 263,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L263_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 263,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 283,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L283_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 283,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 298,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 298,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 298,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 314,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 317,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 317,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal = T.init)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ],
        "default" : "T.init"
       }
      ],
      "endline" : 326,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 330,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isIntegral!T && !is(T == enum)",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 330,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 344,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 347,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isIntegral!T && !is(T == enum)",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 347,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ]
       }
      ],
      "endline" : 356,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 360,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFloatingPoint!T",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 360,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 377,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 380,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFloatingPoint!T",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 380,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ]
       }
      ],
      "endline" : 389,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 393,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == struct) && !is(Unqual!T : JSONValue)",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 393,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 402,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 405,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == struct) && !is(Unqual!T : JSONValue)",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 405,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal = T.init)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ],
        "default" : "T.init"
       }
      ],
      "endline" : 418,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 422,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == class)",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 422,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 433,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 436,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == class)",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 436,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ]
       }
      ],
      "endline" : 449,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 453,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == enum)",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 453,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 462,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 465,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == enum)",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 465,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ]
       }
      ],
      "endline" : 474,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 478,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == bool)",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 478,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 492,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 495,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(T == bool)",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 495,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ]
       }
      ],
      "endline" : 504,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 508,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isSomeString!T && isDynamicArray!T",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 508,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 523,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 525,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isSomeString!T && isDynamicArray!T",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 525,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal = T.init)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ],
        "default" : "T.init"
       }
      ],
      "endline" : 534,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 538,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "Value",
      "kind" : "type"
     },
     {
      "name" : "Key",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!Key && is(typeof(()\n{\nJSONValue val;\nfromJson(val, dst[Key.init]);\n}\n))",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 538,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref Value[Key] dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "Value[Key]",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 563,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 565,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type",
      "type" : "Value[Key]"
     },
     {
      "name" : "Value",
      "kind" : "type"
     },
     {
      "name" : "Key",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!Key && is(typeof(()\n{\nJSONValue val;\nValue[Key] dst;\nfromJson(val, dst[Key.init]);\n}\n))",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 565,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope Value[Key] defaultVal = T.init)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "Value[Key]",
        "storageClass" : [
         "scope",
         "lazy"
        ],
        "default" : "T.init"
       }
      ],
      "endline" : 575,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 578,
    "char" : 6,
    "name" : "fromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(Unqual!T == JSONValue)",
    "members" : [
     {
      "name" : "fromJson",
      "kind" : "function",
      "line" : 578,
      "char" : 6,
      "type" : "bool(ref JSONValue src, ref T dst)",
      "parameters" : [
       {
        "name" : "src",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "dst",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 583,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 585,
    "char" : 11,
    "name" : "_getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "is(Unqual!T == JSONValue)",
    "members" : [
     {
      "name" : "_getValue",
      "kind" : "function",
      "line" : 585,
      "char" : 11,
      "type" : "T(ref JSONValue v, string name, lazy scope T defaultVal = T.init)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ],
        "default" : "T.init"
       }
      ],
      "endline" : 594,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 597,
    "char" : 3,
    "name" : "getValue",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "getValue",
      "kind" : "function",
      "line" : 597,
      "char" : 3,
      "type" : "pure nothrow @trusted T(ref JSONValue v, string name, lazy scope T defaultVal = T.init)",
      "parameters" : [
       {
        "name" : "v",
        "type" : "JSONValue",
        "storageClass" : [
         "in",
         "ref"
        ]
       },
       {
        "name" : "name",
        "type" : "string"
       },
       {
        "name" : "defaultVal",
        "type" : "T",
        "storageClass" : [
         "scope",
         "lazy"
        ],
        "default" : "T.init"
       }
      ],
      "endline" : 614,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L618_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 618,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 633,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L633_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 633,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 648,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L648_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 648,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 675,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L675_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 675,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 702,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L702_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 702,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 717,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L717_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 717,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 734,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L734_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 734,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 762,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L762_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 762,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 788,
    "endchar" : 1
   },
   {
    "name" : "std.typecons",
    "kind" : "import",
    "line" : 788,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "Rebindable"
    ]
   },
   {
    "name" : "JSONValueArray",
    "kind" : "alias",
    "comment" : "\n",
    "line" : 791,
    "char" : 1,
    "deco" : "AxS3std4json9JSONValue",
    "originalType" : "Rebindable!(const(JSONValue[]))"
   },
   {
    "name" : "JSONValueObject",
    "kind" : "alias",
    "comment" : "\n",
    "line" : 793,
    "char" : 1,
    "deco" : "S3std8typecons__T10RebindableTxHAyaSQBj4json9JSONValueZQBm"
   },
   {
    "name" : "getArray",
    "kind" : "function",
    "comment" : "\n",
    "line" : 798,
    "char" : 6,
    "deco" : "FS3std4json9JSONValueAyaKAxSQBaQzQwZb",
    "originalType" : "bool(JSONValue json, string name, ref JSONValueArray ary)",
    "parameters" : [
     {
      "name" : "json",
      "deco" : "S3std4json9JSONValue"
     },
     {
      "name" : "name",
      "deco" : "Aya"
     },
     {
      "name" : "ary",
      "deco" : "AxS3std4json9JSONValue",
      "storageClass" : [
       "ref"
      ]
     }
    ],
    "endline" : 810,
    "endchar" : 1
   },
   {
    "name" : "getObject",
    "kind" : "function",
    "comment" : "\n",
    "line" : 815,
    "char" : 6,
    "deco" : "FS3std4json9JSONValueAyaKSQy8typecons__T10RebindableTxHQBiSQCfQCeQCcZQBdZb",
    "originalType" : "bool(JSONValue json, string name, ref JSONValueObject object)",
    "parameters" : [
     {
      "name" : "json",
      "deco" : "S3std4json9JSONValue"
     },
     {
      "name" : "name",
      "deco" : "Aya"
     },
     {
      "name" : "object",
      "deco" : "S3std8typecons__T10RebindableTxHAyaSQBj4json9JSONValueZQBm",
      "storageClass" : [
       "ref"
      ]
     }
    ],
    "endline" : 827,
    "endchar" : 1
   },
   {
    "name" : "AttrName",
    "kind" : "struct",
    "comment" : "\n",
    "line" : 830,
    "char" : 1,
    "members" : [
     {
      "name" : "name",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 833,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "AttrEssential",
    "kind" : "struct",
    "comment" : "\n",
    "line" : 836,
    "char" : 1,
    "members" : []
   },
   {
    "name" : "AttrIgnore",
    "kind" : "struct",
    "comment" : "\n",
    "line" : 840,
    "char" : 1,
    "members" : []
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 844,
    "char" : 1,
    "name" : "AttrConverter",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "AttrConverter",
      "kind" : "struct",
      "line" : 844,
      "char" : 1,
      "members" : [
       {
        "name" : "from",
        "kind" : "variable",
        "comment" : "\n",
        "line" : 847,
        "char" : 29,
        "type" : "T function(in JSONValue v)"
       },
       {
        "name" : "to",
        "kind" : "variable",
        "comment" : "\n",
        "line" : 849,
        "char" : 29,
        "type" : "JSONValue function(in T v)"
       }
      ]
     }
    ]
   },
   {
    "name" : "name",
    "kind" : "function",
    "comment" : " Attribute forcing field name\n",
    "line" : 856,
    "char" : 10,
    "deco" : "FAyaZS5voile4json8AttrName",
    "parameters" : [
     {
      "name" : "name",
      "deco" : "Aya"
     }
    ],
    "endline" : 859,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " Attribute converting method\n",
    "line" : 864,
    "char" : 17,
    "name" : "converter",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "converter",
      "kind" : "function",
      "line" : 864,
      "char" : 17,
      "type" : "AttrConverter!T(T function(in JSONValue) from, JSONValue function(in T) to)",
      "parameters" : [
       {
        "name" : "from",
        "type" : "T function(in JSONValue)"
       },
       {
        "name" : "to",
        "type" : "JSONValue function(in T)"
       }
      ],
      "endline" : 867,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "essential",
    "kind" : "variable",
    "comment" : " Attribute marking essential field\n",
    "line" : 872,
    "char" : 20,
    "storageClass" : [
     "enum"
    ],
    "deco" : "S5voile4json13AttrEssential",
    "init" : "AttrEssential()"
   },
   {
    "name" : "ignore",
    "kind" : "variable",
    "comment" : " Attribute marking ignore data\n",
    "line" : 877,
    "char" : 17,
    "storageClass" : [
     "enum"
    ],
    "deco" : "S5voile4json10AttrIgnore",
    "init" : "AttrIgnore()"
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 880,
    "char" : 14,
    "name" : "isJSONizableRaw",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isJSONizableRaw",
      "kind" : "variable",
      "line" : 880,
      "char" : 14,
      "storageClass" : [
       "enum"
      ],
      "init" : "is(typeof(()\n{\nT val;\nJSONValue jv = val.json;\nfromJson(jv, val);\n}\n))"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " serialize data to JSON\n",
    "line" : 889,
    "char" : 11,
    "name" : "serializeToJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "serializeToJson",
      "kind" : "function",
      "line" : 889,
      "char" : 11,
      "type" : "JSONValue(in T data)",
      "parameters" : [
       {
        "name" : "data",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       }
      ],
      "endline" : 942,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 945,
    "char" : 8,
    "name" : "serializeToJsonString",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "serializeToJsonString",
      "kind" : "function",
      "line" : 945,
      "char" : 8,
      "type" : "string(in T data, JSONOptions options = JSONOptions.none)",
      "parameters" : [
       {
        "name" : "data",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "options",
        "type" : "JSONOptions",
        "default" : "JSONOptions.none"
       }
      ],
      "endline" : 948,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 951,
    "char" : 6,
    "name" : "serializeToJsonFile",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "serializeToJsonFile",
      "kind" : "function",
      "line" : 951,
      "char" : 6,
      "type" : "void(in T data, string jsonfile, JSONOptions options = JSONOptions.none)",
      "parameters" : [
       {
        "name" : "data",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "jsonfile",
        "type" : "string"
       },
       {
        "name" : "options",
        "type" : "JSONOptions",
        "default" : "JSONOptions.none"
       }
      ],
      "endline" : 956,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " deserialize data from JSON\n",
    "line" : 961,
    "char" : 6,
    "name" : "deserializeFromJson",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "deserializeFromJson",
      "kind" : "function",
      "line" : 961,
      "char" : 6,
      "type" : "void(ref T data, in JSONValue json)",
      "parameters" : [
       {
        "name" : "data",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "json",
        "type" : "JSONValue",
        "storageClass" : [
         "in"
        ]
       }
      ],
      "endline" : 1061,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1064,
    "char" : 6,
    "name" : "deserializeFromJsonString",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "deserializeFromJsonString",
      "kind" : "function",
      "line" : 1064,
      "char" : 6,
      "type" : "void(ref T data, string jsonContents)",
      "parameters" : [
       {
        "name" : "data",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "jsonContents",
        "type" : "string"
       }
      ],
      "endline" : 1067,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1070,
    "char" : 6,
    "name" : "deserializeFromJsonFile",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "deserializeFromJsonFile",
      "kind" : "function",
      "line" : 1070,
      "char" : 6,
      "type" : "void(ref T data, string jsonFile)",
      "parameters" : [
       {
        "name" : "data",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "jsonFile",
        "type" : "string"
       }
      ],
      "endline" : 1074,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1077_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1077,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1162,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1162_C9",
    "kind" : "function",
    "line" : 1162,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1180,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1180_C9",
    "kind" : "function",
    "line" : 1180,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1199,
    "endchar" : 1
   },
   {
    "name" : "deepCopy",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1199,
    "char" : 11,
    "deco" : "FNdxS3std4json9JSONValueZSQvQtQq",
    "originalType" : "@property JSONValue(in JSONValue v)",
    "parameters" : [
     {
      "name" : "v",
      "deco" : "xS3std4json9JSONValue"
     }
    ],
    "endline" : 1222,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1224_C9",
    "kind" : "function",
    "line" : 1224,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1234,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1234_C9",
    "kind" : "function",
    "line" : 1234,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1244,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.judge",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/judge.d",
  "comment" : " judgement モジュール\n\n 複数の要素でチェックを行いたい場合に使用することのできる Judgement が利用可能\n\n Date: September 08, 2011\n Authors:\n     P.Knowledge, SHOO\n License:\n     NYSL ( http://www.kmonos.net/nysl/ )\n\n",
  "members" : [
   {
    "name" : "std.conv",
    "kind" : "import",
    "line" : 15,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 15,
    "char" : 18,
    "protection" : "private"
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 17,
    "char" : 9,
    "name" : "MessageText",
    "parameters" : [
     {
      "name" : "String",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "MessageText",
      "kind" : "class",
      "line" : 17,
      "char" : 9,
      "members" : [
       {
        "name" : "_text",
        "kind" : "variable",
        "line" : 19,
        "char" : 9,
        "type" : "String"
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "line" : 20,
        "char" : 2,
        "type" : "(String str)",
        "parameters" : [
         {
          "name" : "str",
          "type" : "String"
         }
        ],
        "endline" : 23,
        "endchar" : 2
       },
       {
        "name" : "toString",
        "kind" : "function",
        "line" : 24,
        "char" : 24,
        "storageClass" : [
         "final",
         "override"
        ],
        "type" : "const string()",
        "endline" : 34,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 38,
    "char" : 28,
    "name" : "msgtxt",
    "parameters" : [
     {
      "name" : "String",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "msgtxt",
      "kind" : "function",
      "line" : 38,
      "char" : 28,
      "type" : "MessageText!String(String str)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "String"
       }
      ],
      "endline" : 41,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "JudgementException",
    "kind" : "class",
    "comment" : " 審判を含めて投げることのできる例外\n\n 投げる際にJudgementオブジェクトを含めて投げることが可能です。\n------------------------------------------------------------------------------\n auto dJudge = new Judgement;\n ...\n if (dJudge.bad)\n {\n     throw new JudgementException(dJudge);\n }\n------------------------------------------------------------------------------\n",
    "line" : 56,
    "char" : 1,
    "base" : "object.Exception",
    "members" : [
     {
      "name" : "judgement",
      "kind" : "variable",
      "comment" : "Judgementオブジェクトへのアクセス\n",
      "line" : 59,
      "char" : 12,
      "deco" : "C5voile5judge9Judgement",
      "originalType" : "Judgement",
      "offset" : 80
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "コンストラクタ\n",
      "line" : 61,
      "char" : 2,
      "deco" : "FC5voile5judge9JudgementAyaiZCQBcQz18JudgementException",
      "originalType" : "(Judgement aJudge, string file = null, int line = 0)",
      "parameters" : [
       {
        "name" : "aJudge",
        "deco" : "C5voile5judge9Judgement"
       },
       {
        "name" : "file",
        "deco" : "Aya",
        "default" : "null"
       },
       {
        "name" : "line",
        "deco" : "i",
        "default" : "0"
       }
      ],
      "endline" : 65,
      "endchar" : 2
     },
     {
      "name" : "results",
      "kind" : "function",
      "comment" : "See_Also: Judgement.result()\n",
      "line" : 67,
      "char" : 11,
      "deco" : "FZAC6Object",
      "endline" : 70,
      "endchar" : 2
     },
     {
      "name" : "opApply",
      "kind" : "function",
      "comment" : "See_Also: Judgement.opApply()\n",
      "line" : 72,
      "char" : 6,
      "deco" : "FDFKC6ObjectZiZi",
      "parameters" : [
       {
        "name" : "dg",
        "deco" : "DFKC6ObjectZi"
       }
      ],
      "endline" : 75,
      "endchar" : 2
     },
     {
      "name" : "opApply",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 77,
      "char" : 6,
      "deco" : "FDFKmKC6ObjectZiZi",
      "originalType" : "int(int delegate(ref size_t, ref Object) dg)",
      "parameters" : [
       {
        "name" : "dg",
        "deco" : "DFKmKC6ObjectZi"
       }
      ],
      "endline" : 80,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "Judgement",
    "kind" : "class",
    "comment" : " 審判クラス\n\n discuss() 関数の引数の結果が、存在するか否かで審判を下す。\n 詳しくは discuss() 関数を参照。$(BR)\n また、 discuss() 関数により審判を行ったあとは results() 関数で結果を得ること\n が可能。 results() 関数は、 discuss() を行う際の引数に指定した文字列や Object\n 実行する際に生じた例外などが含まれます。$(BR)\n ヘルパ関数の judge() 関数と with 文と if 文、 ok ステータスを使うとスマートに\n 見えるかも？\n Example:\n -----------------------------------------------------------------------------\n void checkFunc()\n {\n     if (a.checked && b.checked)\n     {\n         throw new Exception(\"conflict switches 'a' and 'b'.\");\n     }\n }\n\n void func()\n {\n     with (judge(checkFunc))\n     {\n         if (ok)\n         {\n             status = \"OK\";\n         }\n         else\n         {\n             status = \"NG [\" ~ messages[0].toString ~ \"]\";\n         }\n     }\n }\n -----------------------------------------------------------------------------\n",
    "line" : 118,
    "char" : 1,
    "members" : [
     {
      "name" : "_results",
      "kind" : "variable",
      "protection" : "private",
      "line" : 120,
      "char" : 19,
      "deco" : "AC6Object",
      "offset" : 16
     },
     {
      "kind" : "template",
      "comment" : " 審議\n\n 引数を指定して審判を行います。$(BR)\n 下記の、引数の説明にあるリストの実行結果を判定し、\n $(UL\n     $(LI 引数                                                           )\n     $(LI 引数の実行結果                                                 )\n     $(LI 引数の実行に際して生じる例外                                   )\n     $(LI 引数のdelegateやfunctionの実行結果                             )\n     $(LI 引数のdelegateやfunctionの実行に際して生じる例外               )\n )\n を検出し、結果に加えます。$(BR)\n 実行の結果、nullを返すというのが良い結果であり、戻り値が発生する場合、\n 審判に否決したということになります。$(BR)\n 審判の結果は success や rejection またはそれらのすきな別名を使用して得る\n とが可能です。$(BR)\n ダイレクトに結果を得たい場合は results() 関数を呼び出すことで結果を出す\n 過程において生じた Object の配列を得ることが可能です。\n\n Params:\n     args=下記リスト参照\n     $(UL\n         $(LI string                                                     )\n         $(LI Object                                                     )\n         $(LI string delegate()                                          )\n         $(LI Object delegate()                                          )\n         $(LI bool delegate()                                            )\n         $(LI void delegate()                                            )\n         $(LI string function()                                          )\n         $(LI Object function()                                          )\n         $(LI bool function()                                            )\n         $(LI void function()                                            )\n         $(LI 上記delegateおよびfunctionの実行結果                       )\n     )\n     複数の指定が可能です。$(BR)\n     引数のlazy属性によって、引数の順番通りの実行が保証されます。$(BR)\n     必ず1つ以上の引数を指定してください。\n Returns:\n     自分自身を返します\n",
      "line" : 164,
      "char" : 15,
      "name" : "discuss",
      "parameters" : [
       {
        "name" : "T",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "discuss",
        "kind" : "function",
        "line" : 164,
        "char" : 15,
        "type" : "typeof(this)(lazy T args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "T",
          "storageClass" : [
           "lazy"
          ]
         }
        ],
        "endline" : 254,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "certified",
      "kind" : "function",
      "comment" : " 合格しているか\n",
      "line" : 260,
      "char" : 17,
      "storageClass" : [
       "final"
      ],
      "deco" : "FNdZb",
      "endline" : 263,
      "endchar" : 2
     },
     {
      "name" : "ok",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 266,
      "char" : 2,
      "originalType" : "certified"
     },
     {
      "name" : "good",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 268,
      "char" : 2,
      "originalType" : "certified"
     },
     {
      "name" : "success",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 270,
      "char" : 2,
      "originalType" : "certified"
     },
     {
      "name" : "succeeded",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 272,
      "char" : 2,
      "originalType" : "certified"
     },
     {
      "name" : "rejected",
      "kind" : "function",
      "comment" : " 否決されているか\n",
      "line" : 277,
      "char" : 17,
      "storageClass" : [
       "final"
      ],
      "deco" : "FNdZb",
      "endline" : 280,
      "endchar" : 2
     },
     {
      "name" : "ng",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 282,
      "char" : 2,
      "originalType" : "rejected"
     },
     {
      "name" : "bad",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 284,
      "char" : 2,
      "originalType" : "rejected"
     },
     {
      "name" : "failure",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 286,
      "char" : 2,
      "originalType" : "rejected"
     },
     {
      "name" : "failed",
      "kind" : "alias",
      "comment" : "ditto\n",
      "line" : 288,
      "char" : 2,
      "originalType" : "rejected"
     },
     {
      "name" : "results",
      "kind" : "function",
      "comment" : " 結果\n\n 生じた Object のリストを返します。$(BR)\n 審判ではこの戻り値がnullであることが望ましい。\n",
      "line" : 296,
      "char" : 21,
      "storageClass" : [
       "final"
      ],
      "deco" : "FNdZAC6Object",
      "endline" : 299,
      "endchar" : 2
     },
     {
      "name" : "opApply",
      "kind" : "function",
      "comment" : " foreach (d; judgement.result)と同義\n",
      "line" : 305,
      "char" : 6,
      "storageClass" : [
       "final"
      ],
      "deco" : "FDFKC6ObjectZiZi",
      "parameters" : [
       {
        "name" : "dg",
        "deco" : "DFKC6ObjectZi"
       }
      ],
      "endline" : 315,
      "endchar" : 2
     },
     {
      "name" : "opApply",
      "kind" : "function",
      "comment" : " foreach (i, d; judgement.result)と同義\n",
      "line" : 321,
      "char" : 6,
      "storageClass" : [
       "final"
      ],
      "deco" : "FDFKmKC6ObjectZiZi",
      "originalType" : "int(int delegate(ref size_t, ref Object) dg)",
      "parameters" : [
       {
        "name" : "dg",
        "deco" : "DFKmKC6ObjectZi"
       }
      ],
      "endline" : 331,
      "endchar" : 2
     },
     {
      "name" : "toString",
      "kind" : "function",
      "comment" : " 文字列を返す\n Returns:\n     results のそれぞれのオブジェクトのtoStringで得られる文字列を改行でつ\n     ないだ文字列を返します。\n",
      "line" : 340,
      "char" : 18,
      "storageClass" : [
       "final",
       "override"
      ],
      "deco" : "xFZAya",
      "endline" : 348,
      "endchar" : 2,
      "overrides" : [
       "object.Object.toString"
      ]
     },
     {
      "name" : "throwIfFailure",
      "kind" : "function",
      "comment" : " 例外を投げる\n Throws:\n     JudgementException=自身を含めたJudgementExceptionを投げる\n",
      "line" : 356,
      "char" : 7,
      "storageClass" : [
       "final"
      ],
      "deco" : "FbZv",
      "parameters" : [
       {
        "name" : "doCopy",
        "deco" : "b",
        "default" : "true"
       }
      ],
      "endline" : 360,
      "endchar" : 2
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " Judgementクラスのヘルパ関数\n\n インスタンスオブジェクトを生成し、審議し、返す。\n Params:\n     args=Judgement.discuss() の引数\n Returns:\n     審議した後の Judgement オブジェクト\n",
    "line" : 371,
    "char" : 11,
    "name" : "judge",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "judge",
      "kind" : "function",
      "line" : 371,
      "char" : 11,
      "type" : "Judgement(lazy T args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "T",
        "storageClass" : [
         "lazy"
        ]
       }
      ],
      "endline" : 376,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L379_C9",
    "kind" : "function",
    "line" : 379,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 469,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.log",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/log.d",
  "comment" : " ログ取得のためのユーティリティモジュール\n",
  "members" : [
   {
    "name" : "std.range",
    "kind" : "import",
    "line" : 7,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "isInputRange",
     "isOutputRange",
     "isForwardRange",
     "hasLength",
     "hasSlicing"
    ]
   },
   {
    "name" : "std.experimental.logger",
    "kind" : "import",
    "line" : 8,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "Logger",
     "FileLogger",
     "MultiLogger",
     "sharedLog"
    ]
   },
   {
    "name" : "LogData",
    "kind" : "struct",
    "comment" : "\n",
    "line" : 15,
    "char" : 1,
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 17,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 18,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.json",
      "kind" : "import",
      "line" : 18,
      "char" : 23,
      "protection" : "private"
     },
     {
      "name" : "voile.json",
      "kind" : "import",
      "line" : 19,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "id",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 21,
      "char" : 11,
      "deco" : "m",
      "offset" : 0
     },
     {
      "name" : "level",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 23,
      "char" : 11,
      "deco" : "E3std12experimental6logger4core8LogLevel",
      "offset" : 8
     },
     {
      "name" : "time",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 25,
      "char" : 11,
      "deco" : "S3std8datetime7systime7SysTime",
      "offset" : 16
     },
     {
      "name" : "file",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 27,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 32
     },
     {
      "name" : "line",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 29,
      "char" : 11,
      "deco" : "k",
      "offset" : 48
     },
     {
      "name" : "msg",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 31,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 56
     },
     {
      "name" : "moduleName",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 33,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 72
     },
     {
      "name" : "funcName",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 35,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 88
     },
     {
      "name" : "prettyFuncName",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 37,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 104
     },
     {
      "name" : "threadId",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 39,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 120
     },
     {
      "name" : "json",
      "kind" : "function",
      "comment" : "\n",
      "line" : 42,
      "char" : 12,
      "deco" : "xFNbNdNfZS3std4json9JSONValue",
      "endline" : 56,
      "endchar" : 2
     },
     {
      "name" : "json",
      "kind" : "function",
      "comment" : "\n",
      "line" : 58,
      "char" : 7,
      "deco" : "FNbNdNfS3std4json9JSONValueZv",
      "parameters" : [
       {
        "name" : "v",
        "deco" : "S3std4json9JSONValue"
       }
      ],
      "endline" : 77,
      "endchar" : 2
     },
     {
      "name" : "toString",
      "kind" : "function",
      "comment" : "\n",
      "line" : 80,
      "char" : 9,
      "deco" : "xFZAya",
      "endline" : 83,
      "endchar" : 2
     },
     {
      "name" : "opAssign",
      "kind" : "generated function",
      "line" : 15,
      "char" : 1,
      "deco" : "FNaNbNcNiNjNfS5voile3log7LogDataZQu",
      "originalType" : "pure nothrow ref @safe LogData(LogData p) return",
      "parameters" : [
       {
        "name" : "p",
        "deco" : "S5voile3log7LogData"
       }
      ]
     }
    ]
   },
   {
    "name" : "__unittest_L86_C7",
    "kind" : "function",
    "line" : 86,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 120,
    "endchar" : 1
   },
   {
    "name" : "LogStorageInput",
    "kind" : "interface",
    "comment" : "\n",
    "line" : 120,
    "char" : 1,
    "members" : [
     {
      "name" : "front",
      "kind" : "function",
      "comment" : "\n",
      "line" : 123,
      "char" : 10,
      "storageClass" : [
       "abstract"
      ],
      "deco" : "xFNdZS5voile3log7LogData"
     },
     {
      "name" : "empty",
      "kind" : "function",
      "comment" : "\n",
      "line" : 125,
      "char" : 7,
      "storageClass" : [
       "abstract"
      ],
      "deco" : "xFNdZb"
     },
     {
      "name" : "popFront",
      "kind" : "function",
      "comment" : "\n",
      "line" : 127,
      "char" : 7,
      "storageClass" : [
       "abstract"
      ],
      "deco" : "FZv"
     },
     {
      "name" : "reset",
      "kind" : "function",
      "comment" : "\n",
      "line" : 129,
      "char" : 7,
      "storageClass" : [
       "abstract"
      ],
      "deco" : "FZv"
     }
    ]
   },
   {
    "name" : "LogStorageOutput",
    "kind" : "interface",
    "comment" : "\n",
    "line" : 135,
    "char" : 1,
    "members" : [
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 137,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "put",
      "kind" : "function",
      "comment" : "\n",
      "line" : 139,
      "char" : 7,
      "storageClass" : [
       "abstract"
      ],
      "deco" : "FS5voile3log7LogDataZv",
      "parameters" : [
       {
        "name" : "datas",
        "deco" : "S5voile3log7LogData"
       }
      ]
     },
     {
      "name" : "clear",
      "kind" : "function",
      "comment" : "\n",
      "line" : 141,
      "char" : 7,
      "storageClass" : [
       "abstract"
      ],
      "deco" : "FZv"
     }
    ]
   },
   {
    "name" : "LogStorageInMemory",
    "kind" : "class",
    "comment" : "\n",
    "line" : 153,
    "char" : 1,
    "interfaces" : [
     "voile.log.LogStorageInput",
     "voile.log.LogStorageOutput"
    ],
    "members" : [
     {
      "name" : "_datas",
      "kind" : "variable",
      "protection" : "private",
      "line" : 156,
      "char" : 19,
      "deco" : "AxS5voile3log7LogData",
      "offset" : 32
     },
     {
      "name" : "_idx",
      "kind" : "variable",
      "protection" : "private",
      "line" : 157,
      "char" : 9,
      "deco" : "m",
      "originalType" : "size_t",
      "offset" : 48
     },
     {
      "name" : "front",
      "kind" : "function",
      "comment" : "\n",
      "line" : 160,
      "char" : 10,
      "deco" : "xFNdZS5voile3log7LogData",
      "endline" : 163,
      "endchar" : 2,
      "overrides" : [
       "voile.log.LogStorageInput.front"
      ]
     },
     {
      "name" : "empty",
      "kind" : "function",
      "comment" : "\n",
      "line" : 166,
      "char" : 7,
      "deco" : "xFNdZb",
      "endline" : 169,
      "endchar" : 2,
      "overrides" : [
       "voile.log.LogStorageInput.empty"
      ]
     },
     {
      "name" : "popFront",
      "kind" : "function",
      "comment" : "\n",
      "line" : 172,
      "char" : 7,
      "deco" : "FZv",
      "endline" : 175,
      "endchar" : 2,
      "overrides" : [
       "voile.log.LogStorageInput.popFront"
      ]
     },
     {
      "name" : "put",
      "kind" : "function",
      "comment" : "\n",
      "line" : 178,
      "char" : 7,
      "deco" : "FS5voile3log7LogDataZv",
      "parameters" : [
       {
        "name" : "data",
        "deco" : "S5voile3log7LogData"
       }
      ],
      "endline" : 181,
      "endchar" : 2,
      "overrides" : [
       "voile.log.LogStorageOutput.put"
      ]
     },
     {
      "name" : "reset",
      "kind" : "function",
      "comment" : "\n",
      "line" : 184,
      "char" : 7,
      "deco" : "FNaNbNiNfZv",
      "endline" : 187,
      "endchar" : 2,
      "overrides" : [
       "voile.log.LogStorageInput.reset"
      ]
     },
     {
      "name" : "clear",
      "kind" : "function",
      "comment" : "\n",
      "line" : 189,
      "char" : 7,
      "deco" : "FNaNbNiNfZv",
      "endline" : 193,
      "endchar" : 2,
      "overrides" : [
       "voile.log.LogStorageOutput.clear"
      ]
     },
     {
      "name" : "save",
      "kind" : "function",
      "comment" : "\n",
      "line" : 196,
      "char" : 21,
      "deco" : "xFNaNbNfZC5voile3log18LogStorageInMemory",
      "endline" : 202,
      "endchar" : 2
     },
     {
      "name" : "currentIndex",
      "kind" : "function",
      "comment" : "\n",
      "line" : 205,
      "char" : 9,
      "deco" : "xFNaNbNdNiNfZm",
      "originalType" : "const pure nothrow @nogc @property @safe size_t()",
      "endline" : 208,
      "endchar" : 2
     },
     {
      "name" : "length",
      "kind" : "function",
      "comment" : "\n",
      "line" : 211,
      "char" : 9,
      "deco" : "xFNaNbNdNiNfZm",
      "originalType" : "const pure nothrow @nogc @property @safe size_t()",
      "endline" : 214,
      "endchar" : 2
     },
     {
      "name" : "opSlice",
      "kind" : "function",
      "comment" : "\n",
      "line" : 217,
      "char" : 21,
      "deco" : "xFNaNbNfZC5voile3log18LogStorageInMemory",
      "endline" : 220,
      "endchar" : 2
     },
     {
      "name" : "opSlice",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 223,
      "char" : 21,
      "deco" : "xFNaNbNfmmZC5voile3log18LogStorageInMemory",
      "originalType" : "const pure nothrow @safe LogStorageInMemory(size_t begin, size_t end)",
      "parameters" : [
       {
        "name" : "begin",
        "deco" : "m"
       },
       {
        "name" : "end",
        "deco" : "m"
       }
      ],
      "endline" : 229,
      "endchar" : 2
     },
     {
      "name" : "slice",
      "kind" : "function",
      "comment" : "\n",
      "line" : 232,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "xFNaNbNfZAxS5voile3log7LogData",
      "originalType" : "const pure nothrow @safe ()",
      "endline" : 235,
      "endchar" : 2
     },
     {
      "name" : "slice",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 238,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "xFNaNbNfmmZAxS5voile3log7LogData",
      "originalType" : "const pure nothrow @safe (size_t begin, size_t end)",
      "parameters" : [
       {
        "name" : "begin",
        "deco" : "m"
       },
       {
        "name" : "end",
        "deco" : "m"
       }
      ],
      "endline" : 241,
      "endchar" : 2
     },
     {
      "name" : "opDoller",
      "kind" : "alias",
      "comment" : "\n",
      "line" : 244,
      "char" : 2,
      "originalType" : "length"
     }
    ]
   },
   {
    "name" : "LogStorageLogger",
    "kind" : "class",
    "comment" : "\n",
    "line" : 259,
    "char" : 1,
    "base" : "std.experimental.logger.core.Logger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 262,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel"
      ]
     },
     {
      "name" : "_currentId",
      "kind" : "variable",
      "protection" : "private",
      "line" : 263,
      "char" : 9,
      "deco" : "m",
      "originalType" : "size_t",
      "offset" : 184
     },
     {
      "name" : "_logDst",
      "kind" : "variable",
      "protection" : "private",
      "line" : 264,
      "char" : 19,
      "deco" : "C5voile3log16LogStorageOutput",
      "originalType" : "LogStorageOutput",
      "offset" : 192
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 268,
      "char" : 2,
      "deco" : "FNfC5voile3log16LogStorageOutputE3std12experimental6logger4core8LogLevelZCQCsQCp16LogStorageLogger",
      "originalType" : "@safe (LogStorageOutput logDst, LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "logDst",
        "deco" : "C5voile3log16LogStorageOutput"
       },
       {
        "name" : "lv",
        "deco" : "E3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 273,
      "endchar" : 2
     },
     {
      "name" : "writeLogMsg",
      "kind" : "function",
      "comment" : "\n",
      "line" : 276,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNeKS3std12experimental6logger4core6Logger8LogEntryZv",
      "parameters" : [
       {
        "name" : "payload",
        "deco" : "S3std12experimental6logger4core6Logger8LogEntry",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 290,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.core.Logger.writeLogMsg"
      ]
     }
    ]
   },
   {
    "name" : "InMemoryLogger",
    "kind" : "class",
    "comment" : " メモリ内のロガー\n",
    "line" : 297,
    "char" : 1,
    "base" : "voile.log.LogStorageLogger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 300,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel"
      ]
     },
     {
      "name" : "_logStorage",
      "kind" : "variable",
      "protection" : "private",
      "line" : 301,
      "char" : 21,
      "deco" : "C5voile3log18LogStorageInMemory",
      "originalType" : "LogStorageInMemory",
      "offset" : 200
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 307,
      "char" : 2,
      "deco" : "FNfE3std12experimental6logger4core8LogLevelZC5voile3log14InMemoryLogger",
      "originalType" : "@safe (LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "lv",
        "deco" : "E3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 311,
      "endchar" : 2
     },
     {
      "name" : "logStorage",
      "kind" : "function",
      "comment" : "\n",
      "line" : 314,
      "char" : 28,
      "deco" : "NgFNaNbNdNfZNgC5voile3log18LogStorageInMemory",
      "endline" : 317,
      "endchar" : 2
     },
     {
      "name" : "slice",
      "kind" : "function",
      "comment" : "\n",
      "line" : 320,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "xFNaNbNfZAxS5voile3log7LogData",
      "originalType" : "const pure nothrow @safe ()",
      "endline" : 323,
      "endchar" : 2
     },
     {
      "name" : "slice",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 326,
      "char" : 7,
      "storageClass" : [
       "auto"
      ],
      "deco" : "xFNaNbNfmmZAxS5voile3log7LogData",
      "originalType" : "const pure nothrow @safe (size_t begin, size_t end)",
      "parameters" : [
       {
        "name" : "begin",
        "deco" : "m"
       },
       {
        "name" : "end",
        "deco" : "m"
       }
      ],
      "endline" : 329,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "__unittest_L334_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 334,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 362,
    "endchar" : 1
   },
   {
    "name" : "TextFileLogger",
    "kind" : "class",
    "comment" : " テキストファイルのロガー\n",
    "line" : 362,
    "char" : 1,
    "base" : "std.experimental.logger.filelogger.FileLogger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 364,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel",
       "CreateFolder"
      ]
     },
     {
      "name" : "std.concurrency",
      "kind" : "import",
      "line" : 365,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "Tid"
      ]
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 366,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "SysTime"
      ]
     },
     {
      "name" : "std.stdio",
      "kind" : "import",
      "line" : 367,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "File"
      ]
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 370,
      "char" : 2,
      "deco" : "FNfxAyaxE3std12experimental6logger4core8LogLevelZC5voile3log14TextFileLogger",
      "originalType" : "@safe (in string fn, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 373,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 375,
      "char" : 2,
      "deco" : "FNfxAyaxE3std12experimental6logger4core8LogLevelEQBo8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBmZC5voile3log14TextFileLogger",
      "originalType" : "@safe (in string fn, const LogLevel lv, CreateFolder createFileNameFolder)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel"
       },
       {
        "name" : "createFileNameFolder",
        "deco" : "E3std8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBm"
       }
      ],
      "endline" : 378,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 380,
      "char" : 2,
      "deco" : "FNfS3std5stdio4FilexEQr12experimental6logger4core8LogLevelZC5voile3log14TextFileLogger",
      "originalType" : "@safe (File file, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 383,
      "endchar" : 2
     },
     {
      "name" : "beginLogMsg",
      "kind" : "function",
      "protection" : "protected",
      "comment" : "\n",
      "line" : 385,
      "char" : 26,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNfAyaiQeQgQiE3std12experimental6logger4core8LogLevelSQBo11concurrency3TidSQCj8datetime7systime7SysTimeCQDmQDlQDaQCw6LoggerZv",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "Aya"
       },
       {
        "name" : "line",
        "deco" : "i"
       },
       {
        "name" : "funcName",
        "deco" : "Aya"
       },
       {
        "name" : "prettyFuncName",
        "deco" : "Aya"
       },
       {
        "name" : "moduleName",
        "deco" : "Aya"
       },
       {
        "name" : "logLevel",
        "deco" : "E3std12experimental6logger4core8LogLevel"
       },
       {
        "name" : "threadId",
        "deco" : "S3std11concurrency3Tid"
       },
       {
        "name" : "timestamp",
        "deco" : "S3std8datetime7systime7SysTime"
       },
       {
        "name" : "logger",
        "deco" : "C3std12experimental6logger4core6Logger"
       }
      ],
      "endline" : 399,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.filelogger.FileLogger.beginLogMsg"
      ]
     },
     {
      "name" : "logMsgPart",
      "kind" : "function",
      "protection" : "protected",
      "comment" : "\n",
      "line" : 402,
      "char" : 26,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNfMAxaZv",
      "originalType" : "void(scope const(char)[] msg)",
      "parameters" : [
       {
        "name" : "msg",
        "deco" : "Axa",
        "storageClass" : [
         "scope"
        ]
       }
      ],
      "endline" : 406,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.filelogger.FileLogger.logMsgPart"
      ]
     },
     {
      "name" : "finishLogMsg",
      "kind" : "function",
      "protection" : "protected",
      "comment" : "\n",
      "line" : 409,
      "char" : 26,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNfZv",
      "originalType" : "void()",
      "endline" : 413,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.filelogger.FileLogger.finishLogMsg"
      ]
     }
    ]
   },
   {
    "name" : "JsonFileLogger",
    "kind" : "class",
    "comment" : " JSONファイルのロガー\n",
    "line" : 419,
    "char" : 1,
    "base" : "std.experimental.logger.core.Logger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 422,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel",
       "CreateFolder"
      ]
     },
     {
      "name" : "std.concurrency",
      "kind" : "import",
      "line" : 423,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "Tid"
      ]
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 424,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "SysTime"
      ]
     },
     {
      "name" : "std.stdio",
      "kind" : "import",
      "line" : 425,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "File"
      ]
     },
     {
      "name" : "_file",
      "kind" : "variable",
      "protection" : "private",
      "line" : 426,
      "char" : 7,
      "deco" : "S3std5stdio4File",
      "offset" : 184
     },
     {
      "name" : "_filename",
      "kind" : "variable",
      "protection" : "private",
      "line" : 427,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 208
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 430,
      "char" : 2,
      "deco" : "FNfxAyaxE3std12experimental6logger4core8LogLevelZC5voile3log14JsonFileLogger",
      "originalType" : "@safe (in string fn, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 433,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 435,
      "char" : 2,
      "deco" : "FNexAyaxE3std12experimental6logger4core8LogLevelEQBo8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBmZC5voile3log14JsonFileLogger",
      "originalType" : "@trusted (in string fn, const LogLevel lv, CreateFolder createFileNameFolder)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel"
       },
       {
        "name" : "createFileNameFolder",
        "deco" : "E3std8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBm"
       }
      ],
      "endline" : 464,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 466,
      "char" : 2,
      "deco" : "FNfS3std5stdio4FilexEQr12experimental6logger4core8LogLevelZC5voile3log14JsonFileLogger",
      "originalType" : "@safe (File file, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 470,
      "endchar" : 2
     },
     {
      "name" : "writeLogMsg",
      "kind" : "function",
      "comment" : "\n",
      "line" : 472,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNeKS3std12experimental6logger4core6Logger8LogEntryZv",
      "parameters" : [
       {
        "name" : "payload",
        "deco" : "S3std12experimental6logger4core6Logger8LogEntry",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 517,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.core.Logger.writeLogMsg"
      ]
     },
     {
      "name" : "getFilename",
      "kind" : "function",
      "comment" : "\n",
      "line" : 520,
      "char" : 9,
      "deco" : "FZAya",
      "endline" : 523,
      "endchar" : 2
     },
     {
      "name" : "loadFromFile",
      "kind" : "function",
      "comment" : "\n",
      "line" : 526,
      "char" : 25,
      "storageClass" : [
       "static"
      ],
      "deco" : "FAyaZC5voile3log15LogStorageInput",
      "parameters" : [
       {
        "name" : "fileName",
        "deco" : "Aya"
       }
      ],
      "endline" : 572,
      "endchar" : 2
     },
     {
      "name" : "~this",
      "kind" : "destructor",
      "line" : 419,
      "char" : 1,
      "deco" : "FNeZv"
     },
     {
      "name" : "__xdtor",
      "kind" : "alias"
     }
    ]
   },
   {
    "name" : "__unittest_L575_C9",
    "kind" : "function",
    "line" : 575,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 612,
    "endchar" : 1
   },
   {
    "name" : "XmlFileLogger",
    "kind" : "class",
    "comment" : " XMLファイルのロガー\n",
    "line" : 612,
    "char" : 1,
    "base" : "std.experimental.logger.core.Logger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 615,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel",
       "CreateFolder"
      ]
     },
     {
      "name" : "std.concurrency",
      "kind" : "import",
      "line" : 616,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "Tid"
      ]
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 617,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "SysTime"
      ]
     },
     {
      "name" : "std.stdio",
      "kind" : "import",
      "line" : 618,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "File"
      ]
     },
     {
      "name" : "_file",
      "kind" : "variable",
      "protection" : "private",
      "line" : 619,
      "char" : 7,
      "deco" : "S3std5stdio4File",
      "offset" : 184
     },
     {
      "name" : "_filename",
      "kind" : "variable",
      "protection" : "private",
      "line" : 620,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 208
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 623,
      "char" : 2,
      "deco" : "FNfxAyaxE3std12experimental6logger4core8LogLevelZC5voile3log13XmlFileLogger",
      "originalType" : "@safe (in string fn, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 626,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 628,
      "char" : 2,
      "deco" : "FNexAyaxE3std12experimental6logger4core8LogLevelEQBo8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBmZC5voile3log13XmlFileLogger",
      "originalType" : "@trusted (in string fn, const LogLevel lv, CreateFolder createFileNameFolder)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel"
       },
       {
        "name" : "createFileNameFolder",
        "deco" : "E3std8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBm"
       }
      ],
      "endline" : 657,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 659,
      "char" : 2,
      "deco" : "FNfS3std5stdio4FilexEQr12experimental6logger4core8LogLevelZC5voile3log13XmlFileLogger",
      "originalType" : "@safe (File file, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 663,
      "endchar" : 2
     },
     {
      "name" : "writeLogMsg",
      "kind" : "function",
      "comment" : "\n",
      "line" : 665,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNeKS3std12experimental6logger4core6Logger8LogEntryZv",
      "parameters" : [
       {
        "name" : "payload",
        "deco" : "S3std12experimental6logger4core6Logger8LogEntry",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 705,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.core.Logger.writeLogMsg"
      ]
     },
     {
      "name" : "getFilename",
      "kind" : "function",
      "comment" : "\n",
      "line" : 708,
      "char" : 9,
      "deco" : "FZAya",
      "endline" : 711,
      "endchar" : 2
     },
     {
      "name" : "~this",
      "kind" : "destructor",
      "line" : 612,
      "char" : 1,
      "deco" : "FNeZv"
     },
     {
      "name" : "__xdtor",
      "kind" : "alias"
     }
    ]
   },
   {
    "name" : "CsvFileLogger",
    "kind" : "class",
    "comment" : " CSVファイルのロガー\n",
    "line" : 718,
    "char" : 1,
    "base" : "std.experimental.logger.core.Logger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 721,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel",
       "CreateFolder"
      ]
     },
     {
      "name" : "std.concurrency",
      "kind" : "import",
      "line" : 722,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "Tid"
      ]
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 723,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "SysTime"
      ]
     },
     {
      "name" : "std.stdio",
      "kind" : "import",
      "line" : 724,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "File"
      ]
     },
     {
      "name" : "_file",
      "kind" : "variable",
      "protection" : "private",
      "line" : 725,
      "char" : 7,
      "deco" : "S3std5stdio4File",
      "offset" : 184
     },
     {
      "name" : "_filename",
      "kind" : "variable",
      "protection" : "private",
      "line" : 726,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 208
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 729,
      "char" : 2,
      "deco" : "FNfxAyaxE3std12experimental6logger4core8LogLevelZC5voile3log13CsvFileLogger",
      "originalType" : "@safe (in string fn, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 732,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 734,
      "char" : 2,
      "deco" : "FNexAyaxE3std12experimental6logger4core8LogLevelEQBo8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBmZC5voile3log13CsvFileLogger",
      "originalType" : "@trusted (in string fn, const LogLevel lv, CreateFolder createFileNameFolder)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel"
       },
       {
        "name" : "createFileNameFolder",
        "deco" : "E3std8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBm"
       }
      ],
      "endline" : 751,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 753,
      "char" : 2,
      "deco" : "FNfS3std5stdio4FilexEQr12experimental6logger4core8LogLevelZC5voile3log13CsvFileLogger",
      "originalType" : "@safe (File file, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 757,
      "endchar" : 2
     },
     {
      "name" : "writeLogMsg",
      "kind" : "function",
      "comment" : "\n",
      "line" : 759,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNeKS3std12experimental6logger4core6Logger8LogEntryZv",
      "parameters" : [
       {
        "name" : "payload",
        "deco" : "S3std12experimental6logger4core6Logger8LogEntry",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 787,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.core.Logger.writeLogMsg"
      ]
     },
     {
      "name" : "getFilename",
      "kind" : "function",
      "comment" : "\n",
      "line" : 790,
      "char" : 9,
      "deco" : "FZAya",
      "endline" : 793,
      "endchar" : 2
     },
     {
      "name" : "~this",
      "kind" : "destructor",
      "line" : 718,
      "char" : 1,
      "deco" : "FNeZv"
     },
     {
      "name" : "__xdtor",
      "kind" : "alias"
     }
    ]
   },
   {
    "name" : "TsvFileLogger",
    "kind" : "class",
    "comment" : " TSVファイルのロガー\n",
    "line" : 799,
    "char" : 1,
    "base" : "std.experimental.logger.core.Logger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 802,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel",
       "CreateFolder"
      ]
     },
     {
      "name" : "std.concurrency",
      "kind" : "import",
      "line" : 803,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "Tid"
      ]
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 804,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "SysTime"
      ]
     },
     {
      "name" : "std.stdio",
      "kind" : "import",
      "line" : 805,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "File"
      ]
     },
     {
      "name" : "_file",
      "kind" : "variable",
      "protection" : "private",
      "line" : 806,
      "char" : 7,
      "deco" : "S3std5stdio4File",
      "offset" : 184
     },
     {
      "name" : "_filename",
      "kind" : "variable",
      "protection" : "private",
      "line" : 807,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 208
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 810,
      "char" : 2,
      "deco" : "FNfxAyaxE3std12experimental6logger4core8LogLevelZC5voile3log13TsvFileLogger",
      "originalType" : "@safe (in string fn, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 813,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 815,
      "char" : 2,
      "deco" : "FNexAyaxE3std12experimental6logger4core8LogLevelEQBo8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBmZC5voile3log13TsvFileLogger",
      "originalType" : "@trusted (in string fn, const LogLevel lv, CreateFolder createFileNameFolder)",
      "parameters" : [
       {
        "name" : "fn",
        "deco" : "xAya"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel"
       },
       {
        "name" : "createFileNameFolder",
        "deco" : "E3std8typecons__T4FlagVAyaa12_437265617465466f6c646572ZQBm"
       }
      ],
      "endline" : 832,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 834,
      "char" : 2,
      "deco" : "FNfS3std5stdio4FilexEQr12experimental6logger4core8LogLevelZC5voile3log13TsvFileLogger",
      "originalType" : "@safe (File file, const LogLevel lv = LogLevel.all)",
      "parameters" : [
       {
        "name" : "file",
        "deco" : "S3std5stdio4File"
       },
       {
        "name" : "lv",
        "deco" : "xE3std12experimental6logger4core8LogLevel",
        "default" : "cast(LogLevel)cast(ubyte)1u"
       }
      ],
      "endline" : 838,
      "endchar" : 2
     },
     {
      "name" : "writeLogMsg",
      "kind" : "function",
      "comment" : "\n",
      "line" : 840,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNeKS3std12experimental6logger4core6Logger8LogEntryZv",
      "parameters" : [
       {
        "name" : "payload",
        "deco" : "S3std12experimental6logger4core6Logger8LogEntry",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 866,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.core.Logger.writeLogMsg"
      ]
     },
     {
      "name" : "getFilename",
      "kind" : "function",
      "comment" : "\n",
      "line" : 869,
      "char" : 9,
      "deco" : "FZAya",
      "endline" : 872,
      "endchar" : 2
     },
     {
      "name" : "~this",
      "kind" : "destructor",
      "line" : 799,
      "char" : 1,
      "deco" : "FNeZv"
     },
     {
      "name" : "__xdtor",
      "kind" : "alias"
     }
    ]
   },
   {
    "name" : "NamedLogger",
    "kind" : "class",
    "comment" : "\n",
    "line" : 880,
    "char" : 1,
    "base" : "std.experimental.logger.multilogger.MultiLogger",
    "members" : [
     {
      "name" : "getLogger",
      "kind" : "function",
      "comment" : " ロガーを取得する\n",
      "line" : 886,
      "char" : 9,
      "deco" : "FNfAyaZC3std12experimental6logger4core6Logger",
      "parameters" : [
       {
        "name" : "name",
        "deco" : "Aya"
       }
      ],
      "endline" : 891,
      "endchar" : 2
     },
     {
      "name" : "insertLogger",
      "kind" : "function",
      "comment" : " ロガーを追加する\n\n 重複チェックをする\n",
      "line" : 898,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNfAyaC3std12experimental6logger4core6LoggerZv",
      "parameters" : [
       {
        "name" : "name",
        "deco" : "Aya"
       },
       {
        "name" : "l",
        "deco" : "C3std12experimental6logger4core6Logger"
       }
      ],
      "endline" : 903,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.multilogger.MultiLogger.insertLogger"
      ]
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "line" : 880,
      "char" : 1,
      "deco" : "FNfZC5voile3log11NamedLogger",
      "originalType" : "@safe ()"
     }
    ]
   },
   {
    "name" : "DispatchLogger",
    "kind" : "class",
    "comment" : "\n",
    "line" : 910,
    "char" : 1,
    "base" : "voile.log.NamedLogger",
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 912,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "LogLevel"
      ]
     },
     {
      "name" : "std.regex",
      "kind" : "import",
      "line" : 913,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "Filter",
      "kind" : "struct",
      "comment" : "\n",
      "line" : 917,
      "char" : 2,
      "members" : [
       {
        "name" : "_file",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 921,
        "char" : 14,
        "deco" : "S3std5regex8internal2ir__T5RegexTaZQj",
        "offset" : 0
       },
       {
        "name" : "_moduleName",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 923,
        "char" : 14,
        "deco" : "S3std5regex8internal2ir__T5RegexTaZQj",
        "offset" : 168
       },
       {
        "name" : "_funcName",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 925,
        "char" : 14,
        "deco" : "S3std5regex8internal2ir__T5RegexTaZQj",
        "offset" : 336
       },
       {
        "name" : "_prettyFuncName",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 927,
        "char" : 14,
        "deco" : "S3std5regex8internal2ir__T5RegexTaZQj",
        "offset" : 504
       },
       {
        "name" : "_msg",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 929,
        "char" : 14,
        "deco" : "S3std5regex8internal2ir__T5RegexTaZQj",
        "offset" : 672
       },
       {
        "name" : "_targetName",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 931,
        "char" : 14,
        "deco" : "Aya",
        "offset" : 840
       },
       {
        "name" : "_lineMax",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 933,
        "char" : 14,
        "deco" : "m",
        "originalType" : "size_t",
        "init" : "18446744073709551615LU",
        "offset" : 856
       },
       {
        "name" : "_lineMin",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 935,
        "char" : 14,
        "deco" : "m",
        "originalType" : "size_t",
        "init" : "0LU",
        "offset" : 864
       },
       {
        "name" : "_logLevel",
        "kind" : "variable",
        "protection" : "private",
        "comment" : "\n",
        "line" : 937,
        "char" : 14,
        "deco" : "E3std12experimental6logger4core8LogLevel",
        "init" : "cast(LogLevel)cast(ubyte)1u",
        "offset" : 872
       },
       {
        "name" : "file",
        "kind" : "function",
        "comment" : "\n",
        "line" : 940,
        "char" : 21,
        "deco" : "NgFNdNfZNgS3std5regex8internal2ir__T5RegexTaZQj",
        "endline" : 943,
        "endchar" : 3
       },
       {
        "name" : "file",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 945,
        "char" : 8,
        "deco" : "FNdNfAyaZv",
        "parameters" : [
         {
          "name" : "pattern",
          "deco" : "Aya"
         }
        ],
        "endline" : 948,
        "endchar" : 3
       },
       {
        "name" : "file",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 950,
        "char" : 8,
        "deco" : "FNdNfS3std5regex8internal2ir__T5RegexTaZQjZv",
        "parameters" : [
         {
          "name" : "r",
          "deco" : "S3std5regex8internal2ir__T5RegexTaZQj"
         }
        ],
        "endline" : 953,
        "endchar" : 3
       },
       {
        "name" : "moduleName",
        "kind" : "function",
        "comment" : "\n",
        "line" : 955,
        "char" : 21,
        "deco" : "NgFNdNfZNgS3std5regex8internal2ir__T5RegexTaZQj",
        "endline" : 958,
        "endchar" : 3
       },
       {
        "name" : "moduleName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 960,
        "char" : 8,
        "deco" : "FNdNfAyaZv",
        "parameters" : [
         {
          "name" : "pattern",
          "deco" : "Aya"
         }
        ],
        "endline" : 963,
        "endchar" : 3
       },
       {
        "name" : "moduleName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 965,
        "char" : 8,
        "deco" : "FNdNfS3std5regex8internal2ir__T5RegexTaZQjZv",
        "parameters" : [
         {
          "name" : "r",
          "deco" : "S3std5regex8internal2ir__T5RegexTaZQj"
         }
        ],
        "endline" : 968,
        "endchar" : 3
       },
       {
        "name" : "funcName",
        "kind" : "function",
        "comment" : "\n",
        "line" : 970,
        "char" : 21,
        "deco" : "NgFNdNfZNgS3std5regex8internal2ir__T5RegexTaZQj",
        "endline" : 973,
        "endchar" : 3
       },
       {
        "name" : "funcName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 975,
        "char" : 8,
        "deco" : "FNdNfAyaZv",
        "parameters" : [
         {
          "name" : "pattern",
          "deco" : "Aya"
         }
        ],
        "endline" : 978,
        "endchar" : 3
       },
       {
        "name" : "funcName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 980,
        "char" : 8,
        "deco" : "FNdNfS3std5regex8internal2ir__T5RegexTaZQjZv",
        "parameters" : [
         {
          "name" : "r",
          "deco" : "S3std5regex8internal2ir__T5RegexTaZQj"
         }
        ],
        "endline" : 983,
        "endchar" : 3
       },
       {
        "name" : "prettyFuncName",
        "kind" : "function",
        "comment" : "\n",
        "line" : 985,
        "char" : 21,
        "deco" : "NgFNdNfZNgS3std5regex8internal2ir__T5RegexTaZQj",
        "endline" : 988,
        "endchar" : 3
       },
       {
        "name" : "prettyFuncName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 990,
        "char" : 8,
        "deco" : "FNdNfAyaZv",
        "parameters" : [
         {
          "name" : "pattern",
          "deco" : "Aya"
         }
        ],
        "endline" : 993,
        "endchar" : 3
       },
       {
        "name" : "prettyFuncName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 995,
        "char" : 8,
        "deco" : "FNdNfS3std5regex8internal2ir__T5RegexTaZQjZv",
        "parameters" : [
         {
          "name" : "r",
          "deco" : "S3std5regex8internal2ir__T5RegexTaZQj"
         }
        ],
        "endline" : 998,
        "endchar" : 3
       },
       {
        "name" : "msg",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1000,
        "char" : 21,
        "deco" : "NgFNdNfZNgS3std5regex8internal2ir__T5RegexTaZQj",
        "endline" : 1003,
        "endchar" : 3
       },
       {
        "name" : "msg",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1005,
        "char" : 8,
        "deco" : "FNdNfAyaZv",
        "parameters" : [
         {
          "name" : "pattern",
          "deco" : "Aya"
         }
        ],
        "endline" : 1008,
        "endchar" : 3
       },
       {
        "name" : "msg",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1010,
        "char" : 8,
        "deco" : "FNdNfS3std5regex8internal2ir__T5RegexTaZQjZv",
        "parameters" : [
         {
          "name" : "r",
          "deco" : "S3std5regex8internal2ir__T5RegexTaZQj"
         }
        ],
        "endline" : 1013,
        "endchar" : 3
       },
       {
        "name" : "targetName",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1015,
        "char" : 10,
        "deco" : "NgFNdNfZAya",
        "endline" : 1018,
        "endchar" : 3
       },
       {
        "name" : "targetName",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1020,
        "char" : 8,
        "deco" : "FNdNfAyaZv",
        "parameters" : [
         {
          "name" : "name",
          "deco" : "Aya"
         }
        ],
        "endline" : 1023,
        "endchar" : 3
       },
       {
        "name" : "lineMax",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1025,
        "char" : 10,
        "deco" : "xFNdNfZm",
        "originalType" : "const @property @safe size_t()",
        "endline" : 1028,
        "endchar" : 3
       },
       {
        "name" : "lineMax",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1030,
        "char" : 8,
        "deco" : "FNdNfmZv",
        "originalType" : "@property @safe void(size_t num)",
        "parameters" : [
         {
          "name" : "num",
          "deco" : "m"
         }
        ],
        "endline" : 1033,
        "endchar" : 3
       },
       {
        "name" : "lineMin",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1035,
        "char" : 10,
        "deco" : "xFNdNfZm",
        "originalType" : "const @property @safe size_t()",
        "endline" : 1038,
        "endchar" : 3
       },
       {
        "name" : "lineMin",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1040,
        "char" : 8,
        "deco" : "FNdNfmZv",
        "originalType" : "@property @safe void(size_t num)",
        "parameters" : [
         {
          "name" : "num",
          "deco" : "m"
         }
        ],
        "endline" : 1043,
        "endchar" : 3
       },
       {
        "name" : "setLineSpan",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1045,
        "char" : 8,
        "deco" : "FNfmmZv",
        "originalType" : "@safe void(size_t min, size_t max)",
        "parameters" : [
         {
          "name" : "min",
          "deco" : "m"
         },
         {
          "name" : "max",
          "deco" : "m"
         }
        ],
        "endline" : 1049,
        "endchar" : 3
       },
       {
        "name" : "logLevel",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1051,
        "char" : 12,
        "deco" : "xFNdNfZE3std12experimental6logger4core8LogLevel",
        "endline" : 1054,
        "endchar" : 3
       },
       {
        "name" : "logLevel",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1056,
        "char" : 8,
        "deco" : "FNdNfE3std12experimental6logger4core8LogLevelZv",
        "parameters" : [
         {
          "name" : "lv",
          "deco" : "E3std12experimental6logger4core8LogLevel"
         }
        ],
        "endline" : 1059,
        "endchar" : 3
       }
      ]
     },
     {
      "name" : "_filters",
      "kind" : "variable",
      "protection" : "private",
      "line" : 1063,
      "char" : 11,
      "deco" : "AS5voile3log14DispatchLogger6Filter",
      "offset" : 200
     },
     {
      "name" : "addFilter",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1068,
      "char" : 7,
      "deco" : "FS5voile3log14DispatchLogger6FilterZv",
      "parameters" : [
       {
        "name" : "filter",
        "deco" : "S5voile3log14DispatchLogger6Filter"
       }
      ],
      "endline" : 1071,
      "endchar" : 2
     },
     {
      "name" : "writeLogMsg",
      "kind" : "function",
      "comment" : "\n",
      "line" : 1075,
      "char" : 16,
      "storageClass" : [
       "override"
      ],
      "deco" : "FNfKS3std12experimental6logger4core6Logger8LogEntryZv",
      "parameters" : [
       {
        "name" : "payload",
        "deco" : "S3std12experimental6logger4core6Logger8LogEntry",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 1106,
      "endchar" : 2,
      "overrides" : [
       "std.experimental.logger.multilogger.MultiLogger.writeLogMsg"
      ]
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "line" : 910,
      "char" : 1,
      "deco" : "FNfZC5voile3log14DispatchLogger",
      "originalType" : "@safe ()"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " クラス内で使用するロガーを切り替えるためのミックスインテンプレート\n",
    "line" : 1113,
    "char" : 7,
    "name" : "Logging",
    "parameters" : [
     {
      "name" : "loggerAlias",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "std.experimental.logger",
      "kind" : "import",
      "line" : 1115,
      "char" : 17,
      "protection" : "private",
      "selective" : [
       "Logger",
       "LogLevel"
      ]
     },
     {
      "name" : "std.string",
      "kind" : "import",
      "line" : 1116,
      "char" : 17,
      "protection" : "private",
      "selective" : [
       "format"
      ]
     },
     {
      "name" : "logger",
      "kind" : "function",
      "line" : 1119,
      "char" : 49,
      "type" : "const typeof(loggerAlias[0])()",
      "endline" : 1122,
      "endchar" : 3
     },
     {
      "kind" : "template",
      "line" : 1132,
      "char" : 30,
      "name" : "log",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "log",
        "kind" : "function",
        "line" : 1132,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1165,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 1166,
      "char" : 30,
      "name" : "trace",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "trace",
        "kind" : "function",
        "line" : 1166,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1187,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 1188,
      "char" : 30,
      "name" : "info",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "info",
        "kind" : "function",
        "line" : 1188,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1209,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 1210,
      "char" : 30,
      "name" : "warning",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "warning",
        "kind" : "function",
        "line" : 1210,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1231,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 1232,
      "char" : 30,
      "name" : "error",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "error",
        "kind" : "function",
        "line" : 1232,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1253,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 1254,
      "char" : 30,
      "name" : "fatal",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "fatal",
        "kind" : "function",
        "line" : 1254,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1275,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "line" : 1276,
      "char" : 30,
      "name" : "critical",
      "parameters" : [
       {
        "name" : "fmt",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "null"
       },
       {
        "name" : "line",
        "kind" : "value",
        "deco" : "i",
        "defaultValue" : "__LINE__"
       },
       {
        "name" : "file",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FILE__"
       },
       {
        "name" : "funcName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__FUNCTION__"
       },
       {
        "name" : "prettyFuncName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__PRETTY_FUNCTION__"
       },
       {
        "name" : "moduleName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "__MODULE__"
       },
       {
        "name" : "Args",
        "kind" : "tuple"
       }
      ],
      "members" : [
       {
        "name" : "critical",
        "kind" : "function",
        "line" : 1276,
        "char" : 30,
        "type" : "const void(Args args)",
        "parameters" : [
         {
          "name" : "args",
          "type" : "Args"
         }
        ],
        "endline" : 1297,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "name" : "getLogger",
    "kind" : "function",
    "comment" : " 名前からロガーを取得する\n",
    "line" : 1304,
    "char" : 8,
    "deco" : "FNfAyaC3std12experimental6logger4core6LoggerZQBn",
    "originalType" : "@safe Logger(string name, Logger defaultLogger = sharedLog)",
    "parameters" : [
     {
      "name" : "name",
      "deco" : "Aya"
     },
     {
      "name" : "defaultLogger",
      "deco" : "C3std12experimental6logger4core6Logger",
      "default" : "sharedLog()"
     }
    ],
    "endline" : 1314,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.misc",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/misc.d",
  "comment" : "\n",
  "members" : [
   {
    "name" : "core.exception",
    "kind" : "import",
    "line" : 7,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 8,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.typetuple",
    "kind" : "import",
    "line" : 8,
    "char" : 20,
    "protection" : "private"
   },
   {
    "name" : "std.variant",
    "kind" : "import",
    "line" : 8,
    "char" : 35,
    "protection" : "private"
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 13,
    "char" : 10,
    "name" : "assumeAttr",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     },
     {
      "name" : "attrs",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "isFunction!fn",
    "members" : [
     {
      "name" : "assumeAttr",
      "kind" : "function",
      "line" : 13,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "ref (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 23,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 26,
    "char" : 10,
    "name" : "assumeAttr",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     },
     {
      "name" : "attrs",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "__traits(isTemplate, fn) && isCallable!(fn!Args)",
    "members" : [
     {
      "name" : "assumeAttr",
      "kind" : "function",
      "line" : 26,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "ref (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 36,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 39,
    "char" : 6,
    "name" : "assumeAttr",
    "parameters" : [
     {
      "name" : "attrs",
      "kind" : "alias"
     },
     {
      "name" : "Fn",
      "kind" : "type"
     }
    ],
    "constraint" : "isFunctionPointer!Fn || isDelegate!Fn",
    "members" : [
     {
      "name" : "assumeAttr",
      "kind" : "function",
      "line" : 39,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(Fn t)",
      "parameters" : [
       {
        "name" : "t",
        "type" : "Fn"
       }
      ],
      "endline" : 43,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 48,
    "char" : 1,
    "name" : "getFunctionAttributes",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "fn",
      "kind" : "alias",
      "line" : 50,
      "char" : 2,
      "type" : "T[0]"
     },
     {
      "name" : "getFunctionAttributes",
      "kind" : "variable",
      "line" : 53,
      "char" : 8,
      "storageClass" : [
       "enum"
      ],
      "init" : "functionAttributes!fn"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 68,
    "char" : 10,
    "name" : "assumePure",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "assumePure",
      "kind" : "function",
      "line" : 68,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "ref (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 71,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 74,
    "char" : 6,
    "name" : "assumePure",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFunctionPointer!T || isDelegate!T",
    "members" : [
     {
      "name" : "assumePure",
      "kind" : "function",
      "line" : 74,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(T t)",
      "parameters" : [
       {
        "name" : "t",
        "type" : "T"
       }
      ],
      "endline" : 78,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 83,
    "char" : 10,
    "name" : "assumeNogc",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "assumeNogc",
      "kind" : "function",
      "line" : 83,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "ref (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 86,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 89,
    "char" : 6,
    "name" : "assumeNogc",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFunctionPointer!T || isDelegate!T",
    "members" : [
     {
      "name" : "assumeNogc",
      "kind" : "function",
      "line" : 89,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(T t)",
      "parameters" : [
       {
        "name" : "t",
        "type" : "T"
       }
      ],
      "endline" : 93,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 99,
    "char" : 10,
    "name" : "assumeNothrow",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "assumeNothrow",
      "kind" : "function",
      "line" : 99,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "ref (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 102,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 105,
    "char" : 6,
    "name" : "assumeNothrow",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isFunctionPointer!T || isDelegate!T",
    "members" : [
     {
      "name" : "assumeNothrow",
      "kind" : "function",
      "line" : 105,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(T t)",
      "parameters" : [
       {
        "name" : "t",
        "type" : "T"
       }
      ],
      "endline" : 109,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 126,
    "char" : 9,
    "name" : "AssumedUnsharedType",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "std.traits",
      "kind" : "import",
      "line" : 128,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "AssumedUnsharedType",
      "kind" : "alias",
      "line" : 131,
      "char" : 3,
      "type" : "AssumedUnsharedType!U"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 162,
    "char" : 10,
    "name" : "assumeUnshared",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "assumeUnshared",
      "kind" : "function",
      "line" : 162,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "@property ref (ref T x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 165,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 170,
    "char" : 10,
    "name" : "assumeShared",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "assumeShared",
      "kind" : "function",
      "line" : 170,
      "char" : 10,
      "storageClass" : [
       "auto"
      ],
      "type" : "@property ref (ref T x)",
      "parameters" : [
       {
        "name" : "x",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 173,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 179,
    "char" : 1,
    "name" : "nogcEnforce",
    "parameters" : [
     {
      "name" : "E",
      "kind" : "type",
      "deco" : "C6object9Throwable",
      "default" : "Exception"
     }
    ],
    "constraint" : "is(typeof(new E(string.init, \"/home/runner/work/voile/voile/voile/misc.d\", 180)) : Throwable) || is(typeof(new E(\"/home/runner/work/voile/voile/voile/misc.d\", 181)) : Throwable)",
    "members" : [
     {
      "kind" : "template",
      "line" : 183,
      "char" : 4,
      "name" : "nogcEnforce",
      "parameters" : [
       {
        "name" : "T",
        "kind" : "type"
       }
      ],
      "constraint" : "is(typeof(()\n{\nif (!value)\n{\n}\n}\n))",
      "members" : [
       {
        "name" : "nogcEnforce",
        "kind" : "function",
        "line" : 183,
        "char" : 4,
        "type" : "@nogc @safe T(T value, string msg = null, string file = __FILE__, size_t line = __LINE__)",
        "parameters" : [
         {
          "name" : "value",
          "type" : "T"
         },
         {
          "name" : "msg",
          "type" : "string",
          "default" : "null"
         },
         {
          "name" : "file",
          "type" : "string",
          "default" : "__FILE__"
         },
         {
          "name" : "line",
          "type" : "size_t",
          "default" : "__LINE__"
         }
        ],
        "endline" : 188,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 191,
    "char" : 3,
    "name" : "nogcEnforce",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Dg",
      "kind" : "type"
     },
     {
      "name" : "file",
      "kind" : "value",
      "deco" : "Aya",
      "defaultValue" : "__FILE__"
     },
     {
      "name" : "line",
      "kind" : "value",
      "deco" : "m",
      "defaultValue" : "__LINE__"
     }
    ],
    "constraint" : "isSomeFunction!Dg && is(typeof(dg())) && is(typeof(()\n{\nif (!value)\n{\n}\n}\n))",
    "members" : [
     {
      "name" : "nogcEnforce",
      "kind" : "function",
      "line" : 191,
      "char" : 3,
      "type" : "@nogc @safe T(T value, scope Dg dg)",
      "parameters" : [
       {
        "name" : "value",
        "type" : "T"
       },
       {
        "name" : "dg",
        "type" : "Dg",
        "storageClass" : [
         "scope"
        ]
       }
      ],
      "endline" : 195,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 197,
    "char" : 14,
    "name" : "nogcBailOut",
    "parameters" : [
     {
      "name" : "E",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "nogcBailOut",
      "kind" : "function",
      "line" : 197,
      "char" : 14,
      "type" : "@nogc @safe void(string file, size_t line, string msg)",
      "parameters" : [
       {
        "name" : "file",
        "type" : "string"
       },
       {
        "name" : "line",
        "type" : "size_t"
       },
       {
        "name" : "msg",
        "type" : "string"
       }
      ],
      "endline" : 210,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L212_C13",
    "kind" : "function",
    "line" : 212,
    "char" : 13,
    "storageClass" : [
     "@nogc",
     "@safe"
    ],
    "endline" : 232,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 232,
    "char" : 1,
    "name" : "TemplateSpecializedTypeTuple",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "TemplateSpecializedTypeTuple",
      "kind" : "alias",
      "line" : 236,
      "char" : 3,
      "type" : "Params"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 245,
    "char" : 9,
    "name" : "_isNotRefPSC",
    "parameters" : [
     {
      "name" : "pcs",
      "kind" : "value",
      "deco" : "k"
     }
    ],
    "members" : [
     {
      "name" : "_isNotRefPSC",
      "kind" : "variable",
      "line" : 247,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "(pcs & ParameterStorageClass.ref_) == 0"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 255,
    "char" : 2,
    "name" : "variantSwitch",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "variantSwitch",
      "kind" : "function",
      "line" : 255,
      "char" : 2,
      "type" : "CommonType!(staticMap!(ReturnType, T))(auto ref Variant var, T caseFunctions)",
      "parameters" : [
       {
        "name" : "var",
        "type" : "Variant",
        "storageClass" : [
         "auto",
         "ref"
        ]
       },
       {
        "name" : "caseFunctions",
        "type" : "T"
       }
      ],
      "endline" : 331,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L334_C9",
    "kind" : "function",
    "line" : 334,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 538,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 540,
    "char" : 2,
    "name" : "castSwitch",
    "parameters" : [
     {
      "name" : "Base",
      "kind" : "type"
     },
     {
      "name" : "T",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "castSwitch",
      "kind" : "function",
      "line" : 540,
      "char" : 2,
      "type" : "CommonType!(staticMap!(ReturnType, T))(Base inst, T caseFunctions)",
      "parameters" : [
       {
        "name" : "inst",
        "type" : "Base"
       },
       {
        "name" : "caseFunctions",
        "type" : "T"
       }
      ],
      "endline" : 606,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 775,
    "char" : 11,
    "name" : "indentRuntime",
    "parameters" : [
     {
      "name" : "S",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "indentRuntime",
      "kind" : "function",
      "line" : 775,
      "char" : 11,
      "type" : "S(S s, S indentStr = \" \")",
      "parameters" : [
       {
        "name" : "s",
        "type" : "S"
       },
       {
        "name" : "indentStr",
        "type" : "S",
        "default" : "\" \""
       }
      ],
      "endline" : 813,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 815,
    "char" : 11,
    "name" : "indentCtfe",
    "parameters" : [
     {
      "name" : "S",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "indentCtfe",
      "kind" : "function",
      "line" : 815,
      "char" : 11,
      "type" : "S(S s, S indentStr = \" \")",
      "parameters" : [
       {
        "name" : "s",
        "type" : "S"
       },
       {
        "name" : "indentStr",
        "type" : "S",
        "default" : "\" \""
       }
      ],
      "endline" : 827,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 833,
    "char" : 3,
    "name" : "indent",
    "parameters" : [
     {
      "name" : "S",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "indent",
      "kind" : "function",
      "line" : 833,
      "char" : 3,
      "type" : "S(S s, S indentStr = \"\\x09\")",
      "parameters" : [
       {
        "name" : "s",
        "type" : "S"
       },
       {
        "name" : "indentStr",
        "type" : "S",
        "default" : "\"\\x09\""
       }
      ],
      "endline" : 844,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L846_C9",
    "kind" : "function",
    "line" : 846,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 866,
    "endchar" : 1
   },
   {
    "name" : "std.stdio",
    "kind" : "import",
    "line" : 866,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "truncate",
    "kind" : "function",
    "comment" : "\n",
    "line" : 870,
    "char" : 6,
    "deco" : "FKS3std5stdio4FilemZv",
    "originalType" : "void(ref File f, size_t fileSize = -1)",
    "parameters" : [
     {
      "name" : "f",
      "deco" : "S3std5stdio4File",
      "storageClass" : [
       "ref"
      ]
     },
     {
      "name" : "fileSize",
      "deco" : "m",
      "default" : "18446744073709551615LU"
     }
    ],
    "endline" : 895,
    "endchar" : 1
   },
   {
    "name" : "addPathAfter",
    "kind" : "function",
    "comment" : " 新しいパスを現在のパスの後ろに追加します\n",
    "line" : 902,
    "char" : 6,
    "deco" : "FAyaZv",
    "parameters" : [
     {
      "name" : "newpath",
      "deco" : "Aya"
     }
    ],
    "endline" : 921,
    "endchar" : 1
   },
   {
    "name" : "addPathBefore",
    "kind" : "function",
    "comment" : " 新しいパスを現在のパスの前に追加します\n",
    "line" : 926,
    "char" : 6,
    "deco" : "FAyaZv",
    "parameters" : [
     {
      "name" : "newpath",
      "deco" : "Aya"
     }
    ],
    "endline" : 945,
    "endchar" : 1
   },
   {
    "name" : "fromMBS",
    "kind" : "function",
    "comment" : " MBS(ZeroNIL)文字列からUTF8に変換\n",
    "line" : 950,
    "char" : 8,
    "deco" : "FxAhkZAya",
    "originalType" : "string(in ubyte[] data, uint codePage = 0)",
    "parameters" : [
     {
      "name" : "data",
      "deco" : "xAh"
     },
     {
      "name" : "codePage",
      "deco" : "k",
      "default" : "0u"
     }
    ],
    "endline" : 963,
    "endchar" : 1
   },
   {
    "name" : "fromUTF16z",
    "kind" : "function",
    "comment" : " UTF16(ZeroNIL)文字列からUTF8に変換\n",
    "line" : 969,
    "char" : 8,
    "deco" : "FxPuZAya",
    "originalType" : "string(in wchar* data)",
    "parameters" : [
     {
      "name" : "data",
      "deco" : "xPu"
     }
    ],
    "endline" : 976,
    "endchar" : 1
   },
   {
    "name" : "toMBS",
    "kind" : "function",
    "comment" : " UTF8からMBS(ZeroNIL)文字列に変換\n",
    "line" : 983,
    "char" : 15,
    "deco" : "FxAakZAxa",
    "originalType" : "const(char)[](in char[] data, uint codePage = 0)",
    "parameters" : [
     {
      "name" : "data",
      "deco" : "xAa"
     },
     {
      "name" : "codePage",
      "deco" : "k",
      "default" : "0u"
     }
    ],
    "endline" : 997,
    "endchar" : 1
   },
   {
    "name" : "MacroType",
    "kind" : "enum",
    "comment" : "\n",
    "line" : 1003,
    "char" : 1,
    "baseDeco" : "i",
    "members" : [
     {
      "name" : "str",
      "kind" : "enum member",
      "value" : "0",
      "comment" : "$xxx, ${xxx}\n",
      "line" : 1006,
      "char" : 2
     },
     {
      "name" : "expr",
      "kind" : "enum member",
      "value" : "1",
      "comment" : "$(xxx)\n",
      "line" : 1008,
      "char" : 2
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " Expands macro variables contained within a str\n",
    "line" : 1014,
    "char" : 3,
    "name" : "expandMacro",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Func",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T && isCallable!Func && is(ReturnType!Func : bool) && (ParameterTypeTuple!Func.length >= 1) && is(T : ParameterTypeTuple!Func[0]) && ((ParameterStorageClassTuple!Func[0] & ParameterStorageClass.ref_) == ParameterStorageClass.ref_)",
    "members" : [
     {
      "name" : "expandMacro",
      "kind" : "function",
      "line" : 1014,
      "char" : 3,
      "type" : "T(in T str, Func mapFunc)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "mapFunc",
        "type" : "Func"
       }
      ],
      "endline" : 1036,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1039,
    "char" : 3,
    "name" : "expandMacro",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Func",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T && isCallable!Func && is(ReturnType!Func : T) && (ParameterTypeTuple!Func.length >= 1) && is(T : ParameterTypeTuple!Func[0])",
    "members" : [
     {
      "name" : "expandMacro",
      "kind" : "function",
      "line" : 1039,
      "char" : 3,
      "type" : "T(in T str, Func mapFunc)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "mapFunc",
        "type" : "Func"
       }
      ],
      "endline" : 1062,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1065,
    "char" : 3,
    "name" : "expandMacro",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "MAP",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T && is(typeof(()\n{\nauto p = T.init in map;\nT tmp = *p;\n}\n))",
    "members" : [
     {
      "name" : "expandMacro",
      "kind" : "function",
      "line" : 1065,
      "char" : 3,
      "type" : "T(in T str, MAP map)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "map",
        "type" : "MAP"
       }
      ],
      "endline" : 1081,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 1084,
    "char" : 16,
    "name" : "searchEnd1",
    "parameters" : [
     {
      "name" : "Ch",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "searchEnd1",
      "kind" : "function",
      "line" : 1084,
      "char" : 16,
      "type" : "size_t(const(Ch)[] str)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "const(Ch)[]"
       }
      ],
      "endline" : 1093,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1095_C9",
    "kind" : "function",
    "line" : 1095,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1105,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 1105,
    "char" : 16,
    "name" : "searchEnd2",
    "parameters" : [
     {
      "name" : "Ch",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "searchEnd2",
      "kind" : "function",
      "line" : 1105,
      "char" : 16,
      "type" : "size_t(const(Ch)[] str, Ch ch)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "const(Ch)[]"
       },
       {
        "name" : "ch",
        "type" : "Ch"
       }
      ],
      "endline" : 1155,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1156_C9",
    "kind" : "function",
    "line" : 1156,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1166,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 1166,
    "char" : 11,
    "name" : "expandMacroImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "func",
      "kind" : "alias"
     }
    ],
    "constraint" : "isSomeString!T && isCallable!func && is(ReturnType!func : bool) && (ParameterTypeTuple!func.length == 3) && is(T : ParameterTypeTuple!func[0]) && is(MacroType : ParameterTypeTuple!func[1]) && is(bool : ParameterTypeTuple!func[2]) && ((ParameterStorageClassTuple!func[0] & ParameterStorageClass.ref_) == ParameterStorageClass.ref_)",
    "members" : [
     {
      "name" : "expandMacroImpl",
      "kind" : "function",
      "line" : 1166,
      "char" : 11,
      "type" : "T(in T str)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       }
      ],
      "endline" : 1255,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1257_C9",
    "kind" : "function",
    "line" : 1257,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1341,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 文字列内に含まれる変数を展開します。\n\n `aaa%VAR%bbb`のVAR変数を展開します。変数が存在しない場合は何もしません。\n VARがxxxであれば、`aaaxxxbbb`となります。\n VARが存在しなければ、`aaa%VAR%bbb`のままです。\n",
    "line" : 1341,
    "char" : 3,
    "name" : "expandVariable",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "MAP",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T && is(typeof(()\n{\nauto p = T.init in map;\nT var = *p;\n}\n))",
    "members" : [
     {
      "name" : "expandVariable",
      "kind" : "function",
      "line" : 1341,
      "char" : 3,
      "type" : "T(in T str, MAP map)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "map",
        "type" : "MAP"
       }
      ],
      "endline" : 1355,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1357,
    "char" : 3,
    "name" : "expandVariable",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Func",
      "kind" : "type"
     }
    ],
    "constraint" : "isSomeString!T && isCallable!Func && is(ReturnType!Func : T) && (ParameterTypeTuple!Func.length == 1) && is(T : ParameterTypeTuple!Func[0])",
    "members" : [
     {
      "name" : "expandVariable",
      "kind" : "function",
      "line" : 1357,
      "char" : 3,
      "type" : "T(in T str, Func mapFunc)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       },
       {
        "name" : "mapFunc",
        "type" : "Func"
       }
      ],
      "endline" : 1370,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 1372,
    "char" : 11,
    "name" : "expandVariableImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "func",
      "kind" : "alias"
     }
    ],
    "constraint" : "isSomeString!T && isCallable!func && is(ReturnType!func : bool) && (ParameterTypeTuple!func.length == 1) && is(ParameterTypeTuple!func[0] == T) && ((ParameterStorageClassTuple!func[0] & ParameterStorageClass.ref_) == ParameterStorageClass.ref_)",
    "members" : [
     {
      "name" : "expandVariableImpl",
      "kind" : "function",
      "line" : 1372,
      "char" : 11,
      "type" : "T(in T str)",
      "parameters" : [
       {
        "name" : "str",
        "type" : "T",
        "storageClass" : [
         "in"
        ]
       }
      ],
      "endline" : 1417,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1418_C9",
    "kind" : "function",
    "line" : 1418,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1429,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.parseopt",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/parseopt.d",
  "comment" : " コマンドライン引数のパーサー\n\n getoptと同じくコマンドラインの解析を行う。\n getoptとの違いは、getoptは関数の引数に基づいて引数の解析を行うが、\n 本モジュールの parseOptions は、構造体の変数を引数に取ることで、構造体メンバ\n に関連付けられたUDAによりコマンドライン引数の解析を行う。\n\n------------------------------------------------------------------------------\n@help(\"Help messages for heading of application.\\n\")\nstruct Dat\n{\n  @help(\"Description of `value`\")\n  string value;\n\n  string nonHelpedValue;\n\n  @ignore\n  string ignoredValue;\n\n  @opt(\"a|aaaa\") @help(\"Description of `i32value`\")\n  int i32value;\n\n  @opt(\"f|ff\")\n  int f32value;\n}\n------------------------------------------------------------------------------\n\n 構造体(型)に付与できるUDAは以下の通り\n\n - help(str) : アプリケーションのヘルプメッセージ\n - caseSensitive : コマンドライン引数の大文字小文字を区別するかどうか。デフォルトは区別しない。\n - passThrough : 解釈されなかったコマンドライン引数を無視するか例外としてはじくか。デフォルトは例外としてはじく。\n - binding : 短いコマンドライン引数を、まとめて指定できるか(`-abc`で`-a -b -c`と同じ解釈にさせるかどうか)\n - assignChar(str) : コマンドライン引数の「割り当て」に使用する文字を指定できる。(デフォルトは`=`。`-a=xxx` や `--arg=xxx` など。区切り文字を変更可能。)\n - arraySeparator(str) : コマンドライン引数の配列の区切り文字を指定できる。(デフォルトは`,`(カンマ)。`-a=xxx,yyy,zzz`の`,`を変更可能。)\n - endOfOptions(str) : コマンドライン引数として解釈させる最後の文字を指定できる。(デフォルトは`--`で、`-a=xxx -b=yyy -- -c=zzz`では、`-a`と`-b`だけ解釈させる区切り文字として作用する。この区切り文字を変更可能。)\n - shortOpt(str) : 短いコマンドライン引数として解釈させるprefixを指定できる。(デフォルトは`-`。`-a`などのように使われる。)\n - longOpt(str) : 短いコマンドライン引数として解釈させるprefixを指定できる。(デフォルトは`--`。`--arg`などのように使われる。)\n\n 構造体メンバーに付与できるUDAは以下の通り\n\n - help(str) : 引数のヘルプメッセージ\n - opt(str) : 引数。`\"a|args\"` とすることで、`-a`と`--args`を同時に定義可能。指定しなければオプションとして指定できない。\n - required : 引数を指定することを必須化する。デフォルトは`false`。\n - convBy!fn : 指定した関数`fn`によって引数の値をメンバ変数の型に変換する。\n - ignore : 指定したメンバーをコマンドライン引数の解釈に使用しない。\n\n コマンドライン引数の解釈の対象となるメンバーの型は以下の通り。※リストの上のものほど優先度が高い。\n\n - convByが指定されている引数\n   - T function(string arg)\n   - void function(ref T dst, string arg)\n   - void function(out T dst, string arg)\n   - void function(in S dat, ref T dst, string arg)\n   - void function(in S dat, out T dst, string arg)\n   - void function(ref S dat, string arg)\n - bool : 真偽値\n - string : 文字列型\n - T[] : 配列。std.conv.toにより、文字列がTに変換可能。\n - V[K] : 連想配列。std.conv.toにより文字列がV, Kに変換可能。\n - T : std.conv.toにより、文字列がTに変換可能。\n - void function(bool shortPrefix, string arg)\n - void function(string prefix, string arg)\n - void function(string arg)\n - void function(bool enabled)\n - void function()\n",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 71,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.meta",
    "kind" : "import",
    "line" : 71,
    "char" : 20,
    "protection" : "private"
   },
   {
    "name" : "Help",
    "kind" : "struct",
    "protection" : "private",
    "line" : 74,
    "char" : 1,
    "members" : [
     {
      "name" : "help",
      "kind" : "variable",
      "line" : 76,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "CaseSensitive",
    "kind" : "struct",
    "protection" : "private",
    "line" : 80,
    "char" : 1,
    "members" : []
   },
   {
    "name" : "PassThrough",
    "kind" : "struct",
    "protection" : "private",
    "line" : 83,
    "char" : 1,
    "members" : []
   },
   {
    "name" : "Binding",
    "kind" : "struct",
    "protection" : "private",
    "line" : 86,
    "char" : 1,
    "members" : []
   },
   {
    "name" : "AssignChar",
    "kind" : "struct",
    "protection" : "private",
    "line" : 89,
    "char" : 1,
    "members" : [
     {
      "name" : "assignChar",
      "kind" : "variable",
      "line" : 91,
      "char" : 8,
      "deco" : "w",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "ArraySeparator",
    "kind" : "struct",
    "protection" : "private",
    "line" : 93,
    "char" : 1,
    "members" : [
     {
      "name" : "arraySeparator",
      "kind" : "variable",
      "line" : 95,
      "char" : 8,
      "deco" : "w",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "EndOfOptions",
    "kind" : "struct",
    "protection" : "private",
    "line" : 98,
    "char" : 1,
    "members" : [
     {
      "name" : "endOfOptions",
      "kind" : "variable",
      "line" : 100,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "OptShort",
    "kind" : "struct",
    "protection" : "private",
    "line" : 103,
    "char" : 1,
    "members" : [
     {
      "name" : "optShort",
      "kind" : "variable",
      "line" : 105,
      "char" : 11,
      "deco" : "AAya",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "OptLong",
    "kind" : "struct",
    "protection" : "private",
    "line" : 107,
    "char" : 1,
    "members" : [
     {
      "name" : "optLong",
      "kind" : "variable",
      "line" : 109,
      "char" : 11,
      "deco" : "AAya",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "OptPrefix",
    "kind" : "struct",
    "protection" : "private",
    "line" : 112,
    "char" : 1,
    "members" : [
     {
      "name" : "Type",
      "kind" : "enum",
      "line" : 114,
      "char" : 2,
      "baseDeco" : "i",
      "members" : [
       {
        "name" : "none",
        "kind" : "enum member",
        "value" : "0",
        "line" : 114,
        "char" : 14
       },
       {
        "name" : "shortOpt",
        "kind" : "enum member",
        "value" : "1",
        "line" : 114,
        "char" : 20
       },
       {
        "name" : "longOpt",
        "kind" : "enum member",
        "value" : "2",
        "line" : 114,
        "char" : 30
       }
      ]
     },
     {
      "name" : "type",
      "kind" : "variable",
      "line" : 115,
      "char" : 9,
      "deco" : "E5voile8parseopt9OptPrefix4Type",
      "offset" : 0
     },
     {
      "name" : "prefix",
      "kind" : "variable",
      "line" : 116,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 8
     }
    ]
   },
   {
    "name" : "sortPrefix",
    "kind" : "function",
    "protection" : "private",
    "line" : 119,
    "char" : 13,
    "deco" : "FNaNfAAyaQeZAS5voile8parseopt9OptPrefix",
    "parameters" : [
     {
      "name" : "shortOpt",
      "deco" : "AAya"
     },
     {
      "name" : "longOpt",
      "deco" : "AAya"
     }
    ],
    "endline" : 127,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L129_C7",
    "kind" : "function",
    "protection" : "private",
    "line" : 129,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 139,
    "endchar" : 1
   },
   {
    "name" : "TypeOption",
    "kind" : "struct",
    "protection" : "private",
    "line" : 139,
    "char" : 1,
    "members" : [
     {
      "name" : "help",
      "kind" : "variable",
      "line" : 141,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 0
     },
     {
      "name" : "caseSensitive",
      "kind" : "variable",
      "line" : 142,
      "char" : 11,
      "deco" : "b",
      "offset" : 16
     },
     {
      "name" : "passThrough",
      "kind" : "variable",
      "line" : 143,
      "char" : 11,
      "deco" : "b",
      "offset" : 17
     },
     {
      "name" : "binding",
      "kind" : "variable",
      "line" : 144,
      "char" : 11,
      "deco" : "b",
      "offset" : 18
     },
     {
      "name" : "assignChar",
      "kind" : "variable",
      "line" : 145,
      "char" : 11,
      "deco" : "w",
      "offset" : 20
     },
     {
      "name" : "arraySeparator",
      "kind" : "variable",
      "line" : 146,
      "char" : 11,
      "deco" : "w",
      "offset" : 24
     },
     {
      "name" : "endOfOptions",
      "kind" : "variable",
      "line" : 147,
      "char" : 11,
      "deco" : "Aya",
      "offset" : 32
     },
     {
      "name" : "optShort",
      "kind" : "variable",
      "line" : 148,
      "char" : 11,
      "deco" : "AAya",
      "offset" : 48
     },
     {
      "name" : "optLong",
      "kind" : "variable",
      "line" : 149,
      "char" : 11,
      "deco" : "AAya",
      "offset" : 64
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 153,
    "char" : 1,
    "name" : "getUDA",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "alias"
     },
     {
      "name" : "OptType",
      "kind" : "type"
     },
     {
      "name" : "memberName",
      "kind" : "value",
      "deco" : "Aya"
     }
    ],
    "members" : [
     {
      "name" : "ValType",
      "kind" : "alias",
      "line" : 155,
      "char" : 2,
      "type" : "typeof(__traits(getMember, OptType, memberName))"
     },
     {
      "kind" : "template",
      "line" : 156,
      "char" : 2,
      "name" : "get",
      "parameters" : [
       {
        "name" : "UDAType",
        "kind" : "type"
       },
       {
        "name" : "defaultVal",
        "kind" : "value",
        "type" : "ValType"
       },
       {
        "name" : "udaMemberName",
        "kind" : "value",
        "type" : "string",
        "defaultValue" : "memberName"
       }
      ],
      "members" : [
       {
        "name" : "get",
        "kind" : "variable",
        "line" : 160,
        "char" : 9,
        "storageClass" : [
         "enum"
        ],
        "init" : "__traits(getMember, getUDAs!(T, OptType)[0], memberName)"
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 179,
    "char" : 1,
    "name" : "TypeOptionOf",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "TypeOptionOf",
      "kind" : "variable",
      "line" : 181,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "TypeOption(getUDA!(T, TypeOption, \"help\").get!(Help, null), getUDA!(T, TypeOption, \"caseSensitive\").get!(CaseSensitive, false), getUDA!(T, TypeOption, \"passThrough\").get!(PassThrough, false), getUDA!(T, TypeOption, \"binding\").get!(Binding, false), getUDA!(T, TypeOption, \"assignChar\").get!(AssignChar, '='), getUDA!(T, TypeOption, \"arraySeparator\").get!(ArraySeparator, ','), getUDA!(T, TypeOption, \"endOfOptions\").get!(EndOfOptions, \"--\"), getUDA!(T, TypeOption, \"optShort\").get!(OptShort, [\"-\"]), getUDA!(T, TypeOption, \"optLong\").get!(OptLong, [\"--\"]))"
     }
    ]
   },
   {
    "name" : "__unittest_L194_C7",
    "kind" : "function",
    "protection" : "private",
    "line" : 194,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 229,
    "endchar" : 1
   },
   {
    "name" : "Opt",
    "kind" : "struct",
    "protection" : "private",
    "line" : 229,
    "char" : 1,
    "members" : [
     {
      "name" : "option",
      "kind" : "variable",
      "line" : 231,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 0
     }
    ]
   },
   {
    "name" : "Req",
    "kind" : "struct",
    "protection" : "private",
    "line" : 234,
    "char" : 1,
    "members" : []
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 238,
    "char" : 1,
    "name" : "ConvBy",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "ConvBy",
      "kind" : "struct",
      "line" : 238,
      "char" : 1,
      "members" : []
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 243,
    "char" : 11,
    "name" : "isConvBy",
    "parameters" : [
     {
      "name" : "uda",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "isConvBy",
      "kind" : "variable",
      "line" : 243,
      "char" : 11,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "isInstanceOf!(ConvBy, uda)"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 245,
    "char" : 11,
    "name" : "hasConvBy",
    "parameters" : [
     {
      "name" : "symbol",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "hasConvBy",
      "kind" : "variable",
      "line" : 245,
      "char" : 11,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "Filter!(isConvBy, __traits(getAttributes, symbol)).length > 0"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 247,
    "char" : 1,
    "name" : "getConvBy",
    "parameters" : [
     {
      "name" : "value",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "getConvBy",
      "kind" : "alias",
      "line" : 252,
      "char" : 3,
      "type" : "TemplateArgsOf!value[0]"
     }
    ]
   },
   {
    "name" : "Ignore",
    "kind" : "struct",
    "protection" : "private",
    "line" : 265,
    "char" : 1,
    "members" : []
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 270,
    "char" : 11,
    "name" : "isIgnore",
    "parameters" : [
     {
      "name" : "uda",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "isIgnore",
      "kind" : "variable",
      "line" : 270,
      "char" : 11,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "is(uda : Ignore)"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 272,
    "char" : 11,
    "name" : "hasIgnore",
    "parameters" : [
     {
      "name" : "symbol",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "hasIgnore",
      "kind" : "variable",
      "line" : 272,
      "char" : 11,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "Filter!(isIgnore, __traits(getAttributes, symbol)).length > 0"
     }
    ]
   },
   {
    "name" : "Option",
    "kind" : "struct",
    "protection" : "private",
    "line" : 275,
    "char" : 1,
    "members" : [
     {
      "name" : "option",
      "kind" : "variable",
      "line" : 277,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 0
     },
     {
      "name" : "help",
      "kind" : "variable",
      "line" : 278,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 16
     },
     {
      "name" : "required",
      "kind" : "variable",
      "line" : 279,
      "char" : 9,
      "deco" : "b",
      "offset" : 32
     },
     {
      "name" : "shortOptions",
      "kind" : "function",
      "line" : 281,
      "char" : 10,
      "deco" : "xFNdZAw",
      "endline" : 285,
      "endchar" : 2
     },
     {
      "name" : "longOptions",
      "kind" : "function",
      "line" : 286,
      "char" : 11,
      "deco" : "xFNdZAAya",
      "endline" : 290,
      "endchar" : 2
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 294,
    "char" : 1,
    "name" : "OptionOf",
    "parameters" : [
     {
      "name" : "Type",
      "kind" : "alias"
     },
     {
      "name" : "memberName",
      "kind" : "value",
      "deco" : "Aya"
     }
    ],
    "members" : [
     {
      "name" : "OptionOf",
      "kind" : "variable",
      "line" : 296,
      "char" : 7,
      "storageClass" : [
       "enum"
      ],
      "init" : "Option(getUDA!(__traits(getMember, Type, memberName), Option, \"option\").get!(Opt, null), getUDA!(__traits(getMember, Type, memberName), Option, \"help\").get!(Help, null), getUDA!(__traits(getMember, Type, memberName), Option, \"required\").get!(Req, false))"
     }
    ]
   },
   {
    "name" : "__unittest_L303_C7",
    "kind" : "function",
    "protection" : "private",
    "line" : 303,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 324,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 324,
    "char" : 6,
    "name" : "assignData",
    "parameters" : [
     {
      "name" : "memberName",
      "kind" : "value",
      "deco" : "Aya"
     },
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "assignData",
      "kind" : "function",
      "line" : 324,
      "char" : 6,
      "type" : "@safe void(ref T dat, OptPrefix prefix, string arg)",
      "parameters" : [
       {
        "name" : "dat",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "prefix",
        "type" : "OptPrefix"
       },
       {
        "name" : "arg",
        "type" : "string"
       }
      ],
      "endline" : 477,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L479_C7",
    "kind" : "function",
    "protection" : "private",
    "line" : 479,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 622,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 622,
    "char" : 1,
    "name" : "getHelpString",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "displayWidth",
      "kind" : "value",
      "deco" : "m",
      "defaultValue" : "80"
     }
    ],
    "members" : [
     {
      "name" : "get",
      "kind" : "function",
      "line" : 624,
      "char" : 9,
      "type" : "pure @safe string()",
      "endline" : 680,
      "endchar" : 2
     },
     {
      "name" : "getHelpString",
      "kind" : "variable",
      "line" : 681,
      "char" : 14,
      "storageClass" : [
       "enum"
      ],
      "type" : "string",
      "init" : "get()"
     }
    ]
   },
   {
    "name" : "__unittest_L684_C7",
    "kind" : "function",
    "protection" : "private",
    "line" : 684,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 719,
    "endchar" : 1
   },
   {
    "name" : "help",
    "kind" : "function",
    "comment" : "\n",
    "line" : 722,
    "char" : 6,
    "deco" : "FNaNbNiNfAyaZS5voile8parseopt4Help",
    "parameters" : [
     {
      "name" : "str",
      "deco" : "Aya"
     }
    ],
    "endline" : 725,
    "endchar" : 1
   },
   {
    "name" : "caseSensitive",
    "kind" : "function",
    "comment" : "\n",
    "line" : 728,
    "char" : 15,
    "deco" : "FNaNbNiNfZS5voile8parseopt13CaseSensitive",
    "endline" : 731,
    "endchar" : 1
   },
   {
    "name" : "passThrough",
    "kind" : "function",
    "comment" : "\n",
    "line" : 734,
    "char" : 13,
    "deco" : "FNaNbNiNfZS5voile8parseopt11PassThrough",
    "endline" : 737,
    "endchar" : 1
   },
   {
    "name" : "binding",
    "kind" : "function",
    "comment" : "\n",
    "line" : 740,
    "char" : 9,
    "deco" : "FNaNbNiNfZS5voile8parseopt7Binding",
    "endline" : 743,
    "endchar" : 1
   },
   {
    "name" : "assignChar",
    "kind" : "function",
    "comment" : "\n",
    "line" : 746,
    "char" : 12,
    "deco" : "FNaNbNiNfwZS5voile8parseopt10AssignChar",
    "parameters" : [
     {
      "name" : "c",
      "deco" : "w",
      "default" : "'='"
     }
    ],
    "endline" : 749,
    "endchar" : 1
   },
   {
    "name" : "arraySeparator",
    "kind" : "function",
    "comment" : "\n",
    "line" : 751,
    "char" : 16,
    "deco" : "FNaNbNiNfwZS5voile8parseopt14ArraySeparator",
    "parameters" : [
     {
      "name" : "c",
      "deco" : "w",
      "default" : "','"
     }
    ],
    "endline" : 754,
    "endchar" : 1
   },
   {
    "name" : "endOfOptions",
    "kind" : "function",
    "comment" : "\n",
    "line" : 757,
    "char" : 14,
    "deco" : "FAyaZS5voile8parseopt12EndOfOptions",
    "parameters" : [
     {
      "name" : "str",
      "deco" : "Aya"
     }
    ],
    "endline" : 760,
    "endchar" : 1
   },
   {
    "name" : "opt",
    "kind" : "function",
    "comment" : "\n",
    "line" : 763,
    "char" : 5,
    "deco" : "FNaNbNiNfAyaZS5voile8parseopt3Opt",
    "parameters" : [
     {
      "name" : "str",
      "deco" : "Aya"
     }
    ],
    "endline" : 766,
    "endchar" : 1
   },
   {
    "name" : "required",
    "kind" : "function",
    "comment" : "\n",
    "line" : 769,
    "char" : 5,
    "deco" : "FNaNbNiNfZS5voile8parseopt3Req",
    "endline" : 772,
    "endchar" : 1
   },
   {
    "name" : "optShort",
    "kind" : "function",
    "comment" : "\n",
    "line" : 775,
    "char" : 10,
    "deco" : "FNaNbNiNfAAyaXS5voile8parseopt8OptShort",
    "parameters" : [
     {
      "name" : "str",
      "deco" : "AAya"
     }
    ],
    "endline" : 778,
    "endchar" : 1
   },
   {
    "name" : "optLong",
    "kind" : "function",
    "comment" : "\n",
    "line" : 781,
    "char" : 9,
    "deco" : "FNaNbNiNfAAyaXS5voile8parseopt7OptLong",
    "parameters" : [
     {
      "name" : "str",
      "deco" : "AAya"
     }
    ],
    "endline" : 784,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 787,
    "char" : 1,
    "name" : "convBy",
    "parameters" : [
     {
      "name" : "fn",
      "kind" : "alias"
     }
    ],
    "members" : [
     {
      "name" : "convBy",
      "kind" : "alias",
      "line" : 787,
      "char" : 1,
      "type" : "ConvBy!fn"
     }
    ]
   },
   {
    "name" : "ignore",
    "kind" : "alias",
    "comment" : "\n",
    "line" : 790,
    "char" : 1,
    "deco" : "S5voile8parseopt6Ignore"
   },
   {
    "name" : "typeOption",
    "kind" : "function",
    "comment" : "\n",
    "line" : 793,
    "char" : 12,
    "deco" : "FNaNbNiNfAyabbbwwQiAQlQdZS5voile8parseopt10TypeOption",
    "parameters" : [
     {
      "name" : "help",
      "deco" : "Aya",
      "default" : "null"
     },
     {
      "name" : "caseSensitive",
      "deco" : "b",
      "default" : "false"
     },
     {
      "name" : "passThrough",
      "deco" : "b",
      "default" : "false"
     },
     {
      "name" : "binding",
      "deco" : "b",
      "default" : "false"
     },
     {
      "name" : "assignChar",
      "deco" : "w",
      "default" : "'='"
     },
     {
      "name" : "arraySeparator",
      "deco" : "w",
      "default" : "','"
     },
     {
      "name" : "endOfOptions",
      "deco" : "Aya",
      "default" : "\"--\""
     },
     {
      "name" : "shortOpt",
      "deco" : "AAya",
      "default" : "[\"-\"]"
     },
     {
      "name" : "longOpt",
      "deco" : "AAya",
      "default" : "[\"--\"]"
     }
    ],
    "endline" : 807,
    "endchar" : 1
   },
   {
    "name" : "option",
    "kind" : "function",
    "comment" : "\n",
    "line" : 810,
    "char" : 8,
    "deco" : "FNaNbNiNfAyaQdbZS5voile8parseopt6Option",
    "parameters" : [
     {
      "name" : "opt",
      "deco" : "Aya"
     },
     {
      "name" : "help",
      "deco" : "Aya",
      "default" : "null"
     },
     {
      "name" : "required",
      "deco" : "b",
      "default" : "false"
     }
    ],
    "endline" : 816,
    "endchar" : 1
   },
   {
    "name" : "ParseOptException",
    "kind" : "class",
    "comment" : "\n",
    "line" : 819,
    "char" : 1,
    "base" : "object.Exception",
    "members" : [
     {
      "name" : "std.exception",
      "kind" : "import",
      "line" : 821,
      "char" : 9,
      "protection" : "private",
      "selective" : [
       "basicExceptionCtors"
      ]
     },
     {
      "name" : "basicExceptionCtors!()",
      "kind" : "mixin",
      "line" : 822,
      "char" : 2
     }
    ]
   },
   {
    "name" : "HelpInformation",
    "kind" : "struct",
    "comment" : "\n",
    "line" : 827,
    "char" : 1,
    "members" : [
     {
      "name" : "help",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 830,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 0
     },
     {
      "name" : "wanted",
      "kind" : "variable",
      "comment" : "\n",
      "line" : 833,
      "char" : 7,
      "deco" : "b",
      "offset" : 16
     },
     {
      "kind" : "template",
      "comment" : "\n",
      "line" : 836,
      "char" : 4,
      "name" : "opCast",
      "parameters" : [
       {
        "name" : "T",
        "kind" : "type"
       }
      ],
      "constraint" : "is(T == bool)",
      "members" : [
       {
        "name" : "opCast",
        "kind" : "function",
        "line" : 836,
        "char" : 4,
        "type" : "const pure nothrow @nogc T()",
        "endline" : 840,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "name" : "ArgData",
    "kind" : "struct",
    "protection" : "private",
    "line" : 843,
    "char" : 9,
    "members" : [
     {
      "name" : "idx",
      "kind" : "variable",
      "line" : 845,
      "char" : 12,
      "deco" : "Am",
      "originalType" : "size_t[]",
      "offset" : 0
     },
     {
      "name" : "prefix",
      "kind" : "variable",
      "line" : 846,
      "char" : 12,
      "deco" : "S5voile8parseopt9OptPrefix",
      "offset" : 16
     },
     {
      "name" : "key",
      "kind" : "variable",
      "line" : 847,
      "char" : 12,
      "deco" : "Aya",
      "offset" : 40
     },
     {
      "name" : "data",
      "kind" : "variable",
      "line" : 848,
      "char" : 12,
      "deco" : "Aya",
      "offset" : 56
     }
    ]
   },
   {
    "name" : "_parseArgsStep1",
    "kind" : "function",
    "protection" : "private",
    "line" : 852,
    "char" : 19,
    "deco" : "FNaNfAAyaKxS5voile8parseopt10TypeOptionKxASQBfQBc9OptPrefixZASQByQBv7ArgData",
    "originalType" : "pure @safe ArgData[](string[] args, ref TypeOption typeOpt, ref OptPrefix[] optPrefices)",
    "parameters" : [
     {
      "name" : "args",
      "deco" : "AAya"
     },
     {
      "name" : "typeOpt",
      "deco" : "xS5voile8parseopt10TypeOption",
      "storageClass" : [
       "ref"
      ]
     },
     {
      "name" : "optPrefices",
      "deco" : "xAS5voile8parseopt9OptPrefix",
      "storageClass" : [
       "ref"
      ]
     }
    ],
    "endline" : 909,
    "endchar" : 1
   },
   {
    "name" : "_parseArgsStep2",
    "kind" : "function",
    "protection" : "private",
    "line" : 912,
    "char" : 19,
    "deco" : "FNaNfAS5voile8parseopt7ArgDataAAyaZQBe",
    "parameters" : [
     {
      "name" : "args",
      "deco" : "AS5voile8parseopt7ArgData"
     },
     {
      "name" : "boolArgs",
      "deco" : "AAya"
     }
    ],
    "endline" : 940,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 943,
    "char" : 17,
    "name" : "parseOptions",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "parseOptions",
      "kind" : "function",
      "line" : 943,
      "char" : 17,
      "type" : "@safe HelpInformation(ref string[] args, ref T dat)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "string[]",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "dat",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 1096,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1099_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1099,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1128,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1128_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1128,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1155,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1155_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1155,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1194,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1194_C7",
    "kind" : "function",
    "comment" : "This behavior is different from Phobos' std.getopt.\n",
    "line" : 1194,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1218,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1218_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1218,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1250,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1250_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1250,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1289,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1289_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 1289,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 1347,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.refcnt",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/refcnt.d",
  "comment" : " 参照カウンタ\n",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 8,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.functional",
    "kind" : "import",
    "line" : 9,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "toDelegate"
    ]
   },
   {
    "name" : "Allocator",
    "kind" : "alias",
    "comment" : " アロケータ\n\n CountedDataを作成する際、メモリを割り当てる関数の型。\n",
    "line" : 17,
    "char" : 1,
    "deco" : "DFNaNbZPS5voile6refcnt15CountedInstance"
   },
   {
    "name" : "Deallocator",
    "kind" : "alias",
    "comment" : " デアロケータ\n\n CountedDataを解放する際、メモリを解放する関数の型。\n",
    "line" : 24,
    "char" : 1,
    "deco" : "DFNaNbNiPS5voile6refcnt15CountedInstanceZv"
   },
   {
    "kind" : "template",
    "comment" : " アロケータかどうかを判定する\n",
    "line" : 29,
    "char" : 1,
    "name" : "isAllocator",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "tuple"
     }
    ],
    "constraint" : "T.length > 0 && isCallable!(T[0])",
    "members" : [
     {
      "name" : "isAllocator",
      "kind" : "variable",
      "line" : 34,
      "char" : 13,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "isAssignable!(Allocator, typeof(toDelegate((typeof(&T[0])).init)))"
     }
    ]
   },
   {
    "name" : "__unittest_L42_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 42,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 60,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " デアロケータかどうかを判定する\n",
    "line" : 60,
    "char" : 1,
    "name" : "isDeallocator",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "tuple"
     }
    ],
    "constraint" : "T.length > 0 && isCallable!(T[0])",
    "members" : [
     {
      "name" : "isDeallocator",
      "kind" : "variable",
      "line" : 65,
      "char" : 13,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "isAssignable!(Deallocator, typeof(toDelegate((typeof(&T[0])).init)))"
     }
    ]
   },
   {
    "name" : "__unittest_L73_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 73,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 90,
    "endchar" : 1
   },
   {
    "name" : "defaultAllocatorByMalloc",
    "kind" : "function",
    "comment" : " malloc/freeによるアロケータ\n",
    "line" : 90,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfmZS5voile6refcnt24defaultAllocatorByMallocFNaNbNiNfmZ5Alloc",
    "originalType" : "pure nothrow @nogc @safe (size_t bufSize = 0)",
    "parameters" : [
     {
      "name" : "bufSize",
      "deco" : "m",
      "default" : "0LU"
     }
    ],
    "endline" : 126,
    "endchar" : 1
   },
   {
    "name" : "defaultAllocatorByGC",
    "kind" : "function",
    "comment" : " GCによるアロケータ\n",
    "line" : 131,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNiNfmZS5voile6refcnt20defaultAllocatorByGCFNaNbmZ5Alloc",
    "originalType" : "pure nothrow (size_t bufSize = 0)",
    "parameters" : [
     {
      "name" : "bufSize",
      "deco" : "m",
      "default" : "0LU"
     }
    ],
    "endline" : 151,
    "endchar" : 1
   },
   {
    "name" : "CountedInstance",
    "kind" : "struct",
    "comment" : " 参照カウンタ用のデータを作成する\n",
    "line" : 156,
    "char" : 1,
    "members" : [
     {
      "name" : "counter",
      "kind" : "variable",
      "comment" : "参照カウンタ\n",
      "line" : 159,
      "char" : 10,
      "deco" : "i",
      "offset" : 0
     },
     {
      "name" : "rawData",
      "kind" : "variable",
      "comment" : "生データ(データのインスタンスと拡張領域を含むメモリ領域全体)\n",
      "line" : 161,
      "char" : 10,
      "deco" : "Ah",
      "offset" : 8
     },
     {
      "name" : "deallocator",
      "kind" : "variable",
      "comment" : "解放時に呼び出すためのコールバック\n",
      "line" : 163,
      "char" : 14,
      "deco" : "DFNaNbNiPS5voile6refcnt15CountedInstanceZv",
      "originalType" : "Deallocator",
      "offset" : 24
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタ用のデータを作成するmixinテンプレート\n",
    "line" : 169,
    "char" : 7,
    "name" : "CountedImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "_instance",
      "kind" : "variable",
      "line" : 171,
      "char" : 27,
      "type" : "CountedInstance*"
     },
     {
      "name" : "buffer",
      "kind" : "function",
      "comment" : " 生データ(データのインスタンスと拡張領域を含むメモリ領域全体)\n",
      "line" : 176,
      "char" : 17,
      "type" : "inout pure nothrow @nogc @property @safe inout(ubyte)[]()",
      "endline" : 180,
      "endchar" : 2
     },
     {
      "name" : "data",
      "kind" : "function",
      "comment" : " データのインスタンス\n",
      "line" : 185,
      "char" : 15,
      "type" : "inout pure nothrow @nogc @property ref @trusted inout(T)()",
      "endline" : 190,
      "endchar" : 2
     },
     {
      "name" : "extra",
      "kind" : "function",
      "comment" : " 拡張データ領域\n",
      "line" : 195,
      "char" : 17,
      "type" : "inout pure nothrow @nogc @property @safe inout(ubyte)[]()",
      "endline" : 200,
      "endchar" : 2
     },
     {
      "name" : "initializeCountedInstance",
      "kind" : "function",
      "comment" : " 初期化する\n\n Note:\n      本関数を呼び出して初期化した場合、正しくrelease(CountedInstanceのdeallocatorの呼び出し)をしなければ\n      メモリリークする\n",
      "line" : 209,
      "char" : 7,
      "type" : "pure @nogc @system void(ubyte[] refbuf)",
      "parameters" : [
       {
        "name" : "refbuf",
        "type" : "ubyte[]"
       }
      ],
      "endline" : 213,
      "endchar" : 2
     },
     {
      "name" : "initializeCountedInstance",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 215,
      "char" : 7,
      "type" : "pure @nogc @system void(size_t bufSize = T.sizeof)",
      "parameters" : [
       {
        "name" : "bufSize",
        "type" : "size_t",
        "default" : "T.sizeof"
       }
      ],
      "endline" : 218,
      "endchar" : 2
     },
     {
      "kind" : "template",
      "comment" : "ditto\n",
      "line" : 220,
      "char" : 7,
      "name" : "initializeCountedInstance",
      "parameters" : [
       {
        "name" : "Alloc",
        "kind" : "type"
       }
      ],
      "members" : [
       {
        "name" : "initializeCountedInstance",
        "kind" : "function",
        "line" : 220,
        "char" : 7,
        "type" : "void(scope Alloc alloc)",
        "parameters" : [
         {
          "name" : "alloc",
          "type" : "Alloc",
          "storageClass" : [
           "scope"
          ]
         }
        ],
        "endline" : 231,
        "endchar" : 2
       }
      ]
     },
     {
      "kind" : "template",
      "comment" : " キャスト\n",
      "line" : 236,
      "char" : 7,
      "name" : "opCast",
      "parameters" : [
       {
        "name" : "T",
        "kind" : "type"
       }
      ],
      "constraint" : "is(T == bool)",
      "members" : [
       {
        "name" : "opCast",
        "kind" : "function",
        "line" : 236,
        "char" : 7,
        "type" : "const pure nothrow @nogc @safe bool()",
        "endline" : 240,
        "endchar" : 2
       }
      ]
     },
     {
      "name" : "addRef",
      "kind" : "function",
      "comment" : " 参照カウンタ加算\n",
      "line" : 245,
      "char" : 6,
      "type" : "pure @nogc @system int()",
      "endline" : 249,
      "endchar" : 2
     },
     {
      "name" : "release",
      "kind" : "function",
      "comment" : " 参照カウンタ減算と解放\n",
      "line" : 254,
      "char" : 6,
      "type" : "pure @system int()",
      "endline" : 269,
      "endchar" : 2
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " 参照カウントを持つを形成する(RefCounted専用)\n\n CountedImplを実装しており、isCountedData!Tでtrueを返す型です。\n ただし、メソッドはすべてモジュール内ローカルとなっており、アクセスは許されません。\n かならずRefCountedを通してアクセスしてください。\n",
    "line" : 280,
    "char" : 1,
    "name" : "CountedData",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "CountedData",
      "kind" : "struct",
      "line" : 280,
      "char" : 1,
      "members" : [
       {
        "name" : "CountedImpl!T",
        "kind" : "mixin",
        "line" : 283,
        "char" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 286,
    "char" : 19,
    "name" : "isRef",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isRef",
      "kind" : "variable",
      "line" : 286,
      "char" : 19,
      "storageClass" : [
       "enum"
      ],
      "deco" : "b",
      "init" : "is(T == class) || is(T == interface) || isPointer!T || isAssociativeArray!T"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " RefCountedにできるデータか検証する\n\n RefCountedに直接対応可能な型は以下の特徴を備えています。\n  - 参照型か、ポインタのサイズと同じサイズ\n  - releaseまたはRelease関数を備えていて、それらは整数を返す\n  - addRefまたはAddRef関数を備えていて、それらは整数を返す\n\n 上記に該当しない場合、RefCounted!Tとすると、自動的に上記特徴を備えたCountedData!Tが内部的に使用されます。\n\n Params:\n      T = 調べたい型\n See_Also:\n      $(LINK2 #.CountedData, CountedData)\n",
    "line" : 303,
    "char" : 1,
    "name" : "isCountedData",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isCountedData",
      "kind" : "variable",
      "line" : 311,
      "char" : 8,
      "storageClass" : [
       "enum"
      ],
      "init" : "true"
     }
    ]
   },
   {
    "name" : "__unittest_L320_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 320,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 341,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 341,
    "char" : 9,
    "name" : "uniqueMemberName",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "name",
      "kind" : "value",
      "deco" : "Aya",
      "defaultValue" : "\"_uniqueMemberName\""
     },
     {
      "name" : "num",
      "kind" : "value",
      "deco" : "k",
      "defaultValue" : "0"
     }
    ],
    "members" : [
     {
      "name" : "std.conv",
      "kind" : "import",
      "line" : 343,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "candidate",
      "kind" : "variable",
      "line" : 344,
      "char" : 14,
      "storageClass" : [
       "enum"
      ],
      "type" : "string",
      "init" : "num == 0 ? name : text(name, num)"
     },
     {
      "name" : "uniqueMemberName",
      "kind" : "variable",
      "line" : 347,
      "char" : 15,
      "storageClass" : [
       "enum"
      ],
      "type" : "string",
      "init" : "uniqueMemberName!(T, name, num + 1)"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 356,
    "char" : 9,
    "name" : "RefType",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "RefType",
      "kind" : "alias",
      "line" : 360,
      "char" : 3,
      "type" : "T"
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタのあるデータを管理する\n\n isCountedDataなデータの参照カウントをコピーの発生や寿命の終了で自動的に増減させる。\n\n Params:\n      T = isCountedDataなclass/interface/structのポインタ/size_tと同サイズのstruct、およびCountedDataのインスタンス\n See_Also:\n      $(LINK2 #.isCountedData, isCountedData)\n",
    "line" : 382,
    "char" : 1,
    "name" : "RefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "RefCounted",
      "kind" : "struct",
      "line" : 382,
      "char" : 1,
      "members" : [
       {
        "kind" : "template",
        "comment" : " 参照カウンタを保持してアタッチ＆加算する\n",
        "line" : 412,
        "char" : 2,
        "name" : "this",
        "parameters" : [
         {
          "name" : "U",
          "kind" : "type"
         }
        ],
        "constraint" : "is(U : RefType!T)",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 412,
          "char" : 2,
          "type" : "@trusted (U newRefData)",
          "parameters" : [
           {
            "name" : "newRefData",
            "type" : "U"
           }
          ],
          "endline" : 425,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "~this",
        "kind" : "destructor",
        "comment" : " 参照カウンタを減算し、カウンタが0になったら開放する\n",
        "line" : 445,
        "char" : 2,
        "storageClass" : [
         "@trusted"
        ],
        "endline" : 462,
        "endchar" : 2
       },
       {
        "kind" : "template",
        "comment" : " 参照カウンタを保持してアタッチ＆加算する\n",
        "line" : 467,
        "char" : 7,
        "name" : "opAssign",
        "parameters" : [
         {
          "name" : "U",
          "kind" : "type"
         }
        ],
        "constraint" : "is(U : RefType!T)",
        "members" : [
         {
          "name" : "opAssign",
          "kind" : "function",
          "line" : 467,
          "char" : 7,
          "type" : "void(U newRefData)",
          "parameters" : [
           {
            "name" : "newRefData",
            "type" : "U"
           }
          ],
          "endline" : 493,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " 参照外し\n",
        "line" : 498,
        "char" : 11,
        "name" : "opUnary",
        "parameters" : [
         {
          "name" : "op",
          "kind" : "value",
          "type" : "string"
         }
        ],
        "constraint" : "op == \"*\"",
        "members" : [
         {
          "name" : "opUnary",
          "kind" : "function",
          "line" : 498,
          "char" : 11,
          "storageClass" : [
           "auto"
          ],
          "type" : "ref ()",
          "endline" : 501,
          "endchar" : 2
         }
        ]
       }
      ]
     }
    ]
   },
   {
    "name" : "__unittest_L507_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 507,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 534,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタかどうか確認します\n",
    "line" : 534,
    "char" : 6,
    "name" : "isRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isRefCounted",
      "kind" : "variable",
      "line" : 534,
      "char" : 6,
      "storageClass" : [
       "enum"
      ],
      "init" : "isInstanceOf!(RefCounted, T)"
     }
    ]
   },
   {
    "name" : "__unittest_L536_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 536,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 545,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタの元データの型を得ます\n",
    "line" : 545,
    "char" : 1,
    "name" : "RefCountedTypeOf",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "isRefCounted!T",
    "members" : [
     {
      "name" : "RefCountedTypeOf",
      "kind" : "alias",
      "line" : 548,
      "char" : 2,
      "type" : "TemplateArgsOf!T[0]"
     }
    ]
   },
   {
    "name" : "__unittest_L551_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 551,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 559,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照が初期化されているか確認する\n",
    "line" : 559,
    "char" : 6,
    "name" : "isInitialized",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isInitialized",
      "kind" : "function",
      "line" : 559,
      "char" : 6,
      "type" : "bool(ref RefCounted!T dat)",
      "parameters" : [
       {
        "name" : "dat",
        "type" : "RefCounted!T",
        "storageClass" : [
         "in",
         "ref"
        ]
       }
      ],
      "endline" : 577,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 579,
    "char" : 6,
    "name" : "isEmpty",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isEmpty",
      "kind" : "function",
      "line" : 579,
      "char" : 6,
      "type" : "bool(ref RefCounted!T dat)",
      "parameters" : [
       {
        "name" : "dat",
        "type" : "RefCounted!T",
        "storageClass" : [
         "in",
         "ref"
        ]
       }
      ],
      "endline" : 582,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "isNull",
    "kind" : "alias",
    "comment" : "ditto\n",
    "line" : 584,
    "char" : 1,
    "originalType" : "isEmpty"
   },
   {
    "name" : "__unittest_L586_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 586,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 601,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタ加算せずにアタッチする\n",
    "line" : 601,
    "char" : 6,
    "name" : "attach",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "U",
      "kind" : "type"
     }
    ],
    "constraint" : "is(U : RefType!T)",
    "members" : [
     {
      "name" : "attach",
      "kind" : "function",
      "line" : 601,
      "char" : 6,
      "type" : "pure nothrow @property void(ref RefCounted!T rc, auto ref U newRefData)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "ref"
        ]
       },
       {
        "name" : "newRefData",
        "type" : "U",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 607,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L609_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 609,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 633,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照外し\n",
    "line" : 633,
    "char" : 29,
    "name" : "deref",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "deref",
      "kind" : "function",
      "line" : 633,
      "char" : 29,
      "type" : "pure nothrow ref inout(T)(ref inout RefCounted!T rc)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "inout",
         "ref"
        ]
       }
      ],
      "endline" : 636,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L638_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 638,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 650,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " ポインタを得る\n",
    "line" : 650,
    "char" : 26,
    "name" : "ptr",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "ptr",
      "kind" : "function",
      "line" : 650,
      "char" : 26,
      "type" : "pure nothrow inout(T)*(ref inout RefCounted!T rc)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "inout",
         "ref"
        ]
       }
      ],
      "endline" : 653,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L655_C7",
    "kind" : "function",
    "comment" : "\n",
    "line" : 655,
    "char" : 7,
    "storageClass" : [
     "@safe"
    ],
    "endline" : 668,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタを生成\n",
    "line" : 668,
    "char" : 6,
    "name" : "createRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "isRefCounted!T",
    "members" : [
     {
      "name" : "createRefCounted",
      "kind" : "function",
      "line" : 668,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "@trusted (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 672,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 674,
    "char" : 6,
    "name" : "createRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "is(T == class) && isCountedData!T",
    "members" : [
     {
      "name" : "createRefCounted",
      "kind" : "function",
      "line" : 674,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "@trusted (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 678,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 680,
    "char" : 6,
    "name" : "createRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "!isPointer!T && (is(T == struct) || is(T == union)) && isCountedData!T",
    "members" : [
     {
      "name" : "createRefCounted",
      "kind" : "function",
      "line" : 680,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "@trusted (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 684,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 686,
    "char" : 6,
    "name" : "createRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "isPointer!T && (is(PointerTarget!T == struct) || is(PointerTarget!T == union)) && isCountedData!T",
    "members" : [
     {
      "name" : "createRefCounted",
      "kind" : "function",
      "line" : 686,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "@trusted (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 691,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 693,
    "char" : 6,
    "name" : "createRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "!isCountedData!T",
    "members" : [
     {
      "name" : "createRefCounted",
      "kind" : "function",
      "line" : 693,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "@trusted (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 702,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 704,
    "char" : 6,
    "name" : "createRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "allocator",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "!isCountedData!T && isAllocator!allocator",
    "members" : [
     {
      "name" : "createRefCounted",
      "kind" : "function",
      "line" : 704,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "@trusted (auto ref Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args",
        "storageClass" : [
         "auto",
         "ref"
        ]
       }
      ],
      "endline" : 710,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L713_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 713,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 780,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 参照カウンタを追加せずにRefCountedを得る\n",
    "line" : 780,
    "char" : 14,
    "name" : "attachRefCounted",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "attachRefCounted",
      "kind" : "function",
      "line" : 780,
      "char" : 14,
      "type" : "RefCounted!T(RefType!T newRefData)",
      "parameters" : [
       {
        "name" : "newRefData",
        "type" : "RefType!T"
       }
      ],
      "endline" : 784,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 785,
    "char" : 22,
    "name" : "attachRefCountedImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "attachRefCountedImpl",
      "kind" : "function",
      "line" : 785,
      "char" : 22,
      "type" : "RefCounted!T(RefType!T newRefData)",
      "parameters" : [
       {
        "name" : "newRefData",
        "type" : "RefType!T"
       }
      ],
      "endline" : 789,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L799_C9",
    "kind" : "function",
    "line" : 799,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 825,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 825,
    "char" : 34,
    "name" : "getCountedData",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isCountedData!T || isInstanceOf!(CountedData, T)",
    "members" : [
     {
      "name" : "getCountedData",
      "kind" : "function",
      "line" : 825,
      "char" : 34,
      "type" : "pure nothrow @nogc @property ref @safe inout(CountedData!T)(ref inout RefCounted!T rc)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "inout",
         "ref"
        ]
       }
      ],
      "endline" : 830,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " バッファ領域へアクセス\n\n バッファ領域は、Tのインスタンスと拡張領域のメモリ領域全体を指す。\n\n Note:\n      release後に触れた場合、ダングリングポインタへのアクセスの可能性がある。\n      また、書き換えた場合、本来RefCountedで管理しているデータが損失する可能性がある。\n",
    "line" : 842,
    "char" : 16,
    "name" : "buffer",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isCountedData!T || isInstanceOf!(CountedData, T)",
    "members" : [
     {
      "name" : "buffer",
      "kind" : "function",
      "line" : 842,
      "char" : 16,
      "type" : "pure nothrow @nogc @property @system inout(ubyte)[](ref inout RefCounted!T rc)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "inout",
         "ref"
        ]
       }
      ],
      "endline" : 847,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L849_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 849,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 866,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 拡張データ領域へアクセス\n\n 初期化時にTのインスタンスより大きなバッファを与えることで、拡張データ領域を持つことができる。\n この関数は拡張データ領域へのアクセス手段を提供する。\n\n Note:\n      release後に触れた場合、ダングリングポインタへのアクセスの可能性がある。\n      また、書き換えた場合、本来RefCountedで管理しているデータが損失する可能性がある。\n",
    "line" : 866,
    "char" : 16,
    "name" : "extraBuffer",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isCountedData!T || isInstanceOf!(CountedData, T)",
    "members" : [
     {
      "name" : "extraBuffer",
      "kind" : "function",
      "line" : 866,
      "char" : 16,
      "type" : "pure nothrow @nogc @property @system inout(ubyte)[](ref inout RefCounted!T rc)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "inout",
         "ref"
        ]
       }
      ],
      "endline" : 872,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L874_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 874,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 884,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " カウント値を得る\n",
    "line" : 884,
    "char" : 5,
    "name" : "counter",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "constraint" : "!isCountedData!T || isInstanceOf!(CountedData, T)",
    "members" : [
     {
      "name" : "counter",
      "kind" : "function",
      "line" : 884,
      "char" : 5,
      "type" : "pure nothrow @nogc @property @safe int(ref RefCounted!T rc)",
      "parameters" : [
       {
        "name" : "rc",
        "type" : "RefCounted!T",
        "storageClass" : [
         "in",
         "ref"
        ]
       }
      ],
      "endline" : 890,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L892_C9",
    "kind" : "function",
    "comment" : "\n",
    "line" : 892,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 902,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.sync",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/sync.d",
  "comment" : " sync モジュール\n\n よく使う同期用クラスのインターフェースを利用可能。\n $(UL\n     $(LI Light )\n     $(LI NamedMutex )\n )\n\n Date: July 29, 2009\n Authors:\n     P.Knowledge, SHOO\n License:\n     NYSL ( http://www.kmonos.net/nysl/ )\n\n",
  "members" : [
   {
    "name" : "core.thread",
    "kind" : "import",
    "line" : 20,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "core.sync.mutex",
    "kind" : "import",
    "line" : 20,
    "char" : 21,
    "protection" : "private"
   },
   {
    "name" : "core.sync.condition",
    "kind" : "import",
    "line" : 20,
    "char" : 38,
    "protection" : "private"
   },
   {
    "name" : "core.sync.event",
    "kind" : "import",
    "line" : 20,
    "char" : 59,
    "protection" : "private"
   },
   {
    "name" : "core.atomic",
    "kind" : "import",
    "line" : 20,
    "char" : 76,
    "protection" : "private"
   },
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 25,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.parallelism",
    "kind" : "import",
    "line" : 25,
    "char" : 20,
    "protection" : "private"
   },
   {
    "name" : "voile.misc",
    "kind" : "import",
    "line" : 27,
    "char" : 15,
    "selective" : [
     "assumeUnshared",
     "assumeShared"
    ]
   },
   {
    "name" : "SyncEvent",
    "kind" : "class",
    "comment" : " 同期イベントクラス\n\n Windowsの CreateEvent や SetEvent のラッパー\n Windows以外の環境でも動作するが、最適な実装ではないかもしれない。\n Example:\n------------------------------------------------------------------------------\nSyncEvent[3] ev;\nint data;\nvoid run1()\n{\n\tdata = 1;\n\tev[0].signal = true;\n}\n\nvoid run2()\n{\n\tdata = 2;\n\tev[1].signal = true;\n}\n\nvoid run3()\n{\n\tdata = 3;\n\tev[2].signal = true;\n}\nvoid main()\n{\n\tev[] = [new Light, new Light, new Light];\n\tscope t = new ThreadGroup;\n\tdata = 0;\n\tt.create(&run1);\n\tev[0].wait;\n\tassert(data == 1);\n\tdata = 0;\n\tt.create(&run2);\n\tev[1].wait;\n\tassert(data == 2);\n\tdata = 0;\n\tt.create(&run3);\n\tev[2].wait;\n\tassert(data == 3);\n}\n------------------------------------------------------------------------------\n",
    "line" : 74,
    "char" : 1,
    "members" : [
     {
      "name" : "_condition",
      "kind" : "variable",
      "protection" : "private",
      "line" : 183,
      "char" : 21,
      "deco" : "C4core4sync9condition9Condition",
      "originalType" : "Condition",
      "offset" : 16
     },
     {
      "name" : "_mutex",
      "kind" : "variable",
      "protection" : "private",
      "line" : 184,
      "char" : 17,
      "deco" : "C4core4sync5mutex5Mutex",
      "originalType" : "Mutex",
      "offset" : 24
     },
     {
      "name" : "_signaled",
      "kind" : "variable",
      "protection" : "private",
      "line" : 185,
      "char" : 16,
      "deco" : "b",
      "offset" : 32
     },
     {
      "name" : "handle",
      "kind" : "function",
      "comment" : " ハンドルを得る\n\n ただしOS依存する処理をする場合にのみ使用すること\n",
      "line" : 192,
      "char" : 13,
      "deco" : "FNdZC4core4sync9condition9Condition",
      "endline" : 195,
      "endchar" : 3
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : " コンストラクタ\n\n Params: firstCondition = 初期状態\n",
      "line" : 201,
      "char" : 3,
      "deco" : "FbZC5voile4sync9SyncEvent",
      "originalType" : "(bool firstCondition = false)",
      "parameters" : [
       {
        "name" : "firstCondition",
        "deco" : "b",
        "default" : "false"
       }
      ],
      "endline" : 206,
      "endchar" : 3
     },
     {
      "name" : "signaled",
      "kind" : "function",
      "comment" : " シグナル状態を返す\n\n Returns:\n     trueならシグナル状態で、waitはすぐに制御を返す\n     falseなら非シグナル状態で、waitしたらシグナル状態になるか、時間が\n     過ぎるまで制御を返さない状態であることを示す。\n",
      "line" : 216,
      "char" : 8,
      "deco" : "FNdZb",
      "endline" : 222,
      "endchar" : 3
     },
     {
      "name" : "signaled",
      "kind" : "function",
      "comment" : " シグナル状態を設定する\n\n Params: cond=\n     trueならシグナル状態にし、waitしているスレッドの制御を返す。\n     falseなら非シグナル状態で、waitしたらシグナル状態になるまで制御を\n     返さない状態にする。\n",
      "line" : 232,
      "char" : 8,
      "deco" : "FNdbZv",
      "parameters" : [
       {
        "name" : "cond",
        "deco" : "b"
       }
      ],
      "endline" : 239,
      "endchar" : 3
     },
     {
      "name" : "wait",
      "kind" : "function",
      "comment" : " シグナル状態になるまで待つ\n\n conditionがtrueならシグナル状態であり、すぐに制御が返る。\n conditionがfalseなら非シグナル状態で、シグナル状態になるまで制御を\n 返さない。\n",
      "line" : 247,
      "char" : 8,
      "deco" : "xFZv",
      "endline" : 254,
      "endchar" : 3
     },
     {
      "name" : "wait",
      "kind" : "function",
      "comment" : " シグナル状態になるまで待つ\n\n conditionがtrueならシグナル状態であり、すぐに制御が返る。\n conditionがfalseなら非シグナル状態で、シグナル状態になるか、時間が\n 過ぎるまで制御を返さない。\n",
      "line" : 262,
      "char" : 8,
      "deco" : "FS4core4time8DurationZb",
      "parameters" : [
       {
        "name" : "dur",
        "deco" : "S4core4time8Duration"
       }
      ],
      "endline" : 270,
      "endchar" : 3
     }
    ]
   },
   {
    "name" : "__unittest_L274_C9",
    "kind" : "function",
    "line" : 274,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 312,
    "endchar" : 1
   },
   {
    "name" : "core.sys.posix.semaphore",
    "kind" : "import",
    "line" : 329,
    "char" : 17,
    "protection" : "private"
   },
   {
    "name" : "core.sys.posix.fcntl",
    "kind" : "import",
    "line" : 330,
    "char" : 17,
    "protection" : "private"
   },
   {
    "name" : "core.sys.posix.sys.stat",
    "kind" : "import",
    "line" : 331,
    "char" : 17,
    "protection" : "private",
    "selective" : [
     "S_IRWXU",
     "S_IRWXG",
     "S_IRWXO"
    ]
   },
   {
    "name" : "s777",
    "kind" : "variable",
    "protection" : "private",
    "line" : 332,
    "char" : 23,
    "storageClass" : [
     "static",
     "const"
    ],
    "deco" : "xi",
    "originalType" : "int",
    "init" : "511"
   },
   {
    "name" : "core.stdc.errno",
    "kind" : "import",
    "line" : 333,
    "char" : 17,
    "protection" : "private"
   },
   {
    "name" : "HANDLE",
    "kind" : "alias",
    "protection" : "private",
    "line" : 334,
    "char" : 10,
    "deco" : "PS4core3sys5posix9semaphore5sem_t"
   },
   {
    "name" : "NamedMutex",
    "kind" : "class",
    "comment" : " 名前付きミューテックス\n\n プロセス間で共有される名前付きミューテックスの作成を行う。\n",
    "line" : 351,
    "char" : 1,
    "interfaces" : [
     "object.Object.Monitor"
    ],
    "members" : [
     {
      "name" : "MonitorProxy",
      "kind" : "struct",
      "protection" : "private",
      "line" : 354,
      "char" : 9,
      "members" : [
       {
        "name" : "link",
        "kind" : "variable",
        "line" : 356,
        "char" : 18,
        "deco" : "C6object6Object7Monitor",
        "originalType" : "Object.Monitor",
        "offset" : 0
       }
      ]
     },
     {
      "name" : "m_Proxy",
      "kind" : "variable",
      "protection" : "private",
      "line" : 358,
      "char" : 15,
      "deco" : "S5voile4sync10NamedMutex12MonitorProxy",
      "offset" : 24
     },
     {
      "name" : "_handle",
      "kind" : "variable",
      "protection" : "private",
      "line" : 359,
      "char" : 9,
      "deco" : "PS4core3sys5posix9semaphore5sem_t",
      "originalType" : "HANDLE",
      "offset" : 32
     },
     {
      "name" : "m_Name",
      "kind" : "variable",
      "protection" : "private",
      "line" : 360,
      "char" : 9,
      "deco" : "Aya",
      "offset" : 40
     },
     {
      "name" : "m_SavedName",
      "kind" : "variable",
      "protection" : "private",
      "line" : 361,
      "char" : 25,
      "deco" : "Aya",
      "offset" : 56
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : " コンストラクタ\n\n Params:\n     aName=名前付きミューテックスの名前を指定する。名前は128文字以内。\n",
      "line" : 369,
      "char" : 2,
      "deco" : "FAyaZC5voile4sync10NamedMutex",
      "originalType" : "(string aName)",
      "parameters" : [
       {
        "name" : "aName",
        "deco" : "Aya"
       }
      ],
      "endline" : 439,
      "endchar" : 2
     },
     {
      "name" : "name",
      "kind" : "function",
      "comment" : " 名前を返す。\n",
      "line" : 444,
      "char" : 9,
      "deco" : "xFNaNbNdNiNfZAya",
      "endline" : 447,
      "endchar" : 2
     },
     {
      "name" : "~this",
      "kind" : "destructor",
      "comment" : " デストラクタ\n\n 名前付きミューテックスの削除を行う\n",
      "line" : 454,
      "char" : 2,
      "deco" : "FNbNiZv",
      "endline" : 466,
      "endchar" : 2
     },
     {
      "name" : "lock",
      "kind" : "function",
      "comment" : " ロックする\n\n ロックが成功するまで制御は返らない\n",
      "line" : 472,
      "char" : 7,
      "deco" : "FNbNiZv",
      "endline" : 482,
      "endchar" : 2,
      "overrides" : [
       "object.Object.Monitor.lock"
      ]
     },
     {
      "name" : "tryLock",
      "kind" : "function",
      "comment" : " ロックの試行\n\n 即座に制御が返る。\n trueが帰った場合ロックが成功している。\n falseなら別のMutexにロックされているため、ロックされなかった。\n",
      "line" : 490,
      "char" : 7,
      "deco" : "FNbNiZb",
      "endline" : 500,
      "endchar" : 2
     },
     {
      "name" : "unlock",
      "kind" : "function",
      "comment" : " ロック解除\n",
      "line" : 504,
      "char" : 7,
      "deco" : "FNbNiZv",
      "endline" : 514,
      "endchar" : 2,
      "overrides" : [
       "object.Object.Monitor.unlock"
      ]
     },
     {
      "name" : "__xdtor",
      "kind" : "alias"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 520,
    "char" : 9,
    "name" : "QueuedSemImpl",
    "parameters" : [],
    "members" : [
     {
      "name" : "core.sync.mutex",
      "kind" : "import",
      "line" : 523,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "core.sync.semaphore",
      "kind" : "import",
      "line" : 523,
      "char" : 26,
      "protection" : "private"
     },
     {
      "name" : "_sems",
      "kind" : "variable",
      "line" : 524,
      "char" : 15,
      "type" : "Semaphore[]"
     },
     {
      "name" : "_mutex",
      "kind" : "variable",
      "line" : 525,
      "char" : 15,
      "type" : "Mutex"
     },
     {
      "name" : "_count",
      "kind" : "variable",
      "line" : 526,
      "char" : 15,
      "type" : "size_t"
     },
     {
      "name" : "_lockImpl",
      "kind" : "function",
      "line" : 528,
      "char" : 7,
      "type" : "void()",
      "endline" : 546,
      "endchar" : 2
     },
     {
      "name" : "_tryLockImpl",
      "kind" : "function",
      "line" : 548,
      "char" : 7,
      "type" : "bool()",
      "endline" : 557,
      "endchar" : 2
     },
     {
      "name" : "_unlockImpl",
      "kind" : "function",
      "line" : 559,
      "char" : 7,
      "type" : "void()",
      "endline" : 573,
      "endchar" : 2
     },
     {
      "name" : "_initialize",
      "kind" : "function",
      "line" : 575,
      "char" : 7,
      "type" : "void(size_t cnt)",
      "parameters" : [
       {
        "name" : "cnt",
        "type" : "size_t"
       }
      ],
      "endline" : 579,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "QueuedMutex",
    "kind" : "class",
    "comment" : "\n",
    "line" : 585,
    "char" : 1,
    "interfaces" : [
     "object.Object.Monitor"
    ],
    "members" : [
     {
      "name" : "MonitorProxy",
      "kind" : "struct",
      "protection" : "private",
      "line" : 588,
      "char" : 2,
      "members" : [
       {
        "name" : "link",
        "kind" : "variable",
        "line" : 590,
        "char" : 18,
        "deco" : "C6object6Object7Monitor",
        "originalType" : "Object.Monitor",
        "offset" : 0
       }
      ]
     },
     {
      "name" : "_proxy",
      "kind" : "variable",
      "protection" : "private",
      "line" : 592,
      "char" : 15,
      "deco" : "S5voile4sync11QueuedMutex12MonitorProxy",
      "offset" : 24
     },
     {
      "name" : "QueuedSemImpl!()",
      "kind" : "mixin",
      "line" : 593,
      "char" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 596,
      "char" : 2,
      "deco" : "FZC5voile4sync11QueuedMutex",
      "originalType" : "()",
      "endline" : 601,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 603,
      "char" : 2,
      "deco" : "OFZOC5voile4sync11QueuedMutex",
      "originalType" : "shared ()",
      "endline" : 608,
      "endchar" : 2
     },
     {
      "name" : "lock",
      "kind" : "function",
      "comment" : "\n",
      "line" : 612,
      "char" : 7,
      "deco" : "FNeZv",
      "endline" : 615,
      "endchar" : 2,
      "overrides" : [
       "object.Object.Monitor.lock"
      ]
     },
     {
      "name" : "lock",
      "kind" : "function",
      "comment" : "\n",
      "line" : 618,
      "char" : 7,
      "deco" : "OFNeZv",
      "endline" : 621,
      "endchar" : 2
     },
     {
      "name" : "tryLock",
      "kind" : "function",
      "comment" : "\n",
      "line" : 624,
      "char" : 7,
      "deco" : "FNeZb",
      "endline" : 627,
      "endchar" : 2
     },
     {
      "name" : "tryLock",
      "kind" : "function",
      "comment" : "\n",
      "line" : 630,
      "char" : 7,
      "deco" : "OFNeZb",
      "endline" : 633,
      "endchar" : 2
     },
     {
      "name" : "unlock",
      "kind" : "function",
      "comment" : "\n",
      "line" : 636,
      "char" : 7,
      "deco" : "FNeZv",
      "endline" : 639,
      "endchar" : 2,
      "overrides" : [
       "object.Object.Monitor.unlock"
      ]
     },
     {
      "name" : "unlock",
      "kind" : "function",
      "comment" : "\n",
      "line" : 642,
      "char" : 7,
      "deco" : "OFNeZv",
      "endline" : 645,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "QueuedSemaphore",
    "kind" : "class",
    "comment" : "\n",
    "line" : 654,
    "char" : 1,
    "members" : [
     {
      "name" : "QueuedSemImpl!()",
      "kind" : "mixin",
      "line" : 657,
      "char" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 660,
      "char" : 2,
      "deco" : "FmZC5voile4sync15QueuedSemaphore",
      "originalType" : "(size_t count = 0)",
      "parameters" : [
       {
        "name" : "count",
        "deco" : "m",
        "default" : "0LU"
       }
      ],
      "endline" : 663,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 665,
      "char" : 2,
      "deco" : "OFmZOC5voile4sync15QueuedSemaphore",
      "originalType" : "shared (size_t count = 0)",
      "parameters" : [
       {
        "name" : "count",
        "deco" : "m",
        "default" : "0LU"
       }
      ],
      "endline" : 668,
      "endchar" : 2
     },
     {
      "name" : "wait",
      "kind" : "function",
      "comment" : "\n",
      "line" : 671,
      "char" : 7,
      "deco" : "FNeZv",
      "endline" : 674,
      "endchar" : 2
     },
     {
      "name" : "wait",
      "kind" : "function",
      "comment" : "\n",
      "line" : 677,
      "char" : 7,
      "deco" : "OFNeZv",
      "endline" : 680,
      "endchar" : 2
     },
     {
      "name" : "tryWait",
      "kind" : "function",
      "comment" : "\n",
      "line" : 683,
      "char" : 7,
      "deco" : "FNeZb",
      "endline" : 686,
      "endchar" : 2
     },
     {
      "name" : "tryWait",
      "kind" : "function",
      "comment" : "\n",
      "line" : 689,
      "char" : 7,
      "deco" : "OFNeZb",
      "endline" : 692,
      "endchar" : 2
     },
     {
      "name" : "notify",
      "kind" : "function",
      "comment" : "\n",
      "line" : 695,
      "char" : 7,
      "deco" : "FNeZv",
      "endline" : 698,
      "endchar" : 2
     },
     {
      "name" : "notify",
      "kind" : "function",
      "comment" : "\n",
      "line" : 701,
      "char" : 7,
      "deco" : "OFNeZv",
      "endline" : 704,
      "endchar" : 2
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "comment" : " タスクの例外処理\n",
    "line" : 712,
    "char" : 14,
    "name" : "_execTaskOnFailed",
    "parameters" : [
     {
      "name" : "Fut",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "_execTaskOnFailed",
      "kind" : "function",
      "line" : 712,
      "char" : 14,
      "type" : "void(Fut future, Exception e)",
      "parameters" : [
       {
        "name" : "future",
        "type" : "Fut"
       },
       {
        "name" : "e",
        "type" : "Exception"
       }
      ],
      "endline" : 724,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "comment" : " タスクの異常処理\n",
    "line" : 729,
    "char" : 14,
    "name" : "_execTaskOnFatal",
    "parameters" : [
     {
      "name" : "Fut",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "_execTaskOnFatal",
      "kind" : "function",
      "line" : 729,
      "char" : 14,
      "type" : "void(Fut future, Throwable e)",
      "parameters" : [
       {
        "name" : "future",
        "type" : "Fut"
       },
       {
        "name" : "e",
        "type" : "Throwable"
       }
      ],
      "endline" : 741,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "comment" : " タスクを生成する\n",
    "line" : 747,
    "char" : 14,
    "name" : "_makeTask",
    "parameters" : [
     {
      "name" : "func",
      "kind" : "alias"
     },
     {
      "name" : "Fut",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "_makeTask",
      "kind" : "function",
      "line" : 747,
      "char" : 14,
      "type" : "void(Fut future, Args args)",
      "parameters" : [
       {
        "name" : "future",
        "type" : "Fut"
       },
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 797,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 800,
    "char" : 14,
    "name" : "_dgRun",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "_dgRun",
      "kind" : "function",
      "line" : 800,
      "char" : 14,
      "storageClass" : [
       "auto"
      ],
      "type" : "(F dg, Args args)",
      "parameters" : [
       {
        "name" : "dg",
        "type" : "F"
       },
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 803,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 809,
    "char" : 7,
    "name" : "Future",
    "parameters" : [
     {
      "name" : "Ret",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "Future",
      "kind" : "class",
      "line" : 809,
      "char" : 7,
      "members" : [
       {
        "name" : "voile.handler",
        "kind" : "import",
        "line" : 811,
        "char" : 9,
        "protection" : "private"
       },
       {
        "name" : "TaskFunc",
        "kind" : "alias",
        "line" : 812,
        "char" : 2,
        "type" : "Ret delegate()"
       },
       {
        "name" : "TaskType",
        "kind" : "alias",
        "line" : 813,
        "char" : 2,
        "type" : "typeof(task(TaskFunc.init))"
       },
       {
        "name" : "ResultType",
        "kind" : "alias",
        "line" : 814,
        "char" : 2,
        "type" : "Ret"
       },
       {
        "name" : "CallbackType",
        "kind" : "alias",
        "line" : 817,
        "char" : 3,
        "type" : "void delegate()"
       },
       {
        "name" : "CallbackFailedType",
        "kind" : "alias",
        "line" : 823,
        "char" : 2,
        "type" : "void delegate(Exception) nothrow"
       },
       {
        "name" : "CallbackFatalType",
        "kind" : "alias",
        "line" : 824,
        "char" : 2,
        "type" : "void delegate(Throwable) nothrow"
       },
       {
        "name" : "FinishedHandler",
        "kind" : "alias",
        "line" : 825,
        "char" : 2,
        "type" : "Handler!CallbackType"
       },
       {
        "name" : "FailedHandler",
        "kind" : "alias",
        "line" : 826,
        "char" : 2,
        "type" : "Handler!CallbackFailedType"
       },
       {
        "name" : "FatalHandler",
        "kind" : "alias",
        "line" : 827,
        "char" : 2,
        "type" : "Handler!CallbackFatalType"
       },
       {
        "name" : "_onFinished",
        "kind" : "variable",
        "line" : 829,
        "char" : 18,
        "type" : "FinishedHandler"
       },
       {
        "name" : "_onFailed",
        "kind" : "variable",
        "line" : 830,
        "char" : 18,
        "type" : "FailedHandler"
       },
       {
        "name" : "_onFatal",
        "kind" : "variable",
        "line" : 831,
        "char" : 18,
        "type" : "FatalHandler"
       },
       {
        "name" : "_task",
        "kind" : "variable",
        "line" : 832,
        "char" : 18,
        "type" : "TaskType"
       },
       {
        "name" : "_taskPool",
        "kind" : "variable",
        "line" : 833,
        "char" : 18,
        "type" : "TaskPool"
       },
       {
        "name" : "_evStart",
        "kind" : "variable",
        "line" : 834,
        "char" : 18,
        "type" : "SyncEvent"
       },
       {
        "name" : "FinishedType",
        "kind" : "enum",
        "line" : 836,
        "char" : 2,
        "members" : [
         {
          "name" : "none",
          "kind" : "enum member",
          "line" : 838,
          "char" : 3
         },
         {
          "name" : "done",
          "kind" : "enum member",
          "line" : 838,
          "char" : 9
         },
         {
          "name" : "failed",
          "kind" : "enum member",
          "line" : 838,
          "char" : 15
         },
         {
          "name" : "fatal",
          "kind" : "enum member",
          "line" : 838,
          "char" : 23
         }
        ]
       },
       {
        "name" : "_type",
        "kind" : "variable",
        "line" : 841,
        "char" : 15,
        "type" : "FinishedType"
       },
       {
        "name" : "_resultException",
        "kind" : "variable",
        "line" : 844,
        "char" : 13,
        "type" : "Exception"
       },
       {
        "name" : "_resultFatal",
        "kind" : "variable",
        "line" : 845,
        "char" : 13,
        "type" : "Throwable"
       },
       {
        "name" : "_resultRaw",
        "kind" : "function",
        "line" : 850,
        "char" : 8,
        "type" : "inout @property void()",
        "endline" : 853,
        "endchar" : 3
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : " コンストラクタ\n",
        "line" : 867,
        "char" : 2,
        "type" : "()",
        "endline" : 870,
        "endchar" : 2
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : "ditto\n",
        "line" : 872,
        "char" : 2,
        "type" : "(SyncEvent evStart)",
        "parameters" : [
         {
          "name" : "evStart",
          "type" : "SyncEvent"
         }
        ],
        "endline" : 879,
        "endchar" : 2
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : "ditto\n",
        "line" : 881,
        "char" : 2,
        "type" : "(SyncEvent evStart, TaskPool pool)",
        "parameters" : [
         {
          "name" : "evStart",
          "type" : "SyncEvent"
         },
         {
          "name" : "pool",
          "type" : "TaskPool"
         }
        ],
        "endline" : 885,
        "endchar" : 2
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : "ditto\n",
        "line" : 889,
        "char" : 3,
        "type" : "(ResultType val, SyncEvent evStart = null)",
        "parameters" : [
         {
          "name" : "val",
          "type" : "ResultType"
         },
         {
          "name" : "evStart",
          "type" : "SyncEvent",
          "default" : "null"
         }
        ],
        "endline" : 901,
        "endchar" : 3
       },
       {
        "kind" : "template",
        "comment" : " 終了したら呼ばれる\n",
        "line" : 907,
        "char" : 7,
        "name" : "perform",
        "parameters" : [
         {
          "name" : "func",
          "kind" : "alias"
         },
         {
          "name" : "Args",
          "kind" : "tuple"
         }
        ],
        "constraint" : "is(typeof(func(args)) == ResultType)",
        "members" : [
         {
          "name" : "perform",
          "kind" : "function",
          "line" : 907,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(TaskPool pool, Args args)",
          "parameters" : [
           {
            "name" : "pool",
            "type" : "TaskPool"
           },
           {
            "name" : "args",
            "type" : "Args"
           }
          ],
          "endline" : 914,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 916,
        "char" : 7,
        "name" : "perform",
        "parameters" : [
         {
          "name" : "func",
          "kind" : "alias"
         },
         {
          "name" : "Args",
          "kind" : "tuple"
         }
        ],
        "constraint" : "is(typeof(func(args)) == ResultType)",
        "members" : [
         {
          "name" : "perform",
          "kind" : "function",
          "line" : 916,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(Args args)",
          "parameters" : [
           {
            "name" : "args",
            "type" : "Args"
           }
          ],
          "endline" : 929,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 931,
        "char" : 7,
        "name" : "perform",
        "parameters" : [
         {
          "name" : "F",
          "kind" : "type"
         },
         {
          "name" : "Args",
          "kind" : "tuple"
         }
        ],
        "constraint" : "is(typeof(dg(args)) == ResultType)",
        "members" : [
         {
          "name" : "perform",
          "kind" : "function",
          "line" : 931,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(TaskPool pool, F dg, Args args)",
          "parameters" : [
           {
            "name" : "pool",
            "type" : "TaskPool"
           },
           {
            "name" : "dg",
            "type" : "F"
           },
           {
            "name" : "args",
            "type" : "Args"
           }
          ],
          "endline" : 938,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 940,
        "char" : 7,
        "name" : "perform",
        "parameters" : [
         {
          "name" : "F",
          "kind" : "type"
         },
         {
          "name" : "Args",
          "kind" : "tuple"
         }
        ],
        "constraint" : "is(typeof(dg(args)) == ResultType)",
        "members" : [
         {
          "name" : "perform",
          "kind" : "function",
          "line" : 940,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(F dg, Args args)",
          "parameters" : [
           {
            "name" : "dg",
            "type" : "F"
           },
           {
            "name" : "args",
            "type" : "Args"
           }
          ],
          "endline" : 953,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 955,
        "char" : 15,
        "name" : "_addListenerFailedWithNewFeature",
        "parameters" : [
         {
          "name" : "Ret2",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "_addListenerFailedWithNewFeature",
          "kind" : "function",
          "line" : 955,
          "char" : 15,
          "type" : "void(CallbackFailedType callbackFailed, Future!Ret2 future)",
          "parameters" : [
           {
            "name" : "callbackFailed",
            "type" : "CallbackFailedType"
           },
           {
            "name" : "future",
            "type" : "Future!Ret2"
           }
          ],
          "endline" : 969,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "line" : 970,
        "char" : 15,
        "name" : "_addListenerFatalWithNewFeature",
        "parameters" : [
         {
          "name" : "Ret2",
          "kind" : "type"
         }
        ],
        "members" : [
         {
          "name" : "_addListenerFatalWithNewFeature",
          "kind" : "function",
          "line" : 970,
          "char" : 15,
          "type" : "void(CallbackFatalType callbackFatal, Future!Ret2 future)",
          "parameters" : [
           {
            "name" : "callbackFatal",
            "type" : "CallbackFatalType"
           },
           {
            "name" : "future",
            "type" : "Future!Ret2"
           }
          ],
          "endline" : 983,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " チェーン\n",
        "line" : 988,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "Ret2",
          "kind" : "type"
         }
        ],
        "constraint" : "!is(Ret == void) && is(typeof(callbackFinished(_resultRaw)))",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 988,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(TaskPool pool, Ret2 delegate(ResultType) callbackFinished, void delegate(Exception e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "pool",
            "type" : "TaskPool"
           },
           {
            "name" : "callbackFinished",
            "type" : "Ret2 delegate(ResultType)"
           },
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Exception e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 999,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1001,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "Ret2",
          "kind" : "type"
         }
        ],
        "constraint" : "!is(Ret == void) && is(typeof(callbackFinished(_resultRaw)))",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1001,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(Ret2 delegate(ResultType) callbackFinished, void delegate(Exception e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "callbackFinished",
            "type" : "Ret2 delegate(ResultType)"
           },
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Exception e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1012,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1014,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "func",
          "kind" : "alias"
         },
         {
          "name" : "Ex",
          "kind" : "type",
          "default" : "Exception"
         }
        ],
        "constraint" : "!is(Ret == void) && is(typeof(func(_resultRaw))) && is(Ex == Exception)",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1014,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(TaskPool pool, void delegate(Ex e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "pool",
            "type" : "TaskPool"
           },
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Ex e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1024,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1026,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "func",
          "kind" : "alias"
         },
         {
          "name" : "Ex",
          "kind" : "type",
          "default" : "Exception"
         }
        ],
        "constraint" : "!is(Ret == void) && is(typeof(func(_resultRaw))) && is(Ex == Exception)",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1026,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(void delegate(Ex e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Ex e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1036,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1038,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "Ret2",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Ret == void) && is(typeof(callbackFinished()))",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1038,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(TaskPool pool, Ret2 delegate() callbackFinished, void delegate(Exception e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "pool",
            "type" : "TaskPool"
           },
           {
            "name" : "callbackFinished",
            "type" : "Ret2 delegate()"
           },
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Exception e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1049,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1051,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "Ret2",
          "kind" : "type"
         }
        ],
        "constraint" : "is(Ret == void) && is(typeof(callbackFinished()))",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1051,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(Ret2 delegate() callbackFinished, void delegate(Exception e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "callbackFinished",
            "type" : "Ret2 delegate()"
           },
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Exception e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1062,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1064,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "func",
          "kind" : "alias"
         },
         {
          "name" : "Ex",
          "kind" : "type",
          "default" : "Exception"
         }
        ],
        "constraint" : "is(Ret == void) && is(typeof(func())) && is(Ex == Exception)",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1064,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(TaskPool pool, void delegate(Ex e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "pool",
            "type" : "TaskPool"
           },
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Ex e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1074,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : "ditto\n",
        "line" : 1076,
        "char" : 7,
        "name" : "then",
        "parameters" : [
         {
          "name" : "func",
          "kind" : "alias"
         },
         {
          "name" : "Ex",
          "kind" : "type",
          "default" : "Exception"
         }
        ],
        "constraint" : "is(Ret == void) && is(typeof(func())) && is(Ex == Exception)",
        "members" : [
         {
          "name" : "then",
          "kind" : "function",
          "line" : 1076,
          "char" : 7,
          "storageClass" : [
           "auto"
          ],
          "type" : "(void delegate(Ex e) nothrow callbackFailed = null, void delegate(Throwable e) nothrow callbackFatal = null)",
          "parameters" : [
           {
            "name" : "callbackFailed",
            "type" : "void delegate(Ex e) nothrow",
            "default" : "null"
           },
           {
            "name" : "callbackFatal",
            "type" : "void delegate(Throwable e) nothrow",
            "default" : "null"
           }
          ],
          "endline" : 1086,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "addListenerFinished",
        "kind" : "function",
        "comment" : " 終了したら呼ばれるコールバックをハンドラに登録\n\n 指定されたコールバックは並列処理が正常終了したときにのみ呼び出される。\n 並列処理がまだ終了していない場合には並列処理を行っていたスレッドでコールバックが呼び出されるが、\n すでに並列処理が終了していた場合には現在のスレッドで即座にコールバックが呼び出される。\n すでに終了していて、かつコールバック内で例外が発生した場合には、Failed, Fatalのハンドラが呼び出され、\n Futureの状態も各々の状態へと変化する。\n\n Params:\n     dg = 設定するコールバックを指定する。nullを指定したらハンドラに登録されたすべてのコールバックをクリアする。\n Returns:\n     登録したハンドラのIDを返す。登録されなかった場合はFinishedHandler.HandlerProcId.initが返る\n",
        "line" : 1101,
        "char" : 32,
        "type" : "FinishedHandler.HandlerProcId(CallbackType dg)",
        "parameters" : [
         {
          "name" : "dg",
          "type" : "CallbackType"
         }
        ],
        "endline" : 1159,
        "endchar" : 2
       },
       {
        "name" : "addListenerFailed",
        "kind" : "function",
        "comment" : " 例外が発生したら呼ばれる\n\n Params:\n     dg = 設定するコールバックを指定する。nullを指定したらすべてのコールバックをクリアする。\n Returns:\n     登録したハンドラのIDを返す。登録されなかった場合はFailedHandler.HandlerProcId.initが返る\n",
        "line" : 1169,
        "char" : 30,
        "type" : "FailedHandler.HandlerProcId(CallbackFailedType dg)",
        "parameters" : [
         {
          "name" : "dg",
          "type" : "CallbackFailedType"
         }
        ],
        "endline" : 1196,
        "endchar" : 2
       },
       {
        "name" : "addListenerFatal",
        "kind" : "function",
        "comment" : " 致命的エラーが発生したら呼ばれる\n\n Params:\n     dg = 設定するコールバックを指定する。nullを指定したらすべてのコールバックをクリアする。\n Returns:\n     登録したハンドラのIDを返す。登録されなかった場合はFatalHandler.HandlerProcId.initが返る\n",
        "line" : 1207,
        "char" : 29,
        "type" : "FatalHandler.HandlerProcId(CallbackFatalType dg)",
        "parameters" : [
         {
          "name" : "dg",
          "type" : "CallbackFatalType"
         }
        ],
        "endline" : 1234,
        "endchar" : 2
       },
       {
        "name" : "removeListenerFinished",
        "kind" : "function",
        "comment" : " 登録していたハンドラを削除する\n",
        "line" : 1239,
        "char" : 7,
        "type" : "void(FinishedHandler.HandlerProcId id)",
        "parameters" : [
         {
          "name" : "id",
          "type" : "FinishedHandler.HandlerProcId"
         }
        ],
        "endline" : 1245,
        "endchar" : 2
       },
       {
        "name" : "removeListenerFailed",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1247,
        "char" : 7,
        "type" : "void(FailedHandler.HandlerProcId id)",
        "parameters" : [
         {
          "name" : "id",
          "type" : "FailedHandler.HandlerProcId"
         }
        ],
        "endline" : 1253,
        "endchar" : 2
       },
       {
        "name" : "removeListenerFatal",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1255,
        "char" : 7,
        "type" : "void(FatalHandler.HandlerProcId id)",
        "parameters" : [
         {
          "name" : "id",
          "type" : "FatalHandler.HandlerProcId"
         }
        ],
        "endline" : 1261,
        "endchar" : 2
       },
       {
        "name" : "done",
        "kind" : "function",
        "comment" : " 終了しているか(例外発生含む)\n",
        "line" : 1266,
        "char" : 7,
        "type" : "const bool()",
        "endline" : 1269,
        "endchar" : 2
       },
       {
        "name" : "join",
        "kind" : "function",
        "comment" : " 終了するまで待機する\n",
        "line" : 1274,
        "char" : 7,
        "type" : "const void(bool rethrow = false)",
        "parameters" : [
         {
          "name" : "rethrow",
          "deco" : "b",
          "default" : "false"
         }
        ],
        "endline" : 1295,
        "endchar" : 2
       },
       {
        "name" : "yieldForce",
        "kind" : "function",
        "comment" : " 結果を受け取る\n",
        "line" : 1301,
        "char" : 11,
        "storageClass" : [
         "auto"
        ],
        "type" : "inout ref ()",
        "endline" : 1319,
        "endchar" : 2
       },
       {
        "name" : "workForce",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1322,
        "char" : 11,
        "storageClass" : [
         "auto"
        ],
        "type" : "inout ref ()",
        "endline" : 1340,
        "endchar" : 2
       },
       {
        "name" : "spinForce",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1343,
        "char" : 11,
        "storageClass" : [
         "auto"
        ],
        "type" : "inout ref ()",
        "endline" : 1361,
        "endchar" : 2
       },
       {
        "name" : "result",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1366,
        "char" : 25,
        "type" : "inout @property ref inout(ResultType)()",
        "endline" : 1371,
        "endchar" : 3
       }
      ]
     }
    ]
   },
   {
    "name" : "__unittest_L1377_C9",
    "kind" : "function",
    "comment" : "ditto\n",
    "line" : 1377,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1408,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1408_C9",
    "kind" : "function",
    "comment" : "ditto\n",
    "line" : 1408,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1430,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1430_C9",
    "kind" : "function",
    "comment" : "ditto\n",
    "line" : 1430,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1455,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1455_C9",
    "kind" : "function",
    "comment" : "ditto\n",
    "line" : 1455,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1497,
    "endchar" : 1
   },
   {
    "name" : "async",
    "kind" : "function",
    "comment" : " 非同期処理の開始\n",
    "line" : 1497,
    "char" : 6,
    "storageClass" : [
     "auto"
    ],
    "deco" : "FNaNbNfZC5voile4sync__T6FutureTvZQk",
    "originalType" : "()",
    "endline" : 1502,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1503_C9",
    "kind" : "function",
    "line" : 1503,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1511,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1511_C9",
    "kind" : "function",
    "line" : 1511,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1522,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1522,
    "char" : 6,
    "name" : "async",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "isCallable!F",
    "members" : [
     {
      "name" : "async",
      "kind" : "function",
      "line" : 1522,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(TaskPool pool, F dg, Args args)",
      "parameters" : [
       {
        "name" : "pool",
        "type" : "TaskPool"
       },
       {
        "name" : "dg",
        "type" : "F"
       },
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 1530,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1531_C9",
    "kind" : "function",
    "line" : 1531,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1538,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1538,
    "char" : 6,
    "name" : "async",
    "parameters" : [
     {
      "name" : "F",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "isCallable!F",
    "members" : [
     {
      "name" : "async",
      "kind" : "function",
      "line" : 1538,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(F dg, Args args)",
      "parameters" : [
       {
        "name" : "dg",
        "type" : "F"
       },
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 1545,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1546_C9",
    "kind" : "function",
    "line" : 1546,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1552,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1552,
    "char" : 6,
    "name" : "async",
    "parameters" : [
     {
      "name" : "func",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "is(typeof(func(args)))",
    "members" : [
     {
      "name" : "async",
      "kind" : "function",
      "line" : 1552,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(TaskPool pool, Args args)",
      "parameters" : [
       {
        "name" : "pool",
        "type" : "TaskPool"
       },
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 1560,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1561_C9",
    "kind" : "function",
    "line" : 1561,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1567,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : "ditto\n",
    "line" : 1567,
    "char" : 6,
    "name" : "async",
    "parameters" : [
     {
      "name" : "func",
      "kind" : "alias"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "!is(Args[0] == TaskPool) && is(typeof(func(args)))",
    "members" : [
     {
      "name" : "async",
      "kind" : "function",
      "line" : 1567,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 1574,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1575_C9",
    "kind" : "function",
    "line" : 1575,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1588,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 管理された共有資源\n\n\n",
    "line" : 1588,
    "char" : 1,
    "name" : "ManagedShared",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "ManagedShared",
      "kind" : "class",
      "line" : 1588,
      "char" : 1,
      "members" : [
       {
        "name" : "std.exception",
        "kind" : "import",
        "line" : 1591,
        "char" : 9,
        "protection" : "private"
       },
       {
        "name" : "MonitorProxy",
        "kind" : "struct",
        "line" : 1592,
        "char" : 9,
        "members" : [
         {
          "name" : "link",
          "kind" : "variable",
          "line" : 1594,
          "char" : 18,
          "type" : "Object.Monitor"
         }
        ]
       },
       {
        "name" : "_proxy",
        "kind" : "variable",
        "line" : 1596,
        "char" : 15,
        "type" : "MonitorProxy"
       },
       {
        "name" : "_mutex",
        "kind" : "variable",
        "line" : 1597,
        "char" : 15,
        "type" : "Mutex"
       },
       {
        "name" : "_locked",
        "kind" : "variable",
        "line" : 1598,
        "char" : 15,
        "type" : "size_t"
       },
       {
        "name" : "_data",
        "kind" : "variable",
        "line" : 1599,
        "char" : 15,
        "type" : "T"
       },
       {
        "name" : "_initData",
        "kind" : "function",
        "line" : 1600,
        "char" : 7,
        "type" : "void(bool initLocked)",
        "parameters" : [
         {
          "name" : "initLocked",
          "deco" : "b"
         }
        ],
        "endline" : 1607,
        "endchar" : 2
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : " コンストラクタ\n\n sharedのコンストラクタを呼んだ場合の初期状態は共有資源(unlockされた状態)\n 非sharedのコンストラクタを呼んだ場合の初期状態は非共有資源(lockされた状態)\n",
        "line" : 1616,
        "char" : 2,
        "type" : "pure @trusted ()",
        "endline" : 1620,
        "endchar" : 2
       },
       {
        "name" : "this",
        "kind" : "constructor",
        "comment" : "ditto\n",
        "line" : 1623,
        "char" : 2,
        "type" : "shared pure @trusted ()",
        "endline" : 1626,
        "endchar" : 2
       },
       {
        "name" : "mutex",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1632,
        "char" : 15,
        "type" : "inout pure nothrow @nogc @property inout(Mutex)()",
        "endline" : 1635,
        "endchar" : 2
       },
       {
        "name" : "mutex",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1641,
        "char" : 23,
        "type" : "shared inout pure nothrow @nogc @property shared(inout(Mutex))()",
        "endline" : 1644,
        "endchar" : 2
       },
       {
        "name" : "locked",
        "kind" : "function",
        "comment" : " ロックされたデータを得る\n\n この戻り値が破棄されるときにRAIIで自動的にロックが解除される。\n また、戻り値はロックされた共有資源へ、非共有資源としてアクセス可能な参照として使用できる。\n",
        "line" : 1653,
        "char" : 7,
        "storageClass" : [
         "auto"
        ],
        "type" : "@property ()",
        "endline" : 1672,
        "endchar" : 2
       },
       {
        "name" : "locked",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1674,
        "char" : 7,
        "storageClass" : [
         "auto"
        ],
        "type" : "shared inout @property ()",
        "endline" : 1677,
        "endchar" : 2
       },
       {
        "name" : "tryLock",
        "kind" : "function",
        "comment" : " ロックを試行する。\n\n Returns:\n     すでにロックしているならtrue\n     ロックされていなければロックしてtrue\n     別のスレッドにロックされていてロックできなければfalse\n",
        "line" : 1688,
        "char" : 7,
        "type" : "bool()",
        "endline" : 1695,
        "endchar" : 2
       },
       {
        "name" : "tryLock",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1697,
        "char" : 7,
        "type" : "shared bool()",
        "endline" : 1700,
        "endchar" : 2
       },
       {
        "name" : "lock",
        "kind" : "function",
        "comment" : " ロックする。\n",
        "line" : 1706,
        "char" : 7,
        "type" : "void()",
        "endline" : 1710,
        "endchar" : 2
       },
       {
        "name" : "lock",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1712,
        "char" : 7,
        "type" : "shared void()",
        "endline" : 1715,
        "endchar" : 2
       },
       {
        "name" : "unlock",
        "kind" : "function",
        "comment" : " ロック解除する。\n",
        "line" : 1721,
        "char" : 7,
        "type" : "void()",
        "endline" : 1725,
        "endchar" : 2
       },
       {
        "name" : "unlock",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1727,
        "char" : 7,
        "type" : "shared void()",
        "endline" : 1730,
        "endchar" : 2
       },
       {
        "name" : "asUnshared",
        "kind" : "function",
        "comment" : " 非共有資源としてアクセスする\n",
        "line" : 1736,
        "char" : 8,
        "type" : "inout @property ref T()",
        "endline" : 1740,
        "endchar" : 2
       },
       {
        "name" : "asUnshared",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1742,
        "char" : 8,
        "type" : "shared inout @property ref T()",
        "endline" : 1746,
        "endchar" : 2
       },
       {
        "name" : "asShared",
        "kind" : "function",
        "comment" : " 共有資源としてアクセスする\n",
        "line" : 1752,
        "char" : 16,
        "type" : "inout @property ref shared(T)()",
        "endline" : 1755,
        "endchar" : 2
       },
       {
        "name" : "asShared",
        "kind" : "function",
        "comment" : "ditto\n",
        "line" : 1757,
        "char" : 16,
        "type" : "shared inout @property ref shared(T)()",
        "endline" : 1760,
        "endchar" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 1767,
    "char" : 17,
    "name" : "managedShared",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "members" : [
     {
      "name" : "managedShared",
      "kind" : "function",
      "line" : 1767,
      "char" : 17,
      "type" : "ManagedShared!T(Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 1779,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L1781_C9",
    "kind" : "function",
    "line" : 1781,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1822,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L1822_C9",
    "kind" : "function",
    "line" : 1822,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 1870,
    "endchar" : 1
   },
   {
    "name" : "TaskData",
    "kind" : "class",
    "comment" : "\n",
    "line" : 1870,
    "char" : 1,
    "members" : [
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 1872,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.uuid",
      "kind" : "import",
      "line" : 1873,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "type",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "タスクの種類\n",
      "line" : 1876,
      "char" : 35,
      "storageClass" : [
       "immutable"
      ],
      "deco" : "yAa",
      "originalType" : "string",
      "offset" : 16
     },
     {
      "name" : "onCall",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "タスクの本体\n",
      "line" : 1878,
      "char" : 35,
      "storageClass" : [
       "immutable"
      ],
      "deco" : "yDOFZv",
      "originalType" : "void delegate() shared",
      "offset" : 32
     },
     {
      "name" : "timCreate",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "Queueに追加された時刻\n",
      "line" : 1880,
      "char" : 35,
      "storageClass" : [
       "shared"
      ],
      "deco" : "OS3std8datetime7systime7SysTime",
      "originalType" : "SysTime",
      "offset" : 48
     },
     {
      "name" : "timReady",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "Poolに追加された時刻\n",
      "line" : 1882,
      "char" : 35,
      "storageClass" : [
       "shared"
      ],
      "deco" : "OS3std8datetime7systime7SysTime",
      "originalType" : "SysTime",
      "init" : "SysTime(0L, Rebindable(null, ))",
      "offset" : 64
     },
     {
      "name" : "timStart",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "実行開始した時刻\n",
      "line" : 1884,
      "char" : 35,
      "storageClass" : [
       "shared"
      ],
      "deco" : "OS3std8datetime7systime7SysTime",
      "originalType" : "SysTime",
      "init" : "SysTime(0L, Rebindable(null, ))",
      "offset" : 80
     },
     {
      "name" : "timEnd",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "実行終了した時刻\n",
      "line" : 1886,
      "char" : 35,
      "storageClass" : [
       "shared"
      ],
      "deco" : "OS3std8datetime7systime7SysTime",
      "originalType" : "SysTime",
      "init" : "SysTime(0L, Rebindable(null, ))",
      "offset" : 96
     },
     {
      "name" : "uuid",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "一意なID\n",
      "line" : 1888,
      "char" : 35,
      "storageClass" : [
       "immutable"
      ],
      "deco" : "yS3std4uuid4UUID",
      "originalType" : "UUID",
      "offset" : 112
     },
     {
      "name" : "State",
      "kind" : "enum",
      "protection" : "protected",
      "comment" : "状態\n",
      "line" : 1890,
      "char" : 2,
      "baseDeco" : "i",
      "members" : [
       {
        "name" : "waiting",
        "kind" : "enum member",
        "value" : "0",
        "comment" : "初期状態で、タスクプールに追加される前\n",
        "line" : 1893,
        "char" : 3
       },
       {
        "name" : "ready",
        "kind" : "enum member",
        "value" : "1",
        "comment" : "タスクプールに追加された状態\n",
        "line" : 1895,
        "char" : 3
       },
       {
        "name" : "running",
        "kind" : "enum member",
        "value" : "2",
        "comment" : "実行中の状態\n",
        "line" : 1897,
        "char" : 3
       },
       {
        "name" : "finished",
        "kind" : "enum member",
        "value" : "3",
        "comment" : "実行が終了した状態\n",
        "line" : 1899,
        "char" : 3
       },
       {
        "name" : "failed",
        "kind" : "enum member",
        "value" : "4",
        "comment" : "実行の結果、異常終了した状態\n",
        "line" : 1901,
        "char" : 3
       },
       {
        "name" : "dropped",
        "kind" : "enum member",
        "value" : "5",
        "comment" : "実行されずにドロップされた状態\n",
        "line" : 1903,
        "char" : 3
       }
      ]
     },
     {
      "name" : "state",
      "kind" : "variable",
      "protection" : "protected",
      "comment" : "\n",
      "line" : 1906,
      "char" : 8,
      "deco" : "E5voile4sync8TaskData5State",
      "init" : "cast(State)0",
      "offset" : 128
     },
     {
      "name" : "onReady",
      "kind" : "function",
      "comment" : "Poolに追加されたタイミングでコールバック\n",
      "line" : 1909,
      "char" : 7,
      "deco" : "OFZv",
      "endline" : 1909,
      "endchar" : 27
     },
     {
      "name" : "onStart",
      "kind" : "function",
      "comment" : "実行開始したタイミングでコールバック\n",
      "line" : 1911,
      "char" : 7,
      "deco" : "OFZv",
      "endline" : 1911,
      "endchar" : 27
     },
     {
      "name" : "onEnd",
      "kind" : "function",
      "comment" : "実行終了したタイミングでコールバック\n",
      "line" : 1913,
      "char" : 7,
      "deco" : "OFZv",
      "endline" : 1913,
      "endchar" : 25
     },
     {
      "name" : "onFailed",
      "kind" : "function",
      "comment" : "実行失敗したタイミングでコールバック\n",
      "line" : 1915,
      "char" : 7,
      "deco" : "OFC6object9ThrowableZv",
      "originalType" : "shared void(Throwable)",
      "parameters" : [
       {
        "name" : "_param_0",
        "deco" : "C6object9Throwable"
       }
      ],
      "endline" : 1915,
      "endchar" : 37
     },
     {
      "name" : "onDropped",
      "kind" : "function",
      "comment" : "実行されずにドロップしたタイミングでコールバック\n",
      "line" : 1917,
      "char" : 7,
      "deco" : "OFZv",
      "endline" : 1917,
      "endchar" : 29
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 1920,
      "char" : 2,
      "deco" : "FAyaDOFZvS3std4uuid4UUIDZC5voile4sync8TaskData",
      "originalType" : "(string ty, void delegate() shared callback, UUID id = randomUUID())",
      "parameters" : [
       {
        "name" : "ty",
        "deco" : "Aya"
       },
       {
        "name" : "callback",
        "deco" : "DOFZv"
       },
       {
        "name" : "id",
        "deco" : "S3std4uuid4UUID",
        "default" : "randomUUID()"
       }
      ],
      "endline" : 1926,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "MultiTaskQueue",
    "kind" : "class",
    "comment" : "\n",
    "line" : 1932,
    "char" : 1,
    "members" : [
     {
      "name" : "core.atomic",
      "kind" : "import",
      "line" : 1935,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "core.sync.mutex",
      "kind" : "import",
      "line" : 1936,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "core.thread",
      "kind" : "import",
      "line" : 1937,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.concurrency",
      "kind" : "import",
      "line" : 1938,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.parallelism",
      "kind" : "import",
      "line" : 1939,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.uuid",
      "kind" : "import",
      "line" : 1940,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "std.datetime",
      "kind" : "import",
      "line" : 1941,
      "char" : 9,
      "protection" : "private"
     },
     {
      "name" : "_pool",
      "kind" : "variable",
      "protection" : "private",
      "line" : 1943,
      "char" : 11,
      "deco" : "C3std11parallelism8TaskPool",
      "originalType" : "TaskPool",
      "offset" : 16
     },
     {
      "name" : "_finishPool",
      "kind" : "variable",
      "protection" : "private",
      "line" : 1944,
      "char" : 18,
      "deco" : "DFZv",
      "offset" : 24
     },
     {
      "name" : "TaskQueue",
      "kind" : "struct",
      "protection" : "private",
      "line" : 1946,
      "char" : 2,
      "members" : [
       {
        "name" : "_tasks",
        "kind" : "variable",
        "protection" : "private",
        "line" : 1949,
        "char" : 22,
        "deco" : "HAyaAC5voile4sync8TaskData",
        "offset" : 0
       },
       {
        "name" : "State",
        "kind" : "enum",
        "protection" : "private",
        "line" : 1950,
        "char" : 3,
        "baseDeco" : "i",
        "members" : [
         {
          "name" : "ready",
          "kind" : "enum member",
          "value" : "0",
          "line" : 1952,
          "char" : 4
         },
         {
          "name" : "finish",
          "kind" : "enum member",
          "value" : "1",
          "line" : 1952,
          "char" : 11
         }
        ]
       },
       {
        "name" : "_state",
        "kind" : "variable",
        "protection" : "private",
        "line" : 1954,
        "char" : 9,
        "deco" : "E5voile4sync14MultiTaskQueue9TaskQueue5State",
        "init" : "cast(State)0",
        "offset" : 8
       },
       {
        "name" : "pushBack",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1957,
        "char" : 8,
        "deco" : "FC5voile4sync8TaskDataDFZvZv",
        "originalType" : "void(TaskData task, void delegate() onCreated = null)",
        "parameters" : [
         {
          "name" : "task",
          "deco" : "C5voile4sync8TaskData"
         },
         {
          "name" : "onCreated",
          "deco" : "DFZv",
          "default" : "cast(void delegate())null"
         }
        ],
        "endline" : 1972,
        "endchar" : 3
       },
       {
        "name" : "removeAt",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1974,
        "char" : 12,
        "deco" : "FAyaS3std4uuid4UUIDZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         },
         {
          "name" : "uuid",
          "deco" : "S3std4uuid4UUID"
         }
        ],
        "endline" : 1997,
        "endchar" : 3
       },
       {
        "name" : "removeFront",
        "kind" : "function",
        "comment" : "\n",
        "line" : 1999,
        "char" : 12,
        "deco" : "FAyaZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         }
        ],
        "endline" : 2016,
        "endchar" : 3
       },
       {
        "name" : "removeFrontAndGetNext",
        "kind" : "function",
        "comment" : "\n",
        "line" : 2018,
        "char" : 12,
        "deco" : "FAyaJC5voile4sync8TaskDataZQw",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         },
         {
          "name" : "next",
          "deco" : "C5voile4sync8TaskData",
          "storageClass" : [
           "out"
          ]
         }
        ],
        "endline" : 2037,
        "endchar" : 3
       },
       {
        "name" : "refFront",
        "kind" : "function",
        "comment" : "\n",
        "line" : 2039,
        "char" : 12,
        "deco" : "FAyaZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         }
        ],
        "endline" : 2043,
        "endchar" : 3
       },
       {
        "name" : "getFront",
        "kind" : "function",
        "comment" : "\n",
        "line" : 2045,
        "char" : 12,
        "deco" : "FAyaZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         }
        ],
        "endline" : 2051,
        "endchar" : 3
       },
       {
        "name" : "getAt",
        "kind" : "function",
        "comment" : "\n",
        "line" : 2053,
        "char" : 12,
        "deco" : "FAyaS3std4uuid4UUIDZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         },
         {
          "name" : "id",
          "deco" : "S3std4uuid4UUID"
         }
        ],
        "endline" : 2063,
        "endchar" : 3
       },
       {
        "name" : "getNext",
        "kind" : "function",
        "comment" : "現在実行中の次のタスクを得る\n",
        "line" : 2065,
        "char" : 12,
        "deco" : "FAyaZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         }
        ],
        "endline" : 2071,
        "endchar" : 3
       },
       {
        "name" : "dropNext",
        "kind" : "function",
        "comment" : "現在実行中のタスクの次のタスクを破棄する。破棄されたタスクを返す。\n",
        "line" : 2073,
        "char" : 12,
        "deco" : "FAyaZC5voile4sync8TaskData",
        "parameters" : [
         {
          "name" : "type",
          "deco" : "Aya"
         }
        ],
        "endline" : 2086,
        "endchar" : 3
       },
       {
        "name" : "types",
        "kind" : "function",
        "comment" : "\n",
        "line" : 2088,
        "char" : 12,
        "deco" : "FZAAya",
        "endline" : 2091,
        "endchar" : 3
       }
      ]
     },
     {
      "name" : "_taskQueue",
      "kind" : "variable",
      "protection" : "private",
      "line" : 2093,
      "char" : 33,
      "storageClass" : [
       "shared"
      ],
      "deco" : "OC5voile4sync__T13ManagedSharedTSQBfQBc14MultiTaskQueue9TaskQueueZQBy",
      "originalType" : "ManagedShared!TaskQueue",
      "offset" : 40
     },
     {
      "name" : "_startTask",
      "kind" : "function",
      "protection" : "private",
      "line" : 2095,
      "char" : 7,
      "deco" : "OFAyaZv",
      "parameters" : [
       {
        "name" : "type",
        "deco" : "Aya"
       }
      ],
      "endline" : 2152,
      "endchar" : 2
     },
     {
      "name" : "_initialize",
      "kind" : "function",
      "protection" : "private",
      "line" : 2154,
      "char" : 7,
      "deco" : "FC3std11parallelism8TaskPoolDFZvZv",
      "parameters" : [
       {
        "name" : "pool",
        "deco" : "C3std11parallelism8TaskPool"
       },
       {
        "name" : "finishPool",
        "deco" : "DFZv"
       }
      ],
      "endline" : 2159,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "\n",
      "line" : 2166,
      "char" : 2,
      "deco" : "FC3std11parallelism8TaskPoolDFZvZC5voile4sync14MultiTaskQueue",
      "originalType" : "(TaskPool pool, void delegate() callbackFinishPool = null)",
      "parameters" : [
       {
        "name" : "pool",
        "deco" : "C3std11parallelism8TaskPool"
       },
       {
        "name" : "callbackFinishPool",
        "deco" : "DFZv",
        "default" : "cast(void delegate())null"
       }
      ],
      "endline" : 2169,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 2172,
      "char" : 2,
      "deco" : "OFC3std11parallelism8TaskPoolDFZvZOC5voile4sync14MultiTaskQueue",
      "originalType" : "shared (TaskPool pool, void delegate() callbackFinishPool = null)",
      "parameters" : [
       {
        "name" : "pool",
        "deco" : "C3std11parallelism8TaskPool"
       },
       {
        "name" : "callbackFinishPool",
        "deco" : "DFZv",
        "default" : "cast(void delegate())null"
       }
      ],
      "endline" : 2177,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 2179,
      "char" : 2,
      "deco" : "FmZC5voile4sync14MultiTaskQueue",
      "originalType" : "(size_t worker = 8)",
      "parameters" : [
       {
        "name" : "worker",
        "deco" : "m",
        "default" : "8LU"
       }
      ],
      "endline" : 2182,
      "endchar" : 2
     },
     {
      "name" : "this",
      "kind" : "constructor",
      "comment" : "ditto\n",
      "line" : 2184,
      "char" : 2,
      "deco" : "OFmZOC5voile4sync14MultiTaskQueue",
      "originalType" : "shared (size_t worker = 8)",
      "parameters" : [
       {
        "name" : "worker",
        "deco" : "m",
        "default" : "8LU"
       }
      ],
      "endline" : 2187,
      "endchar" : 2
     },
     {
      "name" : "dispose",
      "kind" : "function",
      "comment" : " インスタンスを破棄する。\n",
      "line" : 2192,
      "char" : 7,
      "deco" : "FZv",
      "endline" : 2210,
      "endchar" : 2
     },
     {
      "name" : "invoke",
      "kind" : "function",
      "comment" : "\n",
      "line" : 2216,
      "char" : 7,
      "deco" : "FC5voile4sync8TaskDataZb",
      "parameters" : [
       {
        "name" : "tsk",
        "deco" : "C5voile4sync8TaskData"
       }
      ],
      "endline" : 2230,
      "endchar" : 2
     },
     {
      "name" : "invoke",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 2232,
      "char" : 7,
      "deco" : "OFC5voile4sync8TaskDataZb",
      "parameters" : [
       {
        "name" : "tsk",
        "deco" : "C5voile4sync8TaskData"
       }
      ],
      "endline" : 2236,
      "endchar" : 2
     },
     {
      "name" : "invoke",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 2238,
      "char" : 7,
      "deco" : "FAyaDOFZvS3std4uuid4UUIDZb",
      "parameters" : [
       {
        "name" : "type",
        "deco" : "Aya"
       },
       {
        "name" : "dg",
        "deco" : "DOFZv"
       },
       {
        "name" : "id",
        "deco" : "S3std4uuid4UUID",
        "default" : "randomUUID()"
       }
      ],
      "endline" : 2241,
      "endchar" : 2
     },
     {
      "name" : "invoke",
      "kind" : "function",
      "comment" : "ditto\n",
      "line" : 2243,
      "char" : 7,
      "deco" : "OFAyaDOFZvS3std4uuid4UUIDZb",
      "parameters" : [
       {
        "name" : "type",
        "deco" : "Aya"
       },
       {
        "name" : "dg",
        "deco" : "DOFZv"
       },
       {
        "name" : "id",
        "deco" : "S3std4uuid4UUID",
        "default" : "randomUUID()"
       }
      ],
      "endline" : 2246,
      "endchar" : 2
     },
     {
      "name" : "drop",
      "kind" : "function",
      "comment" : "\n",
      "line" : 2249,
      "char" : 7,
      "deco" : "FAyaS3std4uuid4UUIDZv",
      "parameters" : [
       {
        "name" : "type",
        "deco" : "Aya"
       },
       {
        "name" : "id",
        "deco" : "S3std4uuid4UUID"
       }
      ],
      "endline" : 2256,
      "endchar" : 2
     }
    ]
   },
   {
    "name" : "__unittest_L2259_C9",
    "kind" : "function",
    "line" : 2259,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 2433,
    "endchar" : 1
   }
  ]
 },
 {
  "name" : "voile.unique",
  "kind" : "module",
  "file" : "/home/runner/work/voile/voile/voile/unique.d",
  "comment" : " Unique\n",
  "members" : [
   {
    "name" : "std.traits",
    "kind" : "import",
    "line" : 6,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "std.typecons",
    "kind" : "import",
    "line" : 6,
    "char" : 20,
    "protection" : "private"
   },
   {
    "name" : "std.conv",
    "kind" : "import",
    "line" : 6,
    "char" : 34,
    "protection" : "private"
   },
   {
    "name" : "core.memory",
    "kind" : "import",
    "line" : 7,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "core.stdc.stdlib",
    "kind" : "import",
    "line" : 8,
    "char" : 8,
    "protection" : "private",
    "selective" : [
     "malloc",
     "free"
    ]
   },
   {
    "name" : "voile.misc",
    "kind" : "import",
    "line" : 9,
    "char" : 8,
    "protection" : "private"
   },
   {
    "name" : "_d_monitordelete",
    "kind" : "function",
    "protection" : "private",
    "line" : 12,
    "char" : 32,
    "storageClass" : [
     "static"
    ],
    "linkage" : "c",
    "deco" : "UNaC6ObjectbZv",
    "parameters" : [
     {
      "name" : "h",
      "deco" : "C6Object"
     },
     {
      "name" : "det",
      "deco" : "b"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 19,
    "char" : 14,
    "name" : "_destroyImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "_destroyImpl",
      "kind" : "function",
      "line" : 19,
      "char" : 14,
      "type" : "void(ref T obj)",
      "parameters" : [
       {
        "name" : "obj",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 22,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 23,
    "char" : 14,
    "name" : "_destroy",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "_destroy",
      "kind" : "function",
      "line" : 23,
      "char" : 14,
      "type" : "pure void(ref T obj)",
      "parameters" : [
       {
        "name" : "obj",
        "type" : "T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 26,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 28,
    "char" : 9,
    "name" : "TypeOf",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "TypeOf",
      "kind" : "alias",
      "line" : 30,
      "char" : 2,
      "type" : "T"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 34,
    "char" : 9,
    "name" : "uniqueMemberName",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "name",
      "kind" : "value",
      "deco" : "Aya",
      "defaultValue" : "\"_uniqueMemberName\""
     }
    ],
    "members" : [
     {
      "name" : "uniqueMemberName",
      "kind" : "variable",
      "line" : 38,
      "char" : 8,
      "storageClass" : [
       "enum"
      ],
      "init" : "uniqueMemberName!(T, name ~ \"_\")"
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 46,
    "char" : 9,
    "name" : "UniqueDataImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "UniqueDataImpl",
      "kind" : "struct",
      "line" : 46,
      "char" : 9,
      "members" : [
       {
        "name" : "RefT",
        "kind" : "alias",
        "line" : 50,
        "char" : 3,
        "type" : "std.traits.Unqual!T"
       },
       {
        "name" : "_p",
        "kind" : "variable",
        "line" : 57,
        "char" : 7,
        "type" : "RefT"
       },
       {
        "name" : "Dummy",
        "kind" : "enum",
        "line" : 58,
        "char" : 2,
        "members" : [
         {
          "name" : "init",
          "kind" : "enum member",
          "line" : 58,
          "char" : 15
         }
        ]
       },
       {
        "name" : "attach",
        "kind" : "function",
        "comment" : "\n",
        "line" : 63,
        "char" : 7,
        "type" : "pure void(RefT p, size_t sz)",
        "parameters" : [
         {
          "name" : "p",
          "type" : "RefT"
         },
         {
          "name" : "sz",
          "type" : "size_t"
         }
        ],
        "endline" : 73,
        "endchar" : 2
       },
       {
        "name" : "detach",
        "kind" : "function",
        "comment" : "\n",
        "line" : 79,
        "char" : 7,
        "type" : "pure RefT()",
        "endline" : 93,
        "endchar" : 2
       },
       {
        "name" : "_instance",
        "kind" : "function",
        "comment" : " Forwards member access to contents\n",
        "line" : 101,
        "char" : 12,
        "type" : "inout pure nothrow @property @trusted inout(T)()",
        "endline" : 101,
        "endchar" : 57
       },
       {
        "name" : "release",
        "kind" : "function",
        "comment" : "\n",
        "line" : 126,
        "char" : 7,
        "type" : "pure @trusted void()",
        "endline" : 154,
        "endchar" : 2
       },
       {
        "name" : "toHash",
        "kind" : "function",
        "comment" : "\n",
        "line" : 159,
        "char" : 10,
        "type" : "const nothrow @trusted hash_t()",
        "endline" : 165,
        "endchar" : 3
       },
       {
        "kind" : "template",
        "comment" : " Nullifies the current contents.\n",
        "line" : 172,
        "char" : 7,
        "name" : "isEmpty",
        "parameters" : [
         {
          "name" : "This",
          "kind" : "this"
         }
        ],
        "members" : [
         {
          "name" : "isEmpty",
          "kind" : "function",
          "line" : 172,
          "char" : 7,
          "type" : "pure nothrow @property @safe bool()",
          "endline" : 175,
          "endchar" : 2
         }
        ]
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 184,
    "char" : 1,
    "name" : "Unique",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "Unique",
      "kind" : "struct",
      "line" : 184,
      "char" : 1,
      "members" : [
       {
        "kind" : "template",
        "comment" : " Constructor\n",
        "line" : 191,
        "char" : 2,
        "name" : "this",
        "parameters" : [
         {
          "name" : "U",
          "kind" : "type"
         }
        ],
        "constraint" : "is(U == TypeOf!(__traits(getMember, Unique, uniqueMemberName!T).RefT))",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 191,
          "char" : 2,
          "type" : "pure (U p, TypeOf!(__traits(getMember, Unique, uniqueMemberName!T).Dummy) dummy)",
          "parameters" : [
           {
            "name" : "p",
            "type" : "U"
           },
           {
            "name" : "dummy",
            "type" : "TypeOf!(__traits(getMember, Unique, uniqueMemberName!T).Dummy)"
           }
          ],
          "endline" : 196,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Constructor that takes an rvalue.\n It will ensure uniqueness, as long as the rvalue\n isn't just a view on an lvalue (e.g., a cast)\n Typical usage:\n----\nUnique!(Foo) f = new Foo;\n----\n",
        "line" : 207,
        "char" : 2,
        "name" : "this",
        "parameters" : [
         {
          "name" : "U",
          "kind" : "type"
         }
        ],
        "constraint" : "is(U == TypeOf!(__traits(getMember, Unique, uniqueMemberName!T).RefT))",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 207,
          "char" : 2,
          "type" : "(U p, size_t sz)",
          "parameters" : [
           {
            "name" : "p",
            "type" : "U"
           },
           {
            "name" : "sz",
            "type" : "size_t"
           }
          ],
          "endline" : 212,
          "endchar" : 2
         }
        ]
       },
       {
        "kind" : "template",
        "comment" : " Constructor that takes an rvalue.\n It will ensure uniqueness, as long as the rvalue\n isn't just a view on an lvalue (e.g., a cast)\n Typical usage:\n----\nUnique!(Foo) f = unique!Bar;\n----\n",
        "line" : 234,
        "char" : 2,
        "name" : "this",
        "parameters" : [
         {
          "name" : "U",
          "kind" : "type"
         }
        ],
        "constraint" : "!is(U == T) && is(U : T)",
        "members" : [
         {
          "name" : "this",
          "kind" : "constructor",
          "line" : 234,
          "char" : 2,
          "type" : "(Unique!U u)",
          "parameters" : [
           {
            "name" : "u",
            "type" : "Unique!U"
           }
          ],
          "endline" : 242,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "~this",
        "kind" : "destructor",
        "line" : 245,
        "char" : 2,
        "storageClass" : [
         "pure"
        ],
        "endline" : 251,
        "endchar" : 2
       },
       {
        "kind" : "template",
        "comment" : "\n",
        "line" : 257,
        "char" : 7,
        "name" : "proxySwap",
        "parameters" : [],
        "constraint" : "!is(typeof(T.init.proxySwap(T.init)))",
        "members" : [
         {
          "name" : "proxySwap",
          "kind" : "function",
          "line" : 257,
          "char" : 7,
          "type" : "@safe void(ref Unique u)",
          "parameters" : [
           {
            "name" : "u",
            "type" : "Unique",
            "storageClass" : [
             "ref"
            ]
           }
          ],
          "endline" : 266,
          "endchar" : 2
         }
        ]
       },
       {
        "name" : "opAssign",
        "kind" : "function",
        "comment" : "\n",
        "line" : 269,
        "char" : 13,
        "type" : "ref Unique(Unique u)",
        "parameters" : [
         {
          "name" : "u",
          "type" : "Unique"
         }
        ],
        "endline" : 282,
        "endchar" : 2
       },
       {
        "name" : "Proxy!(mixin(uniqueMemberName!T))",
        "kind" : "mixin",
        "line" : 284,
        "char" : 2
       }
      ]
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 291,
    "char" : 10,
    "name" : "unique",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "(is(T == class) || is(T == struct) || is(T == union)) && !isNested!T || !(is(T == class) || is(T == struct) || is(T == union))",
    "members" : [
     {
      "name" : "unique",
      "kind" : "function",
      "line" : 291,
      "char" : 10,
      "type" : "@trusted Unique!T(Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 296,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "protection" : "private",
    "line" : 298,
    "char" : 18,
    "name" : "uniqueImpl",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     },
     {
      "name" : "Args",
      "kind" : "tuple"
     }
    ],
    "constraint" : "is(Unique!T)",
    "members" : [
     {
      "name" : "uniqueImpl",
      "kind" : "function",
      "line" : 298,
      "char" : 18,
      "type" : "Unique!T(Args args)",
      "parameters" : [
       {
        "name" : "args",
        "type" : "Args"
       }
      ],
      "endline" : 312,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 315,
    "char" : 6,
    "name" : "release",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "release",
      "kind" : "function",
      "line" : 315,
      "char" : 6,
      "type" : "void(ref Unique!T u)",
      "parameters" : [
       {
        "name" : "u",
        "type" : "Unique!T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 318,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : "\n",
    "line" : 321,
    "char" : 6,
    "name" : "isEmpty",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "isEmpty",
      "kind" : "function",
      "line" : 321,
      "char" : 6,
      "type" : "bool(ref Unique!T u)",
      "parameters" : [
       {
        "name" : "u",
        "type" : "Unique!T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 324,
      "endchar" : 1
     }
    ]
   },
   {
    "name" : "__unittest_L327_C9",
    "kind" : "function",
    "line" : 327,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 382,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L382_C9",
    "kind" : "function",
    "line" : 382,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 432,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L432_C9",
    "kind" : "function",
    "line" : 432,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 490,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L490_C9",
    "kind" : "function",
    "line" : 490,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 524,
    "endchar" : 1
   },
   {
    "name" : "__unittest_L524_C9",
    "kind" : "function",
    "line" : 524,
    "char" : 9,
    "storageClass" : [
     "@system"
    ],
    "endline" : 585,
    "endchar" : 1
   },
   {
    "kind" : "template",
    "comment" : " 生データを利用できない形で返す\n",
    "line" : 585,
    "char" : 6,
    "name" : "toRawData",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "toRawData",
      "kind" : "function",
      "line" : 585,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(ref Unique!T u)",
      "parameters" : [
       {
        "name" : "u",
        "type" : "Unique!T",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 591,
      "endchar" : 1
     }
    ]
   },
   {
    "kind" : "template",
    "comment" : " 生データから利用できる形のUnique型へと変換する\n",
    "line" : 596,
    "char" : 6,
    "name" : "toUnique",
    "parameters" : [
     {
      "name" : "T",
      "kind" : "type"
     }
    ],
    "members" : [
     {
      "name" : "toUnique",
      "kind" : "function",
      "line" : 596,
      "char" : 6,
      "storageClass" : [
       "auto"
      ],
      "type" : "(ref ReturnType!(toRawData!T) d)",
      "parameters" : [
       {
        "name" : "d",
        "type" : "ReturnType!(toRawData!T)",
        "storageClass" : [
         "ref"
        ]
       }
      ],
      "endline" : 604,
      "endchar" : 1
     }
    ]
   }
  ]
 }
]
